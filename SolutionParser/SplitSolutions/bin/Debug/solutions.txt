7 kyu
Sort by Last Char
JavaScript:

function last(x) {
  return x.split(" ").sort((x, y) => x.slice(-1) > y.slice(-1) ? 1 : -1);
}
2 months agoRefactorDiscuss
7 kyu
Simple beads count
JavaScript:

function countRedBeads(n) {
  return n < 2 ? 0 : 2 * n - 2;
}
2 months agoRefactorDiscuss
7 kyu
Who's Online?
JavaScript:

const whosOnline = (friends) => {
  const output = {};
  
  const online = [];
  const offline = [];
  const away = [];
  
  for (let friend of friends) {
    if (friend.status === "offline") {
      offline.push(friend.username);
    }
    else if (friend.lastActivity > 10) {
      away.push(friend.username);
    }
    else {
      online.push(friend.username);
    }
  }
  
  if (online.length) {
    output.online = online;
  }
  
  if (offline.length) {
    output.offline = offline;
  }
  
  if (away.length) {
    output.away = away;
  }
  
  return output;
}
2 months agoRefactorDiscuss
7 kyu
Remove the noise from the string
JavaScript:

function removeNoise(str) {
  return str.replace(/[%$&/#·@|º\\ª]/g, "");
}
5 months agoRefactorDiscuss
7 kyu
Form The Minimum
Python:

def min_value(digits):
    return int("".join(sorted(set("".join(map(str, digits))))))
6 months agoRefactorDiscuss
C#:

using System.Linq;

class Kata
{
  public static long MinValue(int[] a)
  {
    return long.Parse(string.Join("", a.Distinct().OrderBy(x => x)));
  }
}
5 months agoRefactorDiscuss
6 kyu
Parse HTML/CSS Colors
C#:

using System;
using System.Collections.Generic;

class HtmlColorParser
{
  private readonly IDictionary<string, string> presetColors;

  public HtmlColorParser(IDictionary<string, string> presetColors)
  {
    this.presetColors = presetColors;
  }

  public RGB Parse(string color)
  {
    color = color.ToLower();
  
    if (color.StartsWith("#"))
    {
      if (color.Length == 7)
      {
        return new RGB(
          Convert.ToByte(color.Substring(1, 2), 16),
          Convert.ToByte(color.Substring(3, 2), 16),
          Convert.ToByte(color.Substring(5, 2), 16)
        );
      }
      else if (color.Length == 4)
      {
        return new RGB(
          Convert.ToByte(new string(color[1], 2), 16),
          Convert.ToByte(new string(color[2], 2), 16),
          Convert.ToByte(new string(color[3], 2), 16)
        );
      }
    }
    else if (presetColors.ContainsKey(color))
    {
      return this.Parse(presetColors[color]);
    }

    throw new ArgumentException("Invalid Color Value: " + color);
  }
}
5 months agoRefactorDiscuss
6 kyu
Hide phone numbers
JavaScript:

String.prototype.reverse = function() {
  return this.split("").reverse().join("");
}

function encryptNum(number) {console.log(number);
  if (!/^(\+39|0039|1)([ .-]?\d{3}){2}[ .-]?\d{4}$/.test(number)) {
    return false;
  }

  number = number.reverse();

  for (let x = 0; x < 6; x++) {
    number = number.replace(/\d(.*)$/, (a, b) => "X" + b);
  }

  return number.reverse();
}
5 months agoRefactorDiscuss
6 kyu
Binary Tree Compare
JavaScript:

// return true if the binary trees rooted and a and b are equal in structure and value
// return false otherwise
function compare(a, b) {
  if (!a || !b) {
    return a === b;
  }
  
  return a.val === b.val && compare(a.left, b.left) && compare(a.right, b.right);
}
5 months agoRefactor
// return true if the binary trees rooted and a and b are equal in structure and value
// return false otherwise
function compare(a, b) {
  if (!a || !b) {
    return a === b;
  }
  
  if (a.val === b.val) {
    return compare(a.left, b.left) && compare(a.right, b.right);
  }
  
  return false;
}
5 months agoRefactorDiscuss
// return true if the binary trees rooted and a and b are equal in structure and value
// return false otherwise
function compare(a, b) {
  if (!a && !b) {
    return true;
  }
  
  if (!a || !b) {
    return false;
  }

  if (a.val === b.val) {
    return compare(a.left, b.left) && compare(a.right, b.right);
  }
  
  return false;
}
5 months agoRefactorDiscuss
7 kyu
Reverse a Number
C#:

using System;
using System.Linq;

public class Kata
{
  public int ReverseNumber(int n)
  {
    string sign = n < 0 ? "-" : "";
    return int.Parse(sign + string.Join("", Math.Abs(n).ToString().Reverse()));
  }
}
5 months agoRefactorDiscuss
7 kyu
Sort Out The Men From Boys
JavaScript:

function menFromBoys(arr) {
  const men = new Set();
  const boys = new Set();
  
  for (let male of arr) {
    const maleSet = male % 2 ? boys : men;
    maleSet.add(male);
  }
  
  return [...men].sort((a, b) => a - b).concat([...boys].sort((a, b) => b - a));
}
5 months agoRefactorDiscuss
7 kyu
NLP-Series #1 - Inverted Index
JavaScript:

function buildInvertedIndex(collection, term, caseSensitive, exactMatch) {
  let regex;
  const flags = caseSensitive ? "" : "i";
  
  if (exactMatch) {
    regex = new RegExp("\\b" + term + "\\b", flags);
  }
  else {
    regex = new RegExp(term, flags);
  }
  
  return collection.reduce((t, x, i) => {
    if (regex.test(x)) {
      t.push(i + 1);
    }
    
    return t;
  }, []);
}
5 months agoRefactorDiscuss
7 kyu
Coding Meetup #12 - Higher-Order Functions Series - Find GitHub admins
JavaScript:

function findAdmin(list, lang) {
  return list.filter(x => x.language === lang && x.githubAdmin === "yes");
}
5 months agoRefactorDiscuss
7 kyu
esreveR
JavaScript:

reverse = function(array) {
  const reversed = [];
  
  for (let x = array.length - 1; x > -1; x--) {
    reversed.push(array[x]);
  }
  
  return reversed;
};
5 months agoRefactorDiscuss
8 kyu
Exclamation marks series #6: Remove n exclamation marks in the sentence from left to right
C#:

public class Kata
{
  public static string Remove(string s, int n)
  {
    for (int x = 0; x < n; x++)
    {
      int index = s.IndexOf('!');
      
      if (index == -1)
      {
        break;
      }
      else
      {
        s = s.Remove(index, 1);
      }
    }
    
    return s;
  }
}
5 months agoRefactorDiscuss
7 kyu
How Many Unique Consonants?
JavaScript:

function countConsonants(str) {
  const matches = [...new Set(str.toLowerCase())]
    .join("")
    .match(/(?=[^aeiou])(?=[a-z])/g);
    
  return matches ? matches.length : 0;
}
5 months agoRefactorDiscuss
7 kyu
Product Array (Array Series #5)
JavaScript:

function productArray(numbers) {
  return numbers.map((x, i) =>
    numbers.reduce((t, y, idx) => t * (i === idx ? 1 : y), 1));
}
5 months agoRefactorDiscuss
7 kyu
The Deca Tree
JavaScript:

function tree(trunks) {
    this.trunks = trunks;
    this.branches = trunks * 10;
    this.twigs = trunks * 100;
    this.leaves = trunks * 1000;
    
    this.chopLeaf = (n) => {
      this.leaves = Math.max(this.leaves - n, 0);
    };
    
    this.chopTwig = (n) => {
      this.twigs = Math.max(this.twigs - n, 0);
      this.chopLeaf(n * 10);
    };
    
    this.chopBranch = (n) => {
      this.branches = Math.max(this.branches - n, 0);
      this.chopTwig(n * 10);
    };
    
    this.chopTrunk = (n) => {
      this.trunks = Math.max(this.trunks - n, 0);
      this.chopBranch(n * 10);
    };
    
    this.describe = () => {
      return `This tree has ${this.trunks} trunks, ${this.branches} branches, `
        + `${this.twigs} twigs and ${this.leaves} leaves.`;
    };
}
5 months agoRefactorDiscuss
6 kyu
Find X
JavaScript:

// optimize
function findX(n) {
  let x = 0;
  const n2 = n * 2;
  
  for (let i = 0; i < n; i++) {
    x += i + (n2 * (n2 - 1) / 2) + (n2 - 1) * i;
  }
  
  return x;
}
5 months agoRefactorDiscuss
6 kyu
XOR string reduction
JavaScript:

X=s=>[...s].reduce((t,x)=>t^=x,0)
5 months agoRefactorDiscuss
6 kyu
The nth smallest integer
Python:

def nth_smallest(arr, n):
    distinct = sorted(set(arr))
    
    if n > len(distinct):
        return None
    
    return distinct[n - 1]
5 months agoRefactorDiscuss
7 kyu
Powers of i
JavaScript:

function pofi(n) {
  return n % 4 === 0
    ? "1"
    : n % 4 === 1
      ? "i"
      : n % 4 === 2
        ? "-1"
        : n % 4 === 3
          ? "-i"
          : "N/A";
}
5 months agoRefactorDiscuss
7 kyu
IPv4 Validator
C#:

using System.Linq;
using System.Text.RegularExpressions;
  
public class Kata
{
  public static bool IpValidator(string ip)
  {
    return Regex.IsMatch(ip, @"^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$") &&
      ip.Split('.').All(x => int.Parse(x) < 256);
  }
}
5 months agoRefactorDiscuss
7 kyu
Stop the loop after n seconds
Python:

from datetime import datetime

def increment_loop(n):
    start = datetime.now()
    i = 0
    while True:
        if (datetime.now() - start).total_seconds() >= n:
            return i
        i += 1
    
5 months agoRefactorDiscuss
8 kyu
Training JS #18: Methods of String object--concat() split() and its good friend join()
JavaScript:

function splitAndMerge(str, sp) {
  return str.split(" ").map(x => x.split("").join(sp)).join(" ");
}
5 months agoRefactorDiscuss
7 kyu
Coding Meetup #17 - Higher-Order Functions Series - Sort by programming language
JavaScript:

function sortByLanguage(list) {
  return list.sort((a, b) => {
    if (a.language < b.language) {
      return -1;
    }
    
    if (a.language > b.language) {
      return 1;
    }
    
    if (a.firstName < b.firstName) {
      return -1;
    }
    
    if (a.firstName > b.firstName) {
      return 1;
    }
    
    return 0;
  });
}
5 months agoRefactorDiscuss
7 kyu
Alphabetically ordered
Python:

def alphabetic(s):
    return "".join(sorted(s)) == s 
5 months agoRefactorDiscuss
6 kyu
Clean up your Gibberish!
JavaScript:

function cleanItUp(data) {
  data = data.replace(/[^a-z]/gi, "").toLowerCase();
  const words = [];
  
  for (let x = 0; x < data.length - 4; x += 5) {
    words.push(data[x].toUpperCase() + data.slice(x + 1, x + 5));
  }
  
  return words.join(" ");
}
5 months agoRefactorDiscuss
function cleanItUp(data) {
  data = data.replace(/[^a-z]/gi, "");
  const words = [];
  
  for (let x = 0; x < data.length - 4; x += 5) {
    words.push(data[x].toUpperCase() + data.slice(x + 1, x + 5).toLowerCase());
  }
  
  return words.join(" ");
}
5 months agoRefactorDiscuss
7 kyu
The Ladies of ENIAC
JavaScript:

function radLadies(name) {
  return name.replace(/[^a-z\s!]/gi, "").toUpperCase();
}
5 months agoRefactorDiscuss
6 kyu
Simple Simple Simple String Expansion
JavaScript:

function stringExpansion(s) {
  return s.replace(/(\d[^\d]+)/g, (_, x) => 
    x.slice(1).split("").map(y => y.repeat(x[0])).join(""))
      .replace(/\d+/g, "");
}
5 months agoRefactorDiscuss
8 kyu
Grasshopper - Terminal game combat function
Go:

package kata

import "math"

func combat(health, damage float64) float64 {
  return math.Max(health - damage, 0)
}
5 months agoRefactorDiscuss
7 kyu
Test's results
Python:

def test(r):
    avg = round(sum(r) / len(r), 3)
    
    hal = { "h": 0, "a": 0, "l": 0 }
    
    for mark in r:
        if mark > 8:
            hal["h"] += 1
        elif mark > 6:
            hal["a"] += 1
        else:
            hal["l"] += 1
    
    return [avg, hal, "They did well"] if hal["h"] == len(r) else [avg, hal]
    
5 months agoRefactorDiscuss
7 kyu
Array2Binary addition
JavaScript:

function arr2bin(arr) {
  return arr && arr.length != 0
    ? arr.every(x => typeof x === "number") 
      ? arr.reduce((t, x) => t + x, 0).toString(2)
      : false
    : "0";
}
6 months agoRefactorDiscuss
7 kyu
See You Next Happy Year
JavaScript:

function nextHappyYear(year) {
  do {
    year++;
  } while (new Set(year.toString()).size !== 4)
  
  return year;
}
6 months agoRefactorDiscuss
8 kyu
Find the smallest integer in the array
C#:

using System.Linq;

public class Kata 
{
    public static int FindSmallestInt(int[] args) 
    {
        return args.Min();
    }
}
11 months agoRefactorDiscuss
R:

findSmallestInt <- function(arr) {
  min <- arr[1]

  for (x in arr) {
    if (x < min) {
      min = x
    }
  }
  
  return(min)
}
6 months agoRefactorDiscuss
6 kyu
1RM Calculator
JavaScript:

function calculate1RM(w, r) {
  if (r <= 0) {
    return 0;
  }
  
  if (r === 1) {
    return w;
  }

  return Math.round(Math.max(w * (1 + r / 30),
    (100 * w) / (101.3 - 2.67123 * r),
    w * Math.pow(r, 0.1)), 0);
}
6 months agoRefactorDiscuss
6 kyu
Follow that Spy
JavaScript:

// it should return the places from the given routes
function findRoutes(routes) {
  let node = routes
    .filter(x => routes.reduce((t, y) => t + (y[1] === x[0]), 0) === 0)[0];
  const route = new Set(node);
  
  for (let x = 1; x < routes.length; x++) {
    node = routes.filter(x => x[0] === node[1])[0];
    route.add(...node);
  }
  
  route.add(node[1]);
  
  return [...route].join(", ");
}
6 months agoRefactorDiscuss
7 kyu
ORing arrays
JavaScript:

function orArrays(arr1, arr2, or) {
  return arr1.length > arr2.length
    ? arr1.map((x, i) => x | (arr2[i] || or))
    : arr2.map((x, i) => x | (arr1[i] || or));
}
6 months agoRefactorDiscuss
7 kyu
Multiply Word in String
JavaScript:

function modifyMultiply(str, loc, num) {
  return (str.split(" ")[loc] + "-").repeat(num).slice(0, -1);
} 
6 months agoRefactorDiscuss
6 kyu
CamelCase Method
C#:

using System.Linq;
using System.Text.RegularExpressions;

namespace Kata
{
  public static class Problem
  {
    public static string CamelCase(this string str)  
    {
      str = Regex.Replace(str.Trim(), @"\s+", " ");
    
      if (str == "")
      {
        return str;
      }
      
      return string.Join("", str
        .Split(' ')
        .Select(x => x.Substring(0, 1).ToUpper() +
          (x.Length > 1 ? x.Substring(1).ToLower() : "")));
    }
  }
}

6 months agoRefactorDiscuss
8 kyu
Convert a string to an array
C#:

namespace Solution {
  public class Solution
  {
    public static string[] StringToArray(string str)
    {
      return str.Split(' ');
    }
  }
}
6 months agoRefactorDiscuss
CoffeeScript:

stringToArray = (string) ->
  string.split(" ")
6 months agoRefactorDiscuss
JavaScript:

function stringToArray(string) {
  return string.split(" ");
}
6 months agoRefactorDiscuss
Python:

def string_to_array(s):
    return s.split(" ")
6 months agoRefactorDiscuss
Ruby:

def string_to_array(string)
  return string.split(" ")
end
6 months agoRefactorDiscuss
TypeScript:

export function stringToArray(s: string): string[] {
  return s.split(" ");
}
6 months agoRefactorDiscuss
7 kyu
Converting integer to currency format
C#:

public class Kata
{
  public static string ToCurrency(int price)
  {
    return price.ToString("n0");
  }
}
6 months agoRefactorDiscuss
7 kyu
Check three and two
JavaScript:

function checkThreeAndTwo(array) {
  const counts = Object.values(array.reduce((t, x) => {
    t[x]++;
    return t;
  }, {a: 0, b: 0, c: 0}));
  
  return counts.includes(3) && counts.includes(2);
}
6 months agoRefactorDiscuss
7 kyu
Maximum Triplet Sum (Array Series #7)
JavaScript:

function maxTriSum(numbers) {
  return [...new Set(numbers)]
    .sort((x, y) => y - x)
    .slice(0, 3)
    .reduce((t, x) => t + x);
}
6 months agoRefactorDiscuss
7 kyu
Odd or Even?
C#:

using System.Linq;

public class Kata
{
  public static string OddOrEven(int[] array)
  {
    return array.Sum() % 2 == 0 ? "even" : "odd";
  }
}
6 months agoRefactorDiscuss
7 kyu
Row Weights
JavaScript:

function rowWeights(array) {
  return array.reduce((t, x, i) => {
    t[i % 2] += x;
    return t;
  }, [0, 0]);
}
6 months agoRefactorDiscuss
7 kyu
Maximum Multiple
JavaScript:

function maxMultiple(divisor, bound) {
  for (let x = bound; x > 0; x--) {
    if (x % divisor === 0) {
      return x;
    }
  }
  
  return 0;
}
6 months agoRefactorDiscuss
7 kyu
ToLeetSpeak
JavaScript:

const dict = {
  A : '@',
  B : '8',
  C : '(',
  D : 'D',
  E : '3',
  F : 'F',
  G : '6',
  H : '#',
  I : '!',
  J : 'J',
  K : 'K',
  L : '1',
  M : 'M',
  N : 'N',
  O : '0',
  P : 'P',
  Q : 'Q',
  R : 'R',
  S : '$',
  T : '7',
  U : 'U',
  V : 'V',
  W : 'W',
  X : 'X',
  Y : 'Y',
  Z : '2'
};

function toLeetSpeak(str) {
  for (let x in dict) {
    str = str.split(x).join(dict[x]);
  }

  return str;
}
6 months agoRefactorDiscuss
8 kyu
Basic subclasses - Adam and Eve
C#:

public class God
{
  public static Human[] Create()
  {
    return new Human[] { new Man(), new Woman() };
  }
}

public class Human { }
public class Man : Human { }
public class Woman : Human { }
6 months agoRefactorDiscuss
7 kyu
Special Number (Special Numbers Series #5)
JavaScript:

function specialNumber(n) {
  return n.toString().split("").every(x => x < 6)
    ? "Special!!"
    : "NOT!!";
}
6 months agoRefactorDiscuss
8 kyu
Holiday VI - Shark Pontoon
JavaScript:

function shark(pontoonDistance, sharkDistance, youSpeed, sharkSpeed, dolphin) {
  if (dolphin) {
    sharkSpeed /= 2;
  }

  return pontoonDistance / youSpeed > sharkDistance / sharkSpeed
    ? "Shark Bait!"
    : "Alive!";
}
6 months agoRefactorDiscuss
7 kyu
Product Of Maximums Of Array (Array Series #2)
JavaScript:

function maxProduct(numbers, size) {
  return numbers
    .sort((a, b) => b - a)
    .slice(0, size)
    .reduce((t, x) => t * x);
}
6 months agoRefactorDiscuss
7 kyu
So Easy: Show my password
JavaScript:

function showMyPassword(birthdays) {
  birthdays = birthdays.map(x => new Date(x)).sort((a, b) => a - b);
  
  return birthdays[2].getFullYear().toString().substring(2) +
    birthdays[3].getFullYear().toString().substring(2) +
    (birthdays[0].getMonth() + 1).toString().padStart(2, "0") +
    birthdays[1].getDate().toString().padStart(2, "0");
}
6 months agoRefactorDiscuss
7 kyu
String Reversing, Changing case, etc.
Python:

def invert_case(word):
    return "".join(x.lower() if x.isupper() else x.upper() for x in word)

def reverse_and_mirror(s1, s2):
    s1 = invert_case(s1)
    return invert_case(s2[::-1]) + "@@@" + s1[::-1] + s1
6 months agoRefactorDiscuss
8 kyu
Student's Final Grade
JavaScript:

function finalGrade(exam, projects) {
  if (exam > 90 || projects > 10) {
    return 100;
  }
  
  if (exam > 75 && projects >= 5) {
    return 90;
  }
  
  if (exam > 50 && projects >= 2) {
    return 75;
  }
  
  return 0;
}
6 months agoRefactorDiscuss
7 kyu
The old switcheroo
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static string Vowel2Index(string str)
  {
    return Regex.Replace(str, "[aeiou]", m => (m.Index + 1).ToString());
  }
}
6 months agoRefactor
using System.Text.RegularExpressions;

public class Kata
{
  public static string Vowel2Index(string str)
  {
    return Regex.Replace(str, "a|e|i|o|u", m => (m.Index + 1).ToString());
  }
}
6 months agoRefactorDiscuss
6 kyu
Regexp Basics - is it IPv4 address?
JavaScript:

String.prototype.ipv4Address = function() {
  const octets = this.split(".");
  return octets.length === 4 && 
    octets.every(x => 
      x.length > 0 && x === x.trim() && x < 256 && x > -1 && x.length === parseInt(x).toString().length);
};
6 months agoRefactorDiscuss
7 kyu
Coding Meetup #1 - Higher-Order Functions Series - Count the number of JavaScript developers coming from Europe
JavaScript:

function countDevelopers(list) {
  return list.reduce((t, x) => t + (x.continent === "Europe" && x.language === "JavaScript"), 0);
}
6 months agoRefactorDiscuss
6 kyu
Simple Sentences
JavaScript:

function makeSentence(parts) {
  return (parts.join(" ") + ".")
    .replace(/ ,/g, ",")
    .replace(/ \./g, ".")
    .replace(/\.{2,}/g, ".");
}
6 months agoRefactorDiscuss
6 kyu
Evil Autocorrect Prank
JavaScript:

function autocorrect(input) {
  return input.replace(/\b(u|you+)\b/ig, "your sister");
}
6 months agoRefactorDiscuss
5 kyu
Extract the domain name from a URL
JavaScript:

function domainName(url) {
  return url.match(/(?:https?:\/\/)?(?:www.)?([^.]+)/)[1];
}
6 months agoRefactorDiscuss
7 kyu
Word values
C#:

using System.Linq;

public class Kata
{
  const string ALPHA = "abcdefghijklmnopqrstuvwxyz";
  
  public static int[] WordValue(string[] a)
  {
    return a.Select((x, i) => x.Sum(y => ALPHA.IndexOf(y) + 1) * (i + 1)).ToArray();
  }
}
6 months agoRefactorDiscuss
8 kyu
Is n divisible by x and y?
C#:

public class DivisibleNb
{
	public static bool isDivisible(long n, long x, long y)
  {
    return n % x == 0 && n % y == 0;
	}
}
6 months agoRefactorDiscuss
8 kyu
All Star Code Challenge #18
JavaScript:

function strCount(str, letter) {
  const matches = str.match(new RegExp(letter, "g"));
  return matches ? matches.length : 0;
}
6 months agoRefactorDiscuss
7 kyu
Adding remainders to a list
Python:

def solve(nums, div):
    return [x + (x % div) for x in nums]
    
6 months agoRefactorDiscuss
7 kyu
Trim method
JavaScript:

String.prototype.trim = function(c) {
  c = c || " ";
  const r1 = new RegExp(`^${c}+`, "gi");
  const r2 = new RegExp(`${c}+$`, "gi");
  return this.replace(r1, "").replace(r2, "");
};
6 months agoRefactorDiscuss
6 kyu
Validate my Password
JavaScript:

function validPass(password) {
  return /^(?=.*\d)(?=.*\w)[\w\d]{4,19}$/.test(password)
    ? "VALID"
    : "INVALID";
}
6 months agoRefactorDiscuss
6 kyu
One line task: Square Every Digit
JavaScript:

sd=x=>+[...""+x].map(n=>n*n).join``
6 months agoRefactorDiscuss
8 kyu
Abbreviate a Two Word Name
C#:

public class Kata
{
  public static string AbbrevName(string name)
  {
    var names = name.ToUpper().Split(' ');
    return names[0].Substring(0, 1) + "." + names[1].Substring(0, 1);
  }
}
6 months agoRefactorDiscuss
6 kyu
HTML dynamic color string generation
JavaScript:

var generateColor = function() {
  const hex = [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "a", "b", "c", "d", "e", "f" ];
  let color = "#";
  
  for (let x = 0; x < 6; x++) {
    color += hex[Math.floor(Math.random() * hex.length)];
  }
  
  return color;
};
6 months agoRefactorDiscuss
7 kyu
Monty Hall Problem
Python:

def monty_hall(correct_door, guesses):
    correct_guesses = 0
    
    for guess in guesses:
        if guess != correct_door:
            correct_guesses += 1
            
    return round(100.0 * (correct_guesses / len(guesses)))
            
6 months agoRefactorDiscuss
8 kyu
validate code with simple regex
JavaScript:

function validateCode(code) {
  return /^[123]\d+/.test(code);
}
7 months agoRefactorDiscuss
8 kyu
Simple validation of a username with regex
JavaScript:

function validateUsr(username) {
  return /^[a-z_\d]{4,16}$/.test(username);
}
7 months agoRefactorDiscuss
8 kyu
Regexp Basics - is it a digit?
TypeScript:

String.prototype.digit = function(): boolean {
  return /^\d$/.test(this);
};
7 months agoRefactorDiscuss
5 kyu
Regex Password Validation
JavaScript:

function validate(password) {
  return /(?=.*[A-Z])(?=.*[a-z])(?=.*\d)[A-Za-z\d]{6,}$/.test(password);
}
7 months agoRefactorDiscuss
7 kyu
Disorganised page lists
Python:

def find_page_number(pages):
    bad_pages = []
    count = 1
    
    for page in pages:
        if page != count:
            bad_pages.append(page)
        else:
            count += 1
            
    return bad_pages
7 months agoRefactorDiscuss
8 kyu
My head is at the wrong end!
CoffeeScript:

fixTheMeerkat = (array) -> array.reverse()
7 months agoRefactorDiscuss
8 kyu
Powers of 2
F#:

let powersOfTwo n = seq { for i in 0 .. n -> pown 2 i } |> Seq.toList
7 months agoRefactorDiscuss
8 kyu
Welcome to the City
Java:

public class Hello {
  public String sayHello(String [] name, String city, String state) {
    return "Hello, " + String.join(" ", name) + "! Welcome to " + city + ", " + state + "!";
  }
}
7 months agoRefactorDiscuss
7 kyu
Sum of all arguments
JavaScript:

function sum() {
  return [...arguments].reduce((t, x) => t + x);
}
7 months agoRefactorDiscuss
7 kyu
Count the Digit
C#:

using System.Linq;

public class CountDig 
{
  public static int NbDig(int n, int d) 
  {
    char digit = char.Parse(d.ToString());
    
    return Enumerable.Range(0, n + 1)
      .Select(x => x * x)
      .Sum(x => x.ToString().Count(y => y == digit));
  }
}
7 months agoRefactorDiscuss
8 kyu
Volume of a Cuboid
Haskell:

module Kata where

getVolumeOfCuboid :: Double -> Double -> Double -> Double
getVolumeOfCuboid l w h = l * w * h
7 months agoRefactorDiscuss
8 kyu
Invert values
C#:

using System.Linq;

namespace Solution
{
  public static class ArraysInversion
  {
    public static int[] InvertValues(int[] input)
    {
      return input.Select(x => -x).ToArray();
    }
  }
}
7 months agoRefactorDiscuss
6 kyu
Persistent Bugger.
C#:

using System.Linq;

public class Persist 
{
	public static int Persistence(long n) 
	{
    if (n < 10)
    {
      return 0;
    }
    
    int count = 0;
    
		while (true)
    {
      n = n.ToString().Aggregate(1, (t, x) => t * int.Parse(x.ToString()));
      count++;
      
      if (n < 10)
      {
        break;
      }
    }
    
    return count;
	}
}
7 months agoRefactorDiscuss
7 kyu
Is this a triangle?
C++:

namespace Triangle
{
  bool isTriangle(int a, int b, int c)
  {
    long x = a;
    long y = b;
    long z = c;
  
    return x + y > z && x + z > y && y + z > x;
  }
};
7 months agoRefactorDiscuss
7 kyu
Watching your pennies
JavaScript:

function manageMoney(cash, expenses, rate) {
  rate = rate * 0.01;
  
  for (let x = 0; x < 12; x++) {
    cash += cash * rate - expenses;
    
    if (cash <= 0) {
      return `You ran out of money after ${x} months`;
    }
  }
  
  return "You still have $" + cash.toFixed(2);
}
7 months agoRefactorDiscuss
7 kyu
Regexp Basics - is it a vowel?
C#:

using System;
using System.Text.RegularExpressions;

public static class Kata
{
  public static bool Vowel(this string s)
  {
    return s.Length == 1 && Regex.IsMatch(s, "^[aeiou]$", RegexOptions.IgnoreCase);
  }
}
7 months agoRefactorDiscuss
7 kyu
Is valid identifier?
JavaScript:

function isValid(idn) {
  return /^[$a-z_][$a-z_\d]+$/i.test(idn);
}
7 months agoRefactorDiscuss
7 kyu
Russian postal code checker
JavaScript:

function zipvalidate(postcode) {
  return /^[1-4|6]\d{5}$/.test(postcode);
}
7 months agoRefactorDiscuss
8 kyu
A Strange Trip to the Market
C#:

public static class Kata 
{
  public static bool IsLockNessMonster(string sentence) 
  {
    sentence = sentence.ToLower();
    return sentence.Contains("tree fiddy") || 
      sentence.Contains("three fifty") || 
      sentence.Contains("3.50");
  }
}
7 months agoRefactorDiscuss
6 kyu
Coordinates Validator
JavaScript:

function isValidCoordinates(coordinates) {
  const coords = coordinates.split(", ").map(x => Math.abs(parseInt(x)));
  
  if (!coordinates || !coords[0] || !coords[1] ||
    coords[0] < 0 || coords[0] > 90 ||
    coords[1] < 0 || coords[1] > 180)
  {
    return false;
  }

  return /^-?\d+\.?\d*, -?\d+\.?\d*$/.test(coordinates);
}
7 months agoRefactorDiscuss
7 kyu
Add property to every object in array
JavaScript:

questions.map(x => x.usersAnswer = null);
7 months agoRefactorDiscuss
7 kyu
Arithmetic List!
JavaScript:

var seqlist = function(first, c, l) {
  const array = [first];
  
  for (let x = 1; x < l; x++) {
    array.push(array[x - 1] + c);
  }
  
  return array;
};
7 months agoRefactorDiscuss
8 kyu
Regex count lowercase letters
C#:

using System.Linq;
using System.Text.RegularExpressions;

public class Kata
{
  public static int LowercaseCountCheck(string s)
  {
    return s.Count(x => Regex.IsMatch(x.ToString(), "[a-z]"));
  }
}
7 months agoRefactorDiscuss
6 kyu
Prefill an Array
JavaScript:

function prefill(n, v) {
  if (n != parseInt(n) || n < 0) {
    throw new TypeError(`${n} is invalid`);
  }
  
  if (n == 0) {
    return [];
  }

  return new Array(n).fill(v);
}
7 months agoRefactorDiscuss
8 kyu
Classic Hello World
Shell:

#!/bin/bash
function Solution
{
    function main
    {
        echo "Hello World!"
    }
    main
}
Solution
7 months agoRefactorDiscuss
7 kyu
List to Array
JavaScript:

function listToArray(list) {
  const array = [list.value];
  
  while (list = list.next) {
    array.push(list.value);
  }
  
  return array;
}
7 months agoRefactorDiscuss
6 kyu
Valid Phone Number
JavaScript:

function validPhoneNumber(phoneNumber) {
  return /^\(\d{3}\) \d{3}-\d{4}$/.test(phoneNumber);
}
7 months agoRefactorDiscuss
8 kyu
Grader
C#:

public class Kata
{
  public static char Grader(double score)
  {
    // heheheheh
    return score < 0.6
      ? 'F'
      : score < 0.7
        ? 'D'
        : score < 0.8
          ? 'C'
          : score < 0.9
            ? 'B'
            : score <= 1.0
              ? 'A'
              : 'F';
  }
}
7 months agoRefactorDiscuss
7 kyu
Unpacking Arguments
JavaScript:

function spread(func, args) {
  return func(...args);
}
7 months agoRefactorDiscuss
8 kyu
Is it even?
Ruby:

def test_even(n)
  n % 2 == 0
end
7 months agoRefactorDiscuss
8 kyu
Exclusive "or" (xor) Logical Operator
C#:

public class Kata
{
  public static bool Xor(bool a, bool b)
  {
    return a ^ b;
  }
}
7 months agoRefactorDiscuss
7 kyu
Sum of numbers from 0 to N
C#:

using System.Text;

public class SequenceSum
{
  public static string ShowSequence(int n)
  {
    if (n < 0)
    {
      return n.ToString() + "<0";
    }
    
    if (n == 0)
    {
      return "0=0";
    }
    
    var seq = new StringBuilder();
    int sum = 0;
    
    for (int x = 0; x < n; x++)
    {
      seq.Append(x);
      seq.Append("+");
      sum += x;
    }
    
    seq.Append(n.ToString() + " = " + (sum + n).ToString());
    return seq.ToString();
  }
}
7 months agoRefactorDiscuss
7 kyu
Sum of a sequence
C#:

using System.Linq;

public static class Kata
{
  public static int SequenceSum(int start, int end, int step)
  {
    if (start > end)
    {
      return 0;
    }
    
    int sum = 0;
    
    for (int x = start; x <= end; x += step)
    {
      sum += x;
    }
    
    return sum;
  }
}
7 months agoRefactorDiscuss
5 kyu
Scramblies
C#:

public class Scramblies 
{
  public static bool Scramble(string str1, string str2) 
  {
    for (int x = 0; x < str2.Length; x++)
    {
      int index = str1.IndexOf(str2[x]);
      
      if (index == -1)
      {
        return false;
      }
      
      str1 = str1.Remove(index, 1);
    }
    
    return true;
  }
}
7 months agoRefactorDiscuss
7 kyu
Triangular Treasure
C#:

using System;

public class Kata
{
  public static int Triangular(int n)
  {
    if (n < 2)
    {
      return Math.Max(0, n);
    }
    
    return (n * (n + 1)) / 2;
  }
}
7 months agoRefactorDiscuss
7 kyu
Spanish Conjugator
Python:

def conjugate(verb):
    con = {
        "a": ["o", "as", "a", "amos", "ais", "an"],
        "e": ["o", "es", "e", "emos", "eis", "en"],
        "i": ["o", "es", "e", "imos", "is", "en"]
    }
    
    return { verb: [verb[:-2] + x for x in con[verb[-2]]] }
7 months agoRefactorDiscuss
7 kyu
Find divisors of a number
C#:

public class Kata
{
  public static int Divisors(int n)
  {
    if (n == 1)
    {
      return 1;
    }
    
    int divisors = 2;
    
    for (int x = 2; x < n; x++)
    {
      if (n % x == 0)
      {
        divisors++;
      }
    }
    
    return divisors;
  }
}
7 months agoRefactorDiscuss
7 kyu
Odd Not Prime
Python:

import math

def is_prime(n):
    if n < 2:
        return False
    
    for x in range(3, int(math.sqrt(n)) + 1, 2):
        if n % x == 0:
            return False
            
    return True

def odd_not_prime(n):
    if n < 1:
        return 0

    count = 1
    
    for x in range(9, n + 1, 2):
        if not is_prime(x):
            print(x)
            count += 1
    
    return count
7 months agoRefactorDiscuss
7 kyu
Thinkful - List Drills: Longest word
JavaScript:

function longest(words) {
  return words.reduce((t, x) => Math.max(t, x.length), 0);
}
7 months agoRefactorDiscuss
8 kyu
Coding 3min : Jumping Dutch act
JavaScript:

function sc(floor) {
  const x = "here's some extra text";
  return floor <= 1
    ? "" 
    : "Aa~ ".repeat(floor - 1) + "Pa!" + (floor > 6 ? "" : " Aa!");
}
7 months agoRefactorDiscuss
7 kyu
Sum of integers in string
C#:

using System.Linq;
using System.Text.RegularExpressions;

public class Kata
{
  public static int SumOfIntegersInString(string s)
  {
    return Regex.Matches(s, @"\d+").Cast<Match>().Sum(x => int.Parse(x.Value));
  }
}
7 months agoRefactorDiscuss
7 kyu
Day of The Week
JavaScript:

function getDayOfTheWeek(date) {
  return [
    "Sunday",
    "Monday",
    "Tuesday",
    "Wednesday",
    "Thursday",
    "Friday",
    "Saturday"
  ][new Date(date).getDay()];
}
7 months agoRefactorDiscuss
7 kyu
Are the numbers in order?
C#:

public class Kata
{
  public static bool IsAscOrder(int[] arr)
  {
    for (int x = 1; x < arr.Length; x++)
    {
      if (arr[x - 1] > arr[x])
      {
        return false;
      }
    }
    
    return true;
  }
}
7 months agoRefactorDiscuss
6 kyu
Nextel phone number validator
JavaScript:

var isValidNextelPhoneNumber = function(str) {
  return /^\d+\*\d+\*\d+$/.test(str.replace(/\s/g, ""));
};
7 months agoRefactorDiscuss
6 kyu
Building a mini search engine
JavaScript:

function searchEng(string, searchWord, searchMethod, newWord) {
  newWord = newWord || "";
  
  // make sure searchMethod is either 1 or 2, and searchWord and newWord are strictly alphanumeric
  if (![1, 2].includes(searchMethod) || !/^[\w\d]+$/.test(searchWord + newWord)) {
    return "No valid input";
  }
  
  // full expression: /\bsearchWord\b/g
  const regex = new RegExp(/\b/.source + searchWord + /\b/.source, "g");
  const matches = string.match(regex) || [];
  
  // search
  if (searchMethod === 1) {
    return { matches: matches.length, newString: "" };
  }
  
  // search and replace
  return { matches: matches.length, newString: string.replace(regex, newWord) };
}
7 months agoRefactorDiscuss
function searchEng(string, searchWord, searchMethod, newWord) {
  newWord = newWord || "";
  
  // make sure searchMethod is either 1 or 2, and searchWord and newWord are strictly alphanumeric
  if (![1, 2].includes(searchMethod) || 
    !searchWord.split("").concat(newWord.split("")).every(x => /\w|\d/.test(x))) 
  {
    return "No valid input";
  }
  
  // full expression: /\bsearchWord\b/g
  const regex = new RegExp(/\b/.source + searchWord + /\b/.source, "g");
  const matches = string.match(regex) || [];
  
  // search
  if (searchMethod === 1) {
    return { matches: matches.length, newString: "" };
  }
  
  // search and replace
  return { matches: matches.length, newString: string.replace(regex, newWord) };
}
7 months agoRefactorDiscuss
7 kyu
Hide password from jdbc url
JavaScript:

function hidePasswordFromConnection(urlString) {
  return urlString.replace(/password=([^&]+)/, (a, b) => 
    "password=" + b.split("").map(x => "*").join(""));
}
7 months agoRefactorDiscuss
8 kyu
The Feast of Many Beasts
JavaScript:

function feast(beast, dish) {
  return beast[0] === dish[0] && 
    beast[beast.length - 1] === dish[dish.length - 1];
}
7 months agoRefactorDiscuss
7 kyu
Putting the flatMap into the JS
JavaScript:

Array.prototype.flatMap = function(f) {
  return this.reduce((t, x, i) => t.concat(f(x, i)), []);
};
7 months agoRefactorDiscuss
7 kyu
Scrolling Text
JavaScript:

function scrollingText(text) {
  text = text.toUpperCase();
  const rotations = [text];
  
  for (let x = 0; x < text.length - 1; x++) {
    text = text.substring(1) + text[0];
    rotations.push(text);
  }
  
  return rotations;
}
7 months agoRefactorDiscuss
6 kyu
One Line Task: Makes 10
JavaScript:

makes10=(a,b)=>/10/.test([a,b,a+b])
7 months agoRefactor
8 kyu
Determine offspring sex based on genes XX and XY chromosomes
C#:

public class Kata
{
  public static string ChromosomeCheck(string sperm)
  {
    return sperm == "XX"
      ? "Congratulations! You're going to have a daughter."
      : "Congratulations! You're going to have a son.";
  }
}
7 months agoRefactorDiscuss
8 kyu
Lua is easy: Lesson 1 - The basics
Lua:

kata = {}
function kata.firstLua(a, b, c)
  str = a .. " " .. a * b
  
  if b < c then
    return str .. " Codewars"
  end
  
  return str .. " Lua"
end

return kata
7 months agoRefactorDiscuss
7 kyu
Sweet Dreams are Made of Cheese
C++:

#include <vector>
#include <string>
#include <math.h>

std::string payCheese(std::vector<int> arr)
{
  double hours = 0.0;

  for (int x = 0; x < arr.size(); x++)
  {
    hours += arr.at(x) / 100.0;
  }
  
  return "£" + std::to_string((int)(ceil(hours) * 8.75 * 4));
}
7 months agoRefactorDiscuss
8 kyu
Bin to Decimal
C#:

using System;
using System.Linq;

namespace Solution
{
  public static class Program
  {
    public static int binToDec(string s)
    {
      return (int)s
        .Select((x, i) => int.Parse(x.ToString()) * Math.Pow(2, s.Length - i - 1))
        .Sum();
    }
  }
}
7 months agoRefactorDiscuss
6 kyu
Kebabize
JavaScript:

function kebabize(str) {
  str = str.replace(/\d+/g, "");
  return str[0].toLowerCase() + str.substring(1)
    .replace(/([A-Z])/g, "-$1").toLowerCase();
}
7 months agoRefactorDiscuss
6 kyu
extract file name
Python:

import re

class FileNameExtractor:
    def extract_file_name(dirty_file_name):
        return re.match(r"\d+_([^\.]+\.[^\.]+)", dirty_file_name).group(1)
7 months agoRefactorDiscuss
7 kyu
Is n divisible by (...)?
C#:

using System.Linq;

namespace Codewars
{
  public static class Challenge
  {
    public static bool IsDivisible(int n, params int[] numbers)
    {
       return numbers.All(x => n % x == 0);
    }
  }
}
7 months agoRefactorDiscuss
7 kyu
These are not my grades! (Revamped !)
Python:

class Student:
    def __init__(self, first_name, last_name, grades = None):
        self.first_name = first_name
        self.last_name = last_name
        self.grades = grades if grades != None else []
    
    def add_grade(self, grade):
        self.grades.append(grade)
    
    def get_average(self):
        return sum(self.grades) / len(self.grades)
7 months agoRefactorDiscuss
7 kyu
Anagram Detection
Python:

# write the function is_anagram
def is_anagram(test, original):
    return len(test) == len(original) and set(test.lower()) == set(original.lower())
7 months agoRefactorDiscuss
7 kyu
Averages of numbers
C#:

public class Kata
{
  public static double[] Averages(int[] numbers)
  {
    if (numbers == null || numbers.Length < 2)
    {
      return new double[0];
    }
    
    var array = new double[numbers.Length - 1];
    
    for (int x = 0; x < array.Length; x++)
    {
      array[x] = (numbers[x] + numbers[x + 1]) / 2.0;
    }
    
    return array;
  }
}
7 months agoRefactorDiscuss
8 kyu
Exclamation marks series #11: Replace all vowel to exclamation mark in the sentence
JavaScript:

function replace(s) {
  return s.replace(/[aeiou]/gi, "!");
}
7 months agoRefactorDiscuss
7 kyu
One Line Task: Area Or Perimeter
JavaScript:

areaOrPerimeter=(l,w)=>l-w?(l+w)*2:l*l
7 months agoRefactorDiscuss
8 kyu
Exclamation marks series #1: Remove a exclamation mark from the end of string
C#:

using System.Linq;

public class Kata
{
  public static string Remove(string s)
  {
    return s.Last() == '!' ? s.Substring(0, s.Length - 1) : s;
  }
}
7 months agoRefactorDiscuss
8 kyu
Barking mad
Python:

class Dog():
  def __init__(self, breed):
    self.breed = breed
    
  def bark(self):
      return "Woof"
    

snoopy = Dog("Beagle")
scoobydoo = Dog("Great Dane")
7 months agoRefactorDiscuss
8 kyu
Welcome!
C#:

using System.Collections.Generic;

public static class Kata
{
  static Dictionary<string, string> dict = 
    new Dictionary<string, string>()
  {
    {"english", "Welcome"},
    {"czech", "Vitejte"},
    {"danish", "Velkomst"},
    {"dutch", "Welkom"},
    {"estonian", "Tere tulemast"},
    {"finnish", "Tervetuloa"},
    {"flemish", "Welgekomen"},
    {"french", "Bienvenue"},
    {"german", "Willkommen"},
    {"irish", "Failte"},
    {"italian", "Benvenuto"},
    {"latvian", "Gaidits"},
    {"lithuanian", "Laukiamas"},
    {"polish", "Witamy"},
    {"spanish", "Bienvenido"},
    {"swedish", "Valkommen"},
    {"welsh", "Croeso"}
  };

  public static string Greet(string language)
  {
    return dict.ContainsKey(language) ? dict[language] : "Welcome";
  }
}
7 months agoRefactorDiscuss
8 kyu
Determine offspring sex based on genes XX and XY chromosomes
C#:

public class Kata
{
  public static string ChromosomeCheck(string sperm)
  {
    return sperm == "XX"
      ? "Congratulations! You're going to have a daughter."
      : "Congratulations! You're going to have a son.";
  }
}
7 months agoRefactorDiscuss
8 kyu
Lua is easy: Lesson 1 - The basics
Lua:

kata = {}
function kata.firstLua(a, b, c)
  str = a .. " " .. a * b
  
  if b < c then
    return str .. " Codewars"
  end
  
  return str .. " Lua"
end

return kata
7 months agoRefactorDiscuss
7 kyu
Sweet Dreams are Made of Cheese
C++:

#include <vector>
#include <string>
#include <math.h>

std::string payCheese(std::vector<int> arr)
{
  double hours = 0.0;

  for (int x = 0; x < arr.size(); x++)
  {
    hours += arr.at(x) / 100.0;
  }
  
  return "£" + std::to_string((int)(ceil(hours) * 8.75 * 4));
}
7 months agoRefactorDiscuss
8 kyu
Bin to Decimal
C#:

using System;
using System.Linq;

namespace Solution
{
  public static class Program
  {
    public static int binToDec(string s)
    {
      return (int)s
        .Select((x, i) => int.Parse(x.ToString()) * Math.Pow(2, s.Length - i - 1))
        .Sum();
    }
  }
}
7 months agoRefactorDiscuss
6 kyu
Kebabize
JavaScript:

function kebabize(str) {
  str = str.replace(/\d+/g, "");
  return str[0].toLowerCase() + str.substring(1)
    .replace(/([A-Z])/g, "-$1").toLowerCase();
}
7 months agoRefactorDiscuss
6 kyu
extract file name
Python:

import re

class FileNameExtractor:
    def extract_file_name(dirty_file_name):
        return re.match(r"\d+_([^\.]+\.[^\.]+)", dirty_file_name).group(1)
7 months agoRefactorDiscuss
7 kyu
Is n divisible by (...)?
C#:

using System.Linq;

namespace Codewars
{
  public static class Challenge
  {
    public static bool IsDivisible(int n, params int[] numbers)
    {
       return numbers.All(x => n % x == 0);
    }
  }
}
7 months agoRefactorDiscuss
7 kyu
These are not my grades! (Revamped !)
Python:

class Student:
    def __init__(self, first_name, last_name, grades = None):
        self.first_name = first_name
        self.last_name = last_name
        self.grades = grades if grades != None else []
    
    def add_grade(self, grade):
        self.grades.append(grade)
    
    def get_average(self):
        return sum(self.grades) / len(self.grades)
7 months agoRefactorDiscuss
7 kyu
Anagram Detection
Python:

# write the function is_anagram
def is_anagram(test, original):
    return len(test) == len(original) and set(test.lower()) == set(original.lower())
7 months agoRefactorDiscuss
7 kyu
Averages of numbers
C#:

public class Kata
{
  public static double[] Averages(int[] numbers)
  {
    if (numbers == null || numbers.Length < 2)
    {
      return new double[0];
    }
    
    var array = new double[numbers.Length - 1];
    
    for (int x = 0; x < array.Length; x++)
    {
      array[x] = (numbers[x] + numbers[x + 1]) / 2.0;
    }
    
    return array;
  }
}
7 months agoRefactorDiscuss
8 kyu
Exclamation marks series #11: Replace all vowel to exclamation mark in the sentence
JavaScript:

function replace(s) {
  return s.replace(/[aeiou]/gi, "!");
}
7 months agoRefactorDiscuss
7 kyu
One Line Task: Area Or Perimeter
JavaScript:

areaOrPerimeter=(l,w)=>l-w?(l+w)*2:l*l
7 months agoRefactorDiscuss
8 kyu
Exclamation marks series #1: Remove a exclamation mark from the end of string
C#:

using System.Linq;

public class Kata
{
  public static string Remove(string s)
  {
    return s.Last() == '!' ? s.Substring(0, s.Length - 1) : s;
  }
}
7 months agoRefactorDiscuss
8 kyu
Barking mad
Python:

class Dog():
  def __init__(self, breed):
    self.breed = breed
    
  def bark(self):
      return "Woof"
    

snoopy = Dog("Beagle")
scoobydoo = Dog("Great Dane")
7 months agoRefactorDiscuss
8 kyu
Welcome!
C#:

using System.Collections.Generic;

public static class Kata
{
  static Dictionary<string, string> dict = 
    new Dictionary<string, string>()
  {
    {"english", "Welcome"},
    {"czech", "Vitejte"},
    {"danish", "Velkomst"},
    {"dutch", "Welkom"},
    {"estonian", "Tere tulemast"},
    {"finnish", "Tervetuloa"},
    {"flemish", "Welgekomen"},
    {"french", "Bienvenue"},
    {"german", "Willkommen"},
    {"irish", "Failte"},
    {"italian", "Benvenuto"},
    {"latvian", "Gaidits"},
    {"lithuanian", "Laukiamas"},
    {"polish", "Witamy"},
    {"spanish", "Bienvenido"},
    {"swedish", "Valkommen"},
    {"welsh", "Croeso"}
  };

  public static string Greet(string language)
  {
    return dict.ContainsKey(language) ? dict[language] : "Welcome";
  }
}
7 months agoRefactorDiscuss
7 kyu
Head, Tail, Init and Last
C#:

using System.Collections.Generic;
using System.Linq;

public static class ArrayMethods
{
  public static TSource Head<TSource>(this List<TSource> list)
  {
    return list.First();
  }
  
  public static List<TSource> Tail<TSource>(this List<TSource> list)
  {
    return list.Skip(1).ToList();
  }

  public static List<TSource> Init<TSource>(this List<TSource> list)
  {
    return list.Take(list.Count - 1).ToList();
  }
  
  public static TSource Last_<TSource>(this List<TSource> list)
  {
    return list.Last();
  }
}
7 months agoRefactorDiscuss
8 kyu
Vowel remover
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static string Shortcut(string input)
  {
    return Regex.Replace(input, "[aeiou]", "");
  }
}
7 months agoRefactorDiscuss
7 kyu
Use reduce() to calculate the sum of the values in an array
JavaScript:

function sum(array) {
  return array.reduce((t, x) => t + x, 0);
}
7 months agoRefactorDiscuss
8 kyu
Stringy Strings
C#:

public class Kata
{
  public static string Stringy(int size)
  {
    string stringy = "";
  
    for (int x = 1; x < size + 1; x++)
    {
      stringy += (x % 2).ToString();
    }
    
    return stringy;
  }
}
7 months agoRefactorDiscuss
8 kyu
Remove exclamation marks
C#:

public class Kata
{
  public static string RemoveExclamationMarks(string s)
  {
    return s.Replace("!", ""); // ???
  }
}
7 months agoRefactorDiscuss
8 kyu
Count the Monkeys!
C#:

using System.Linq;

public static class MonkeyCounter
{
  public static int[] MonkeyCount(int n)
  {
    return Enumerable.Range(1, n).ToArray();
  }
}
7 months agoRefactorDiscuss
6 kyu
Triple trouble
C#:

using System;
using System.Text.RegularExpressions;

public class Kata
{
  public static int TripleDouble(long num1, long num2)
  {
    var match = Regex.Match(num1.ToString(), @"(\d)\1{2}");
    
    if (match.Success)
    {
      return Convert.ToInt32(
        Regex.IsMatch(num2.ToString(), $"({match.Value.Substring(0, 1)})" + @"\1{1}"));
    }
    
    return 0;
  }
}
7 months agoRefactorDiscuss
6 kyu
Count the smiley faces!
C#:

using System.Linq;
using System.Text.RegularExpressions;

public static class Kata
{
  public static int CountSmileys(string[] smileys) 
  {
     return smileys.Count(x => Regex.IsMatch(x, @"[:;][-~]?[\)D]"));
  }
}
7 months agoRefactorDiscuss
6 kyu
Don't rely on luck.
JavaScript:

var guess = 10
7 months agoRefactorDiscuss
8 kyu
Regular Ball Super Ball
C#:

public class Ball
{
  public string ballType { get; set; }
  
  public Ball(string ballType = "regular")
  {
    this.ballType = ballType;
  }
}
7 months agoRefactorDiscuss
7 kyu
Coding Meetup #2 - Higher-Order Functions Series - Greet developers
JavaScript:

function greetDevelopers(list) {
  for (let x of list) {
    x.greeting = `Hi ${x.firstName}, what do you like the most about ${x.language}?`;
  }
  
  return list;
}
7 months agoRefactorDiscuss
7 kyu
Exclamation marks series #3: Remove all exclamation marks from sentence except at the end
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static string Remove(string s)
  {
    var match = Regex.Match(s, @"!+$");
    
    return s.Replace("!", "") + match.Value;
  }
}
7 months agoRefactorDiscuss
Python:

import re

def remove(s):
    ex = re.search("!+$", s)
    s = s.replace("!", "")
    return s + (ex.group() if ex != None else "")
7 months agoRefactorDiscuss
7 kyu
Date Format Validation
JavaScript:

function dateChecker(date) {
	return /\d{2}-\d{2}-\d{4} \d{2}:\d{2}/.test(date);
}
7 months agoRefactorDiscuss
7 kyu
Digits explosion
C#:

using System.Linq;

public class Digits
{
  public static string Explode(string s)
  {
    return string.Join("", s.Select(x => new string(x, int.Parse(x.ToString()))));
  }
}
7 months agoRefactorDiscuss
6 kyu
Inserting multiple strings into another string
JavaScript:

function insert_at_indexes(phrase, word, indexes) {
  let d = 0;
  
  for(let x = 0; x < indexes.length; x++) {
    phrase = phrase.slice(0, indexes[x] + d) +
      word + 
      phrase.slice(indexes[x] + d);
    d += word.length;
  }
  
  return phrase;
}
7 months agoRefactorDiscuss
6 kyu
"this" is an other solution
JavaScript:

class OnceNamedOne {
  constructor(first, last) {
    this._firstName = first;
    this._lastName = last;
    this._fullName = this.firstName + " " + this.lastName;
  }
  
  get firstName() {
    return this._firstName;
  }
  
  get lastName() {
    return this._lastName;
  }
  
  get fullName() {
    return this._fullName;
  }
}
7 months agoRefactorDiscuss
6 kyu
"this" is an other problem
JavaScript:

class NamedOne {
  constructor(first, last) {
    this.firstName = first;
    this.lastName = last;
  }
  
  get fullName() {
    return this.firstName + " " + this.lastName;
  }
  
  set fullName(name) {
    name = name.split(" ");
    if (name.length !== 2) {
      return;
    }
    
    this.firstName = name[0];
    this.lastName = name[1];
  }
}
7 months agoRefactorDiscuss
6 kyu
Breaking search bad
JavaScript:

// TITLES is a preloaded array of String to search throught

function search(searchTerm) {
  searchTerm = searchTerm.toLowerCase();
  return TITLES.filter(x => x.toLowerCase().indexOf(searchTerm) !== -1);
}
7 months agoRefactorDiscuss
7 kyu
One Line Task: Making Pizza
JavaScript:

function makePizza(pieces) { //Let's make n pieces of Pizza ;-)
  var result = "";
  while ( pieces-- ){
    var needSteps = 5;
    while ( needSteps-- ) result += make( needSteps+1);
  }
  return result;
}
function make(step){
  switch ( step ){
    case 5: return "P";
    case 4: return "i";
    case 3: 
    case 2: return "z";
    case 1: return "a";
  }
}
7 months agoRefactorDiscuss
8 kyu
Capitalization and Mutability
JavaScript:

function capitalizeWord(word) {
  return word[0].toUpperCase() + word.substring(1);
}
7 months agoRefactorDiscuss
8 kyu
Correct the mistakes of the character recognition software
C#:

public class Kata
{
  public static string Correct(string text)
  {
    return text.Replace("5", "S").Replace("0", "O").Replace("1", "I");
  }
}
7 months agoRefactorDiscuss
7 kyu
Random case
Python:

from random import randrange

def random_case(s):
    return "".join([x.lower() if randrange(2) == 1 else x.upper() for x in s])
7 months agoRefactorDiscuss
7 kyu
Credit card issuer checking
C#:

public static class Kata
{
  public static string getIssuer(long number)
  {
    string n = number.ToString();
    
    if (n.Length == 15 && (n.StartsWith("34") || n.StartsWith("37")))
    {
      return "AMEX";
    }
    
    if (n.Length == 16)
    {
      if (n.StartsWith("6011"))
      {
        return "Discover";
      }
      
      for (int x = 51; x < 56; x++)
      {
        if (n.StartsWith(x.ToString()))
        {
          return "Mastercard";
        }
      }
      
      if (n.StartsWith("4"))
      {
        return "VISA";
      }
    }
    
    if (n.Length == 13 && n.StartsWith("4"))
    {
      return "VISA";
    }
    
    return "Unknown";
  }
}
7 months agoRefactorDiscuss
6 kyu
Trim a String
JavaScript:

String.prototype.trim = function() {
  return this.replace(/^\s+/, "").replace(/\s+$/, "");
};
7 months agoRefactorDiscuss
5 kyu
Compose functions (T Combinator)
JavaScript:

var compose = function() {
  const args = [...arguments];
  
  if (args.length < 2) {
    return args[0];
  }
  
  for (let x = 1; x < args.length; x++) {
    args[0] = args[x](args[0]);
  }
  
  return args[0];
};
7 months agoRefactorDiscuss
7 kyu
Initialize my name
C#:

using System.Linq;

public class Kata
{
  public static string InitializeNames(string name)
  {
    var names = name.Split(' ');
    
    if (names.Length < 3)
    {
      return name;
    }
    
    return names.First() + " " + 
      string.Join(" ", names
        .Skip(1)
        .Take(names.Length - 2)
        .Select(x => x.Substring(0, 1) + ".")) +
      " " + names.Last();
  }
}
7 months agoRefactorDiscuss
6 kyu
Friday the 13ths
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  static string get13thsInYear(int year)
  {
    var dates = new List<string>();
  
    for (int x = 1; x < 13; x++)
    {
      DateTime date;
      if (DateTime.TryParse($"{x}/13/{year}", out date))
      {
        if (date.DayOfWeek == DayOfWeek.Friday)
        {
          dates.Add(date.ToString("M/dd/yyyy"));
        }
      }
    }
    
    return string.Join(" ", dates);
  }

	public static string FridayTheThirteenths(int start, int end = int.MinValue)
	{
    if (end < start)
    {
      return get13thsInYear(start);
    }
    
    return string.Join(" ", 
      Enumerable.Range(start, end - start + 1).Select(x => get13thsInYear(x)));
	}
}
7 months agoRefactorDiscuss
6 kyu
Count characters in your string
C#:

using System.Collections.Generic;

public class Kata
{
  public static Dictionary<char, int> Count(string str)
  {
    var dict = new Dictionary<char, int>();
    
    foreach (char c in str)
    {
      if (!dict.ContainsKey(c))
      {
        dict.Add(c, 0);
      }
      
      dict[c]++;
    }
    
    return dict;
  }
}
7 months agoRefactorDiscuss
8 kyu
Calculate BMI
C#:

public class Kata
{
  public static string Bmi(double weight, double height)
  {
    double bmi = weight / (height * height);
    
    if (bmi <= 18.5) return "Underweight";
    if (bmi <= 25.0) return "Normal";
    if (bmi <= 30.0) return "Overweight";
    return "Obese";
  }
}
7 months agoRefactorDiscuss
8 kyu
Reversing Words in a String
C#:

using System.Linq;

public class Kata
{
  public static string Reverse(string text)
  {
    return string.Join(" ", text.Trim().Split(' ').Reverse());
  }
}
7 months agoRefactorDiscuss
7 kyu
Name Array Capping
C#:

using System.Linq;

public static class Kata
{
  public static string[] CapMe(string[] strings)
  {
    return strings
      .Select(x => x.Length > 1 
        ? x.Substring(0, 1).ToUpper() + x.Substring(1).ToLower() 
        : x.ToUpper())
      .ToArray();
  }
}
7 months agoRefactorDiscuss
8 kyu
altERnaTIng cAsE <=> ALTerNAtiNG CaSe
C#:

using System.Linq;

namespace Extensions
{
  public static class StringExt
  {
    public static string ToAlternatingCase(this string s)
    {
      return string.Join("", 
        s.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)));
    }
  }
}
7 months agoRefactorDiscuss
7 kyu
Digitize
C#:

using System.Linq;

public static class Kata
{
  public static int[] digitize(int n)
  {
    return n.ToString()
      .Select(x => int.Parse(x.ToString()))
      .ToArray();
  }
}
7 months agoRefactorDiscuss
7 kyu
Find the stray number
C#:

using System.Linq;

class Solution 
{
  public static int Stray(int[] numbers)
  {
    if (numbers.Count(x => x == numbers[0]) == 1)
    {
      return numbers[0];
    }
  
    return numbers.Single(x => x != numbers[0]);
  }
}
7 months agoRefactorDiscuss
7 kyu
SequenceSum
C#:

using System;
using System.Linq;

public class SequenceSum
{
	public static int[] SumOfN(int n)
	{
    int negator = n < 0 ? -1 : 1;
    var range = Enumerable.Range(0, Math.Abs(n) + 1);
  
    return range
      .Select((x, i) => range.Take(i + 1).Sum() * negator)
      .ToArray();
	}
}
7 months agoRefactorDiscuss
8 kyu
Fake Binary
C#:

using System.Linq;

public class Kata
{
  public static string FakeBin(string x)
  {
    return string.Join("", 
      x.Select(n => int.Parse(n.ToString()) < 5 ? "0" : "1"));
  }
}
7 months agoRefactorDiscuss
8 kyu
Find the Remainder
C#:

using System;

public class Kata
{
  public static int Remainder(int a, int b)
  {
    return Math.Max(a, b) % Math.Min(a, b);
  }
}
7 months agoRefactorDiscuss
8 kyu
DNA to RNA Conversion
C#:

namespace Converter
{
  public class Converter
  {
    public string dnaToRna(string dna)
    {
      return dna.Replace("T", "U");
    }
  }
}
7 months agoRefactorDiscuss
8 kyu
Opposites Attract
C#:

public class LoveDetector
{
  public static bool lovefunc(int flower1, int flower2)
  {
    return !(flower1 % 2 == 0 && flower2 % 2 == 0);
  }
}
7 months agoRefactorDiscuss
8 kyu
Plural
C#:

public class Kata
{
  public static bool Plural(double n)
  {
    return n != 1;
  }
}
7 months agoRefactorDiscuss
7 kyu
Functional Addition
C#:

using System;

public static class Kata
{
  public static Func<double, double> Add(double n)
  {
    return x => x + n;
  }
}
7 months agoRefactorDiscuss
6 kyu
Write Number in Expanded Form
Python:

def expanded_form(num):
    n = str(num)
    out = []
    
    for x in range(len(n)):
        if n[x] != "0":
            out.append(n[x] + "0" * (len(n) - x - 1))
        
    return " + ".join(out)
    
7 months agoRefactorDiscuss
7 kyu
Area of a Circle
C#:

using System;

public static class Kata
{
	public static double CalculateAreaOfCircle(string radius)
  {
    double r;
    if (!double.TryParse(radius, out r) || r <= 0 || radius.Contains(","))
    {
      throw new ArgumentException("radius must be numeric and above 0");
    }
  
  	return Math.Round(Math.PI * Math.Pow(r, 2), 2);
  }
}
7 months agoRefactorDiscuss
6 kyu
Find the unique number
JavaScript:

function findUniq(arr) {
  if (arr.filter(x => x === arr[0]).length === 1) {
    return arr[0];
  }
  
  return arr.filter(x => x !== arr[0])[0];
}
7 months agoRefactorDiscuss
8 kyu
The 'if' function
C#:

using System;

public class Kata
{
  public static void If(bool condition, Action func1, Action func2)
  {
    var action = condition ? func1 : func2;
    action();
  }
}
7 months agoRefactorDiscuss
8 kyu
Sleigh Authentication
C#:

public class Sleigh
{
  public static bool Authenticate(string name, string password)
  {
    return name == "Santa Claus" && password == "Ho Ho Ho!";
  }
}
7 months agoRefactorDiscuss
8 kyu
Keep up the hoop
C#:

public class Kata
{
  public static string HoopCount(int n)
  {
    return n < 10
      ? "Keep at it until you get it"
      : "Great, now move on to tricks";
  }
}
7 months agoRefactorDiscuss
7 kyu
Factorial
C#:

using System;

public static class Kata
{
  public static int Factorial(int n)
  {
    if (n < 0 || n > 12)
    {
      throw new ArgumentOutOfRangeException("n must be between 0 and 12");
    }
    
    if (n < 2)
    {
      return 1;
    }
    
    return n * Factorial(n - 1);
  }
}
7 months agoRefactorDiscuss
7 kyu
Caffeine Script
C#:

public class Kata
{
  public static string CaffeineBuzz(int n)
  {
    string output = "";
    
    if (n % 4 == 0 && n % 3 == 0)
    {
      output += "Coffee";
    }
    else if (n % 3 == 0)
    {
      output += "Java";
    }
    else
    {
      return "mocha_missing!";
    }
    
    if (n % 2 == 0)
    {
      output += "Script";
    }
    
    return output;
  }
}
7 months agoRefactorDiscuss
8 kyu
Convert a Boolean to a String
C#:

public class kata
{
  public static string boolean_to_string(bool b)
  {
    // Please don't delete me!
    // okay
    
    return b.ToString();
  }
}
7 months agoRefactorDiscuss
7 kyu
Number Of Occurrences
C#:

using System.Linq;

public class OccurrencesKata
{
	public static int NumberOfOccurrences(int x, int[] xs)
  {
  	return xs.Count(a => a == x);
  }
}
7 months agoRefactorDiscuss
8 kyu
A function within a function
C#:

using System;

public class Kata
{
  public static Func<int> Always(int n)
  {
    return new Func<int>(() => n);
  }
}
7 months agoRefactorDiscuss
7 kyu
Find the capitals
C#:

using System.Linq;

public static class Kata
{
  public static int[] Capitals(string word)
  {
		return word
      .Select((x, i) => char.IsUpper(x) ? i : -1)
      .Except(new int[] { -1 })
      .ToArray();
  }
}
7 months agoRefactorDiscuss
7 kyu
The Coupon Code
C#:

using System;

public static class Kata
{
  public static bool CheckCoupon(string enteredCode, string correctCode, 
    string currentDate, string expirationDate)
  {
    return enteredCode == correctCode &&
      DateTime.Parse(currentDate) <= DateTime.Parse(expirationDate);
  }
}
7 months agoRefactorDiscuss
6 kyu
Reflection #2 - Give me all methods
C#:

using System.Linq;
using System.Reflection;

public static class Reflection
{
  public static string[] GetMethodNames(object TestObject)
  {
    return TestObject != null
      ? TestObject.GetType()
        .GetMethods(BindingFlags.Public |
          BindingFlags.NonPublic |
          BindingFlags.Instance |
          BindingFlags.Static)
        .Select(x => x.Name)
        .ToArray()
      : new string[0];
  }
}
8 months agoRefactorDiscuss
8 kyu
Color Ghost
C#:

using System;

public class Ghost
{
  Random ran = new Random();
  public string color { get; private set; }

  public Ghost()
  {
    color = new string[]
    {
      "white",
      "yellow",
      "purple",
      "red"
    }[ran.Next(4)];
  }
  
  // this shouldn't be here
  public string GetColor()
  {
    return color;
  }
}
8 months agoRefactorDiscuss
7 kyu
Gauß needs help! (Sums of a lot of numbers).
C#:

public class Kata
{
  public static long? RangeSum(long n)
  {
    return n > 0 ? (long?)(n * (n + 1) / 2) : null;
  }
}
8 months agoRefactorDiscuss
8 kyu
Rock Paper Scissors!
C#:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

public class Kata
{
  public string Rps(string p1, string p2)
  {
    if (p1 == "rock")
    {
      if (p2 == "rock")
      {
        return "Draw!";
      }
      
      if (p2 == "paper")
      {
        return "Player 2 won!";
      }
      
      if (p2 == "scissors")
      {
        return "Player 1 won!";
      }
    }
    
    if (p1 == "paper")
    {
      if (p2 == "rock")
      {
        return "Player 1 won!";
      }
      
      if (p2 == "paper")
      {
        return "Draw!";
      }
      
      if (p2 == "scissors")
      {
        return "Player 2 won!";
      }
    }
    
    if (p1 == "scissors")
    {
      if (p2 == "rock")
      {
        return "Player 2 won!";
      }
      
      if (p2 == "paper")
      {
        return "Player 1 won!";
      }
      
      if (p2 == "scissors")
      {
        return "Draw!";
      }
    }
    
    throw new ArgumentException("p1 and p2 must be either \"rock\", \"paper\", or \"scissors\"");
  }
}
8 months agoRefactorDiscuss
7 kyu
Sort the Gift Code
C#:

using System.Linq;

public class Kata
{
  public static string SortGiftCode(string code)
  {
    return string.Join("", code.OrderBy(x => x));
  }
}
8 months agoRefactorDiscuss
8 kyu
You Can't Code Under Pressure #1
C#:

using System;

public static class Kata
{
  public static int DoubleInteger(int n)
  {
    return n * 2;
  }
}
    
8 months agoRefactorDiscuss
5 kyu
RGB To Hex Conversion
C#:

using System;

public class Kata
{
  private static string toHex(int num)
  {
    num = Math.Min(num, 255);
    num = Math.Max(num, 0);
    
    string symbols = "0123456789ABCDEF";
    string hex = "";

    while (num != 0)
    {
      int remainder = num % 16;
      num /= 16;
      hex = symbols[remainder] + hex;
    }

    return hex.Length > 0 ? hex.PadLeft(2, '0') : "00";
  }

  public static string Rgb(int r, int g, int b) 
  {
    return toHex(r) + toHex(g) + toHex(b);
  }
}
8 months agoRefactorDiscuss
7 kyu
Reverse words
C#:

using System.Text.RegularExpressions;
using System.Linq;

public static class Kata
{
  public static string ReverseWords(string str)
  {
    var matches = Regex.Matches(str, @"\S+");

    foreach (Match match in matches)
    {
      str = str
        .Remove(match.Index, match.Length)
        .Insert(match.Index, string.Join("", match.Value.Reverse()));
    }

    return str;
  }
}
8 months agoRefactorDiscuss
8 kyu
Keep Hydrated!
C#:

using System;

public class Kata
{
  public static int Litres(double time)
  {
    return (int)(time * 0.5);
  }
}
8 months agoRefactorDiscuss
8 kyu
Sentence Smash
C#:

public class Kata
{
  public static string Smash(string[] words)
  {
    return string.Join(" ", words);
  }
}
8 months agoRefactorDiscuss
8 kyu
Count by X
C#:

using System.Linq;

public static class Kata
{
  public static int[] CountBy(int x, int n)
  {
    return Enumerable.Range(1, n).Select(i => i * x).ToArray();
  }
}
8 months agoRefactorDiscuss
6 kyu
Find the missing letter
C#:

using System;

public class Kata
{
  const string ALPHA = "abcdefghijklmnopqrstuvwxyz";
  static readonly string ALPHA_UPPER = ALPHA.ToUpper();

  public static char FindMissingLetter(char[] array)
  {
    int index = ALPHA.IndexOf(array[0]);
    string alpha = ALPHA;
    if (index == -1)
    {
      alpha = ALPHA_UPPER;
      index = alpha.IndexOf(array[0]);
    }
    
    for (int x = 0; x < array.Length; x++)
    {
      char c = alpha[index + x];
      if (c != array[x])
      {
        return c;
      }
    }
    
    throw new Exception("No missing character");
  }
}
8 months agoRefactorDiscuss
8 kyu
Are You Playing Banjo?
C#:

public class Kata
{
  public static string AreYouPlayingBanjo(string name)
  {
    return name.ToLower().Substring(0, 1) == "r"
      ? name + " plays banjo"
      : name + " does not play banjo";
  }
}
8 months agoRefactorDiscuss
7 kyu
The highest profit wins!
C#:

using System.Linq;

public class MinMax 
{
  public static int[] minMax(int[] lst) 
  {
    return new int[] { lst.Min(), lst.Max() };
  }
}
8 months agoRefactorDiscuss
5 kyu
Moving Zeros To The End
C#:

using System.Linq;

public class Kata
{
  public static int[] MoveZeroes(int[] arr)
  {
    return arr.Where(x => x != 0).Concat(arr.Where(x => x == 0)).ToArray();
  }
}
8 months agoRefactorDiscuss
6 kyu
Does my number look big in this?
C#:

using System;
using System.Linq;

public class Kata
{
  public static bool Narcissistic(int val)
  {
    string vs = val.ToString();
    return val == vs.Sum(x => Math.Pow(int.Parse(x.ToString()), vs.Length));
  }
}
8 months agoRefactorDiscuss
8 kyu
Convert a String to a Number!
C#:

public class Kata
{
  public static int StringToNumber(string str)
  {
    return int.Parse(str);
  }
}
8 months agoRefactorDiscuss
6 kyu
Format a string of names like 'Bart, Lisa & Maggie'.
JavaScript:

function list(names) {
  const n = names.map(x => x.name);
  return n && n.length > 1
    ? n.slice(0, -1).join(", ") + " & " + n[n.length - 1]
    : n.length === 1
      ? n[0]
      : "";
}
8 months agoRefactorDiscuss
7 kyu
Find the divisors!
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public class Kata
{
  public static int[] Divisors(int n)
  {
    var list = new List<int>();
    
    for (int x = 2; x <= Math.Sqrt(n); x++)
    {
      if (n % x == 0)
      {
        if (n / x == x)
        {
          list.Add(x);
        }
        else
        {
          list.Add(x);
          list.Add(n / x);
        }
      }
    }
    
    return list.Count != 0 ? list.OrderBy(x => x).ToArray() : null;
  }
}
8 months agoRefactorDiscuss
6 kyu
Tribonacci Sequence
C#:

using System.Collections.Generic;
using System.Linq;

public class Xbonacci
{
  public double[] Tribonacci(double[] signature, int n)
  {
    if (n == 0)
    {
      return new double[1];
    }
    
    var list = new List<double>(signature);
    for (int x = 0; x < n - signature.Length; x++)
    {
      int c = list.Count - 1;
      list.Add(list[c] + list[c - 1] + list[c - 2]);
    }
    
    return list.Take(n).ToArray();
  }
}
8 months agoRefactorDiscuss
6 kyu
Schrödinger's Boolean
JavaScript:

const omnibool = {
  value: 1,
  toString: function() {
    return Math.abs(this.value--);
  }
};
8 months agoRefactorDiscuss
6 kyu
Is a number prime?
C#:

using System;

public static class Kata
{
  public static bool IsPrime(int n)
  {
    if (n < 2) return false;
    if (n == 2) return true;
    if (n % 2 == 0) return false;
    
    for (int x = 3; x <= Math.Sqrt(n); x += 2)
    {
      if (n % x == 0)
      {
        return false;
      }
    }
    
    return true;
  }
}
8 months agoRefactorDiscuss
6 kyu
@htmlize
Python:

from functools import wraps

def htmlize(tag):
    def decorator(func):
        @wraps(func)
        def wrapper(text):
            return "<{0}>{1}</{0}>".format(tag, func(text))
        return wrapper
    return decorator
8 months agoRefactorDiscuss
7 kyu
ES2015: Get the real length of string. 
JavaScript:

function getRealLength(string) {
  return [...string].length;
}
8 months agoRefactorDiscuss
6 kyu
Java-like static method in JS
JavaScript:

var addStaticMethod = function(clss, name, method) {
  clss[name] = method;
  clss.prototype[name] = () => clss[name]();
};
8 months agoRefactorDiscuss
6 kyu
Dog recommendation system
Python:

def find_similar_dogs(breed):
    temperment = dogs[breed]
    good_boys = set()
    most_common = 0
    
    for dog in dogs:
        if dog == breed:
            continue
            
        common = 0
        for x in temperment:
            if x in dogs[dog]:
                common += 1
        
        if common > most_common:
            good_boys = {dog}
            most_common = common
        elif common == most_common:
            good_boys.add(dog)
            
    return good_boys
8 months agoRefactorDiscuss
7 kyu
Next Prime
C++:

#include <math.h>

bool isPrime(int num)
{
  if (num < 2) return false;
  if (num == 2) return true;
  if (num % 2 == 0) return false;
  
  for (int x = 3; x <= sqrt(num); x += 2)
  {
    if (num % x == 0)
    {
      return false;
    }
  }
  
  return true;
}

int nextPrime(int num)
{
  while (true)
  {
    if (isPrime(++num))
    {
      return num;
    }
  }
}
8 months agoRefactorDiscuss
7 kyu
Folding your way to the moon
C#:

public class Kata
{
  public static int? FoldTo(double distance)
  {
    if (distance <= 0)
    {
      return null;
    }
  
    double thickness = 0.0001;
    int folds = 0;
    while (thickness < distance)
    {
      thickness *= 2;
      folds++;
    }
    
    return folds;
  }
}
8 months agoRefactorDiscuss
6 kyu
Parse a linked list from a string
C#:

public static class Kata
{
  static Node getNext(int index, string[] nodes)
  {
    string node = nodes[index];
    if (node == "null")
    {
      return null;
    }
    
    return new Node(int.Parse(node), getNext(index + 1, nodes));
  }

  public static Node Parse(string nodes)
  {
    if (nodes == null || nodes == "" || nodes == "null")
    {
      return null;
    }
  
    var _nodes = nodes.Replace(" -> ", "|").Split('|');
    
    return new Node(int.Parse(_nodes[0]), getNext(1, _nodes));
  }
}
8 months agoRefactorDiscuss
8 kyu
Be Concise IV - Index of an element in an array
JavaScript:

find=(a,e)=>{i=a.indexOf(e);return i!=-1?i:"Not found"}
8 months agoRefactorDiscuss
8 kyu
Sort and Star
C#:

using System;
using System.Linq;

public class Kata
{
  public static string TwoSort(string[] s)
  {
    return string.Join("***", s
      .OrderBy(x => x, StringComparer.Ordinal)
      .First()
      .ToArray());
  }  
}
8 months agoRefactorDiscuss
8 kyu
Grasshopper - Function syntax debugging
JavaScript:

function main(verb, noun) {
  return verb + noun
}
8 months agoRefactorDiscuss
8 kyu
Be Concise I - The Ternary Operator
JavaScript:

describeAge=a=>a<13?"You're a(n) kid":a>=13&&a<= 17?"You're a(n) teenager":a>=18&&a<=64?"You're a(n) adult":"You're a(n) elderly"
8 months agoRefactorDiscuss
8 kyu
Circular Objects #1 - Running around in circles
JavaScript:

var circular = {
  value: "Hello World"
};

circular.self = circular;
8 months agoRefactorDiscuss
8 kyu
Training JS #32: methods of Math---round() ceil() and floor()
JavaScript:

function roundIt(n) {
  const div = n.toString().split(".");
  
  if (div[0].length < div[1].length) {
    return Math.ceil(n);
  }
  
  if (div[0].length > div[1].length) {
    return Math.floor(n);
  }
  
  return Math.round(n);
}
8 months agoRefactorDiscuss
8 kyu
Take an Arrow to the knee, Functionally
C#:

using System;
using System.Linq;

// Preloaded method Tools.FromCharCode(int i) available!

public class Kata
{
  public static string ArrowFunc(int[] arr)
  {
    return string.Join("", arr.Select(Tools.FromCharCode).ToArray());
  }
}
8 months agoRefactorDiscuss
8 kyu
Polish alphabet
JavaScript:

function correctPolishLetters(string) {
  return string
    .replace(/ą/g, "a")
    .replace(/ć/g, "c")
    .replace(/ę/g, "e")
    .replace(/ł/g, "l")
    .replace(/ń/g, "n")
    .replace(/ó/g, "o")
    .replace(/ś/g, "s")
    .replace(/ź|ż/g, "z");
}
8 months agoRefactorDiscuss
8 kyu
Simple Comparison?
JavaScript:

function add(a, b) {
	return "" + a === "" + b;
}
8 months agoRefactorDiscuss
7 kyu
Selective fear of numbers
C#:

using System;
using System.Collections.Generic;

public static class Kata
{
  static Dictionary<string, Func<int, bool>> dict 
    = new Dictionary<string, Func<int, bool>>()
  {
    { "Monday", (x) => x == 12 },
    { "Tuesday", (x) => x > 95 },
    { "Wednesday", (x) => x == 34 },
    { "Thursday", (x) => x == 0 },
    { "Friday", (x) => x % 2 == 0 },
    { "Saturday", (x) => x == 56 },
    { "Sunday", (x) => Math.Abs(x) == 666 }
  };

  public static bool AmIAfraid(string day, int num)
  {
    return dict[day](num);
  }
}
8 months agoRefactorDiscuss
8 kyu
Smallest unused ID
C#:

using System.Linq;

public class Kata
{
  public static int NextId(int[] ids)
  {
    var sorted = ids.OrderBy(x => x).ToArray();
    
    for (int x = 0; x < sorted.Length; x++)
    {
      if (sorted[x] != x)
      {
        return x;
      }
    }
    
    return sorted.Last() + 1;
  }
}
8 months agoRefactorDiscuss
7 kyu
Vectors #1
C#:

using System;

public class Vector3D
{
  public double X { get; set; }
  public double Y { get; set; }
  public double Z { get; set; }
  public double Length {
    get
    {
      return Math.Sqrt(Math.Pow(X, 2) + Math.Pow(Y, 2) + Math.Pow(Z, 2));
    }
  }
}
8 months agoRefactorDiscuss
7 kyu
String basics
C#:

using System.Linq;
using System.Text.RegularExpressions;

public class Kata
{
  public static string[] GetUserIds(string s)
  {
    return Regex.Split(s
      .Replace("#", "")
      .ToLower()
      .Trim(), @",\s+")
        .Select(x => x.StartsWith("uid") ? x.Substring(3) : x)
        .ToArray();
  }
}
8 months agoRefactorDiscuss
8 kyu
How good are you really?
C#:

using System.Linq;

public class Kata
{
  public static bool BetterThanAverage(int[] ClassPoints, int YourPoints)
  {
    return ClassPoints.Average() < YourPoints;
  }
}
8 months agoRefactorDiscuss
7 kyu
Playing with cubes III
C#:

using System;

public class Cube
{
  int side;
  public int Side
  {
    get
    {
      return side;
    }
    set
    {
      side = Math.Abs(value);
    }
  }
  
  public int Surface
  {
    get
    {
      return (int)Math.Pow(Side, 2) * 6;
    }
  }
  
  public int Volume
  {
    get
    {
      return (int)Math.Pow(Side, 3);
    }
  }
  
  public Cube(int s)
  {
    Side = s;
  }
  
  public Cube() { }
}
8 months agoRefactorDiscuss
8 kyu
Playing with cubes II
C#:

using System;

public class Cube
{
  private int Side;
  
  public Cube(int side)
  {
    SetSide(side);
  }
  
  public Cube() : this(0) { }
  
  public int GetSide()
  {
    return this.Side;
  }
  
  public void SetSide(int s)
  {
    this.Side = Math.Abs(s);
  }
}
8 months agoRefactorDiscuss
8 kyu
Playing with cubes I
C#:

public class Cube
{
  int side;
  
  public int GetSide()
  {
    return side;
  }
  
  public void SetSide(int side)
  {
    this.side = side;
  }
}
8 months agoRefactorDiscuss
8 kyu
Word Count
JavaScript:

function countWords(str) {
  const words = str.match(/\b\S+\b/g);
  return words ? words.length : 0;
}
8 months agoRefactorDiscuss
8 kyu
Find variable which breaks strict comparison!
JavaScript:

function findStrangeValue() {
  return NaN;
}
8 months agoRefactorDiscuss
8 kyu
Training JS #15: Methods of Number object--toFixed(), toExponential() and toPrecision()
JavaScript:

function howManySmaller(arr, n) {
  return arr.map(x => x.toFixed(2)).reduce((t, x) => t + (x < n), 0);
}
8 months agoRefactorDiscuss
7 kyu
Love vs friendship
C#:

using System.Linq;

public static class Kata
{
  const string ALPHA = "abcdefghijklmnopqrstuvwxyz";

  public static int WordsToMarks(string str)
  {
    return str.Aggregate(0, (t, x) => t + ALPHA.IndexOf(x) + 1);
  }
}
8 months agoRefactorDiscuss
8 kyu
Be Concise III - Sum Squares
JavaScript:

let sumSquares=a=>a.reduce((t,x)=>t+x*x,0)
8 months agoRefactorDiscuss
8 kyu
Training JS #13: Number object and its properties
JavaScript:

function whatNumberIsIt(n) {
  if (isNaN(n)) {
    return "Input number is Number.NaN";
  }

  switch (n) {
    case Number.MAX_VALUE: return "Input number is Number.MAX_VALUE";
    case Number.MIN_VALUE: return "Input number is Number.MIN_VALUE";
    case Number.NEGATIVE_INFINITY: return "Input number is Number.NEGATIVE_INFINITY";
    case Number.POSITIVE_INFINITY: return "Input number is Number.POSITIVE_INFINITY";
    default: return `Input number is ${n}`;
  };
}
8 months agoRefactorDiscuss
7 kyu
URL Timestamps
Java:

import java.net.URL;
import java.util.HashMap;

public class UrlMap {
  HashMap<String, Long> urls = new HashMap<String, Long>();

  public void setTimestamp(URL url, long timestamp) {
    urls.put(url.toString(), timestamp);
  }

  public long getTimestamp(URL url) {
    Long timestamp = urls.get(url.toString());
    return timestamp != null ? timestamp : -1;
  }
}
8 months agoRefactorDiscuss
7 kyu
Implementing a Queue
JavaScript:

class Queue {
  constructor() {
    this.a = [];
  }
  
  enqueue(item) {
    this.a.push(item);
  }
  
  dequeue() {
    return this.a.shift();
  }
  
  size() {
    return this.a.length;
  }
}
8 months agoRefactorDiscuss
6 kyu
Simple frequency sort
JavaScript:

function solve(arr) {
  const count = arr.reduce((t, x) => {
    t[x] = isNaN(t[x]) ? 0 : t[x] + 1;
    return t;
  }, {});
  
  return arr.sort((x, y) => {
    const diff = count[y] - count[x];
    return diff === 0 ? x - y : diff;
  });
}
8 months agoRefactorDiscuss
7 kyu
Simple string reversal II
JavaScript:

function solve(st, a, b) {
  return st.substring(0, a) +
    st.substring(a, b + 1).split("").reverse().join("") +
    st.substring(b + 1);
}
8 months agoRefactorDiscuss
7 kyu
Number of People in the Bus
C#:

using System.Collections.Generic;
using System.Linq;

public class Kata
{
  public static int Number(List<int[]> peopleListInOut)
  {
    return peopleListInOut.Aggregate(0, (t, x) => t + x[0] - x[1]);
  }
}
8 months agoRefactorDiscuss
8 kyu
Grasshopper - Summation
C#:

using System.Linq;

public static class Kata 
{
  public static int summation(int num)
  {
    return Enumerable.Range(1, num).Sum();
  }
}
8 months agoRefactorDiscuss
6 kyu
Title Case
C#:

using System.Linq;

public class Kata
{
  public static string TitleCase(string title, string minorWords="")
  {
    var minor = minorWords?.ToLower().Split(' ') ?? new string[0];
  
    string output = string.Join(" ", title
      .Split(' ')
      .Select((x) => 
      {
        x = x.ToLower();
        return minor.Contains(x)
          ? x
          : x.Substring(0, 1).ToUpper() + (x.Length > 1 ? x.Substring(1) : "");
      }));
      
    return output.Length > 1
      ? output.Substring(0, 1).ToUpper() + output.Substring(1)
      : output.ToUpper();
  }
}
8 months agoRefactorDiscuss
6 kyu
Give me a Diamond
C#:

using System;

public class Diamond
{
	public static string print(int n)
	{
    if (n < 0 || n % 2 == 0)
    {
      return null;
    }
  
    string diamond = "";
    int halfN = n / 2 + 1;
    int stars = 1;
  
		for (int x = 1; x < halfN; x++)
    {
      diamond += new string(' ', halfN - x) + new string('*', stars) + "\n";
      stars += 2;
    }
    
    diamond += new string('*', n) + "\n";
    
    for (int x = halfN - 1; x > 0; x--)
    {
      stars -= 2;
      diamond += new string(' ', halfN - x) + new string('*', stars) + "\n";
    }
    
    return diamond;
	}
}
8 months agoRefactorDiscuss
7 kyu
Don't give me five!
C#:

public class Kata
{
  public static int DontGiveMeFive(int start, int end)
  {
    int count = 0;
    
    for (int x = start; x <= end; x++)
    {
      if (!x.ToString().Contains("5"))
      {
        count++;
      }
    }
    
    return count;
  }
}
8 months agoRefactorDiscuss
8 kyu
A Needle in the Haystack
C#:

using System;

public class Kata
{
  public static string FindNeedle(object[] haystack)
  {
    return $"found the needle at position {Array.IndexOf(haystack, "needle")}";
  }
}
8 months agoRefactorDiscuss
7 kyu
Friend or Foe?
C#:

using System.Collections.Generic;
using System.Linq;


public static class Kata
{
  public static IEnumerable<string> FriendOrFoe(string[] names)
  {
    return names.Where(x => x.Length == 4);
  }
}
8 months agoRefactorDiscuss
7 kyu
Money, Money, Money
C#:

using System;

public class Kata
{
  public static int CalculateYears(double principal, 
    double interest, double tax, double desiredPrincipal)
  {
    if (principal >= desiredPrincipal)
    {
      return 0;
    }
    
    int years = 0;
    while (principal < desiredPrincipal)
    {
      double addedInterest = principal * interest;
      principal += addedInterest - (addedInterest * tax);
      years++;
    }
    
    return years;
  }
}
8 months agoRefactorDiscuss
7 kyu
Ones and Zeros
C#:

using System;
using System.Linq;

namespace Solution
{
  class Kata
  {
    public static int binaryArrayToNumber(int[] BinaryArray)
    {
      return BinaryArray
        .Reverse()
        .Select((x, i) => x * (int)Math.Pow(2, i))
        .Sum();
    }
  }
}
8 months agoRefactorDiscuss
7 kyu
Beginner Series #3 Sum of Numbers
C#:

using System;

public class Sum
{
  public int GetSum(int a, int b)
  {
    int sum = 0;
    
    for (int x = Math.Min(a, b); x <= Math.Max(a, b); x++)
    {
      sum += x;
    }
    
    return sum;
  }
}
8 months agoRefactorDiscuss
7 kyu
Simple string characters
JavaScript:

function solve(s) {
  const l = [0, 0, 0, 0];
  
  for (let x of s) {
    if (/[A-Z]/.test(x)) {
      l[0]++;
    }
    else if (/[a-z]/.test(x)) {
      l[1]++;
    }
    else if (/\d/.test(x)) {
      l[2]++;
    }
    else {
      l[3]++;
    }
  }
  
  return l;
}
8 months agoRefactorDiscuss
7 kyu
List of Presents
JavaScript:

function howManyGifts(maxBudget, gifts) {
  const g = [].concat(gifts).sort((x, y) => x - y);
  
  let max = g.reduce((t, x) => t + x, 0);
  while (max > maxBudget)
  {
    max -= g.pop();
  }
  
  return g.length;
}
8 months agoRefactorDiscuss
5 kyu
Scraping: Get the Year a CodeWarrior Joined
Python:

from urllib.request import urlopen
import re

def get_member_since(username):
    url = "https://www.codewars.com/users/" + username
    
    html = ""
    with urlopen(url) as profile:
        html = profile.read().decode('utf-8')
        
    return re.search("(?:Since:<\/b>)(\w{3}\s\d{4})", html).group(1)
8 months agoRefactorDiscuss
6 kyu
Emotional Sort ( ︶︿︶)
JavaScript:

const ordered = [
  ":D",
  ":)",
  ":|",
  ":(",
  "T_T"
];

function sortEmotions(arr, order) {
  // (ง •̀_•́)ง
  arr.sort((x, y) => ordered.indexOf(x) - ordered.indexOf(y));
  return order ? arr : arr.reverse();
}
8 months agoRefactorDiscuss
6 kyu
Bit Counting
C#:

using System;
using System.Linq;

public class Kata
{
  public static int CountBits(int n)
  {
    return Convert.ToString(n, 2).Count(x => x == '1');
  }
}
8 months agoRefactorDiscuss
7 kyu
Case-sensitive!
Python:

def case_sensitive(s):
    not_lower = [x for x in s if x != x.lower()]
    return [len(not_lower) == 0, not_lower]
8 months agoRefactorDiscuss
6 kyu
Highest Scoring Word
C#:

using System.Linq;
using System.Text.RegularExpressions;

public class Kata
{
  const string ALPHA = "abcdefghijklmnopqrstuvwxyz";

  public static string High(string s)
  {
    return Regex.Split(s, @"\s+")
      .OrderByDescending(x => x
        .Aggregate(0, (t, y) => t + ALPHA.IndexOf(y)))
      .ToArray()
      .First();
  }
}
8 months agoRefactorDiscuss
8 kyu
Beginner - Lost Without a Map
C#:

using System.Linq;

public class Kata
{
  public static int[] Maps(int[] x)
  {
    return x.Select(i => i * 2).ToArray();
  }
}
8 months agoRefactorDiscuss
8 kyu
String cleaning
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static string StringClean(string s)
  {
    return Regex.Replace(s, @"\d+", "");
  }
}
8 months agoRefactorDiscuss
7 kyu
Working with arrays II (and why your code fails in some katas)
JavaScript:

function removeNthElement(arr, n) {
  // Fix it
  var arrCopy = [].concat(arr);
  arrCopy.splice(n, 1); // removes the nth element
  return arrCopy;
}
8 months agoRefactorDiscuss
7 kyu
Well of Ideas - Harder Version
JavaScript:

function well(ideas) {
  const good = ideas
    .reduce((t, x) => t + x
      .filter(y => y.toString().toLowerCase() === "good").length, 0);
    
  if (good === 0) {
    return "Fail!";
  }
  else if (good < 3) {
    return "Publish!";
  }
  
  return "I smell a series!";
}
8 months agoRefactorDiscuss
8 kyu
Greek Sort
Python:

def greek_comparator(lhs, rhs):
    return greek_alphabet.index(lhs) - greek_alphabet.index(rhs)
8 months agoRefactorDiscuss
7 kyu
Summing a number's digits
C#:

using System.Linq;

public class Kata
{
  public static int SumDigits(int number)
  {
    return number
      .ToString()
      .Replace("-", "")
      .Select(x => int.Parse(x.ToString()))
      .Sum();
  }
}
8 months agoRefactorDiscuss
6 kyu
bit "Wise" #1: XOR-cism
JavaScript:

function swapper(a, b) {
  /*
   HINTS: uncomment out the following line
   for a series of hints to help you with the 
   bitwise stuff if you get stuck...
   (There are three HINTS indexed 0,1, and 2, respectively)
  */
  a ^= b;
  b ^= a;
  a ^= b;
  
  return [a, b]
}
8 months agoRefactorDiscuss
6 kyu
Arrays Similar
JavaScript:

function arraysSimilar(arr1, arr2) {
  const a1 = [].concat(arr1).sort();
  const a2 = [].concat(arr2).sort();
  
  for (let x = 0; x < a1.length; x++) {
    if (a1[x] !== a2[x]) {
      return false;
    }
  }
  
  return a1.length === a2.length;
}
8 months agoRefactorDiscuss
5 kyu
Beeramid
JavaScript:

// Returns number of complete beeramid levels
var beeramid = function(bonus, price) {
  let total = 0;
  let levels = 1;
  
  while (true) {
    total += Math.pow(levels, 2) * price;
    
    if (total > bonus) {
      return levels - 1;
    }
    
    levels++;
  }
};
8 months agoRefactorDiscuss
7 kyu
Digital cypher
C#:

using System.Linq;
using System;

public  class Kata
{
  const string ALPHA = " abcdefghijklmnopqrstuvwxyz";
  static int index = -1;
  
  static int getKey(int n)
  {
    string nums = n.ToString();
    index = index == nums.Length - 1 ? 0 : index + 1;
    
    return int.Parse(n.ToString().Substring(index, 1));
  }
  
  public static int[] Encode(string str, int n)
  {
    var encoded = str.Select(x => ALPHA.IndexOf(x) + getKey(n)).ToArray();
    index = -1;
    return encoded;
  }
}
8 months agoRefactorDiscuss
7 kyu
Alphabet war
C#:

using System.Linq;

public class Kata
{
  const string LEFT = " sbpw";
  const string RIGHT = " zdqm";

  public static string AlphabetWar(string fight)
  {
    int leftPower = fight.Aggregate(0, (t, x) => t + (LEFT.Contains(x) ? LEFT.IndexOf(x) : 0));
    int rightPower = fight.Aggregate(0, (t, x) => t + (RIGHT.Contains(x) ? RIGHT.IndexOf(x) : 0));
    
    if (leftPower > rightPower)
    {
      return "Left side wins!";
    }
    else if (leftPower < rightPower)
    {
      return "Right side wins!";
    }
    
    return "Let's fight again!";
  }
}
8 months agoRefactorDiscuss
7 kyu
Working with arrays I (and why your code fails in some katas)
JavaScript:

function withoutLast(arr) {
  const a = [].concat(arr);
  a.pop();
  return a;
}
8 months agoRefactorDiscuss
6 kyu
IQ Test
C#:

using System.Linq;

public class IQ
{
  public static int Test(string numbers)
  { 
    var nums = numbers.Split(' ').Select(x => int.Parse(x)).ToList();
    
    if (nums.Count(x => x % 2 == 0) == 1)
    {
      return nums.IndexOf(nums.First(x => x % 2 == 0)) + 1;
    }
    
    return nums.IndexOf(nums.First(x => x % 2 == 1)) + 1;
  }
}
9 months agoRefactorDiscuss
6 kyu
Create Phone Number
C#:

using System.Linq;

public class Kata
{
  public static string CreatePhoneNumber(int[] n)
  {
    string first3 = string.Join("", n.Take(3));
    string second3 = string.Join("", n.Skip(3).Take(3));
    string last = string.Join("", n.Skip(6));
    
    return $"({first3}) {second3}-{last}";
  }
}
9 months agoRefactorDiscuss
7 kyu
Exes and Ohs
C#:

using System.Linq;

public static class Kata 
{
  public static bool XO (string input)
  {
    input = input.ToLower();
    return input.Count(x => x == 'x') == input.Count(x => x == 'o');
  }
}
9 months agoRefactorDiscuss
7 kyu
5 without alphanums!!!
JavaScript:

_=()=>~(~_+~_+~_+~_+~_+~_)
9 months agoRefactorDiscuss
6 kyu
I Liked the SQL Better...
Python:

import sqlite3

movies = [
    ["Rise of the Planet of the Apes", 2011, 77],
    ["Dawn of the Planet of the Apes", 2014, 91],
    ["Alien", 1979, 97],
    ["Aliens", 1986, 98],
    ["Mad Max", 1979, 95],
    ["Mad Max 2: The Road Warrior", 1981, 100]
]

conn = sqlite3.connect('/tmp/movies.db')
cursor = conn.cursor()

cursor.execute('''CREATE TABLE MOVIES
    (Name text, Year number, Rating number)''')

sql = "INSERT INTO MOVIES VALUES ('%s','%d','%d')"

for movie in movies:
    cursor.execute(sql % (movie[0], movie[1], movie[2]))

conn.commit()
conn.close()
9 months agoRefactorDiscuss
7 kyu
Understanding closures - the basics
JavaScript:

function buildFun(n){

	var res = []

	for (let i = 0; i < n; i++){
		res.push(function() {
			return i
		})
	}
	return res
}
9 months agoRefactorDiscuss
6 kyu
An 'orrible expression on 'is face
JavaScript:

// this isn't quite right - it's not catching all the cases
const cockney = /\bh/ig;
const replacement = "`";

9 months agoRefactorDiscuss
7 kyu
Fix my method
JavaScript:

function myFunction() {
  var MyObject = {
    objProperty: "string",
    objMethod: function() {
      return this.objProperty;
		}
  };
  
  return MyObject;
};
9 months agoRefactorDiscuss
7 kyu
Thinkful - String Drills: Quotable
Python:

def quotable(name, quote):
    return '%s said: "%s"' % (name, quote)
9 months agoRefactorDiscuss
7 kyu
Debug Sum of Digits of a Number
JavaScript:

function getSumOfDigits(integer) {
  return integer.toString().split("").reduce((t, x) => t + parseInt(x), 0);
}
9 months agoRefactorDiscuss
7 kyu
Bugfix: Sum of ASCII values in a string
C:

int sum_ascii(char string[])
{
    int sum = 0;
    int index = 0;
    char current;
    
    while ((current = string[index++]) != '\0')
    {
        sum += current;
    }
    
    return sum;
}
9 months agoRefactorDiscuss
7 kyu
Back to Basics
Python:

def types(x):
    return str(type(x)).split("'")[1]
9 months agoRefactorDiscuss
7 kyu
Swap pairs in Array
Java:

public class Swappairs {

  public Object[][][] swapp(Object[][] input) {
    Object[][] outp = new Object[input.length][2];
    
    for (int x = 0; x < input.length; x++) {
       outp[x][0] = input[x][1];
       outp[x][1] = input[x][0];
    }
    
    return new Object[][][] { input, outp };
  }
}
9 months agoRefactorDiscuss
7 kyu
Large sum
Java:

import java.math.BigInteger;

public class LargeSum {

  public static String firstTenDigitsOfSum(String[] numbers) {
    BigInteger sum = new BigInteger("0");
    
    for (String number : numbers) {
      sum = sum.add(new BigInteger(number));
    }
  
    return sum.toString().substring(0, 10);
  }
}
9 months agoRefactorDiscuss
7 kyu
Recycle!
JavaScript:

function recycleMe(recycle) { 
  return [
    recycle.filter(x => x > 0).length,
    recycle.filter(x => x < 0).length,
    recycle.filter(x => x === 0).length
  ];
}
9 months agoRefactorDiscuss
7 kyu
Shorten Me: Mad Mathematician's Algorithm V (Modulus)
JavaScript:

madMod=(a,b)=>eval("a\45b")
9 months agoRefactorDiscuss
7 kyu
Shorten Me: Mad Mathematician's Algorithm III (Multiplication)
JavaScript:

madMul=(a,b)=>eval("a\52b")
9 months agoRefactorDiscuss
7 kyu
Shorten Me: Mad Mathematician's Algorithm II (Subtraction)
JavaScript:

madSub=(a,b)=>eval("a\55b")
9 months agoRefactorDiscuss
7 kyu
Single digit
Python:

from functools import reduce

def single_digit(n):
    if n < 10:
        return n
    
    n_bin = map(int, bin(n)[2:])
    return single_digit(reduce(lambda t, x: t + x, n_bin))
9 months agoRefactorDiscuss
6 kyu
Javascript filter - 3
JavaScript:

function searchNames(logins) {
  return logins.filter((x, i) => i % 2 === 1 && (logins[i - 1][0] === "." || logins[i - 1].slice(-1) === "."));
}
9 months agoRefactorDiscuss
7 kyu
Javascript filter - 1
C#:

using System.Linq;

public class Kata
{
  public static string[][] search_names(string[][] logins)
  {
    return logins.Where(x => x[0].EndsWith("_")).ToArray();
  }
}
9 months agoRefactorDiscuss
6 kyu
Array.isArray
JavaScript:

function isArray(arr) {
  // This is what we would like to do, but it's not allowed.
  return arr.Constructor === Array;
};
9 months agoRefactorDiscuss
7 kyu
Flatten
JavaScript:

var flatten = function (array) {
  return [].concat(...array);
}
9 months agoRefactorDiscuss
8 kyu
Function 3 - multiplying two numbers
Elixir:

defmodule SimpleMath do
  def multiply(x, y) do
    x * y
  end
end
9 months agoRefactorDiscuss
8 kyu
Convert boolean values to strings 'Yes' or 'No'.
C++:

using namespace std;

string bool_to_word(bool value)
{
  return value ? "Yes" : "No";
}
9 months agoRefactorDiscuss
7 kyu
Breaking chocolate problem
C#:

using System;

public class Kata 
{
  public static int BreakChocolate(int n, int m) 
  {
    if (Math.Min(n, m) < 1)
    {
      return 0;
    }
    
    return n * m - 1;
  }
}
9 months agoRefactorDiscuss
8 kyu
Find Maximum and Minimum Values of a List
C#:

using System.Linq;

public class Kata
{
  public int Min(int[] list)
  {
    return list.Min();
  }
  
  public int Max(int[] list)
  {
    return list.Max();
  }
}
9 months agoRefactorDiscuss
8 kyu
Basic Mathematical Operations
C:

int basic_op(char op, int value1, int value2)
{
  switch (op)
  {
  case '+': return value1 + value2;
  case '-': return value1 - value2;
  case '*': return value1 * value2;
  case '/': return value1 / value2;
  }
}
9 months agoRefactorDiscuss
7 kyu
Two fighters, one winner.
C++:

std::string declareWinner(Fighter* fighter1, Fighter* fighter2,
  std::string firstAttacker)
{
  Fighter* f1;
  Fighter* f2;
  
  if (fighter1->getName() == firstAttacker)
  {
    f1 = fighter1;
    f2 = fighter2;
  }
  else
  {
    f1 = fighter2;
    f2 = fighter1;
  }
  
  while (true)
  {
    f1->setHealth(f1->getHealth() - f2->getDamagePerAttack());
    f2->setHealth(f2->getHealth() - f1->getDamagePerAttack());
    
    if (f2->getHealth() <= 0)
    {
      return f1->getName();
    }
    else if (f1->getHealth() <= 0)
    {
      return f2->getName();
    }
  }
}
9 months agoRefactorDiscuss
7 kyu
Sum of the first nth term of Series
C#:

using System;

public class NthSeries
{
  public static string seriesSum(int n)
  {
    if (n == 0)
    {
      return "0.00";
    }
  
    double div = 4;
    double output = 1.0;
    
    for (int x = 0; x < n - 1; x++)
    {
      output += 1 / div;
      div += 3;
    }
    
    return Math.Round(output, 2).ToString("n2");
  }
}
9 months agoRefactorDiscuss
7 kyu
Categorize New Member
C#:

using System.Collections.Generic;
using System.Linq;

public class Kata
{
  public static IEnumerable<string> OpenOrSenior(int[][] data)
  {
    var list = new List<string>();
    
    foreach (var person in data)
    {
      if (person[0] > 54 && person[1] > 7)
      {
        list.Add("Senior");
      }
      else
      {
        list.Add("Open");
      }
    }
    
    return list.ToArray();
  }
}
9 months agoRefactorDiscuss
7 kyu
Remove the minimum
C#:

using System.Collections.Generic;
using System.Linq;

public class Remover
{
  public static List<int> RemoveSmallest(List<int> numbers)
  {
    if (numbers == null || !numbers.Any())
    {
      return numbers;
    }
  
    var output = new List<int>();
    int smallest = numbers.Min();
    bool skipped = false;
    
    foreach (int number in numbers)
    {
      if (number != smallest || skipped)
      {
        output.Add(number);
      }
      else
      {
        skipped = true;
      }
    }
    
    return output;
  }
}
9 months agoRefactorDiscuss
7 kyu
Binary Addition
C#:

using System;

public static class Kata
{
  public static string AddBinary(int a, int b)
  {
    return Convert.ToString(a + b, 2);
  }
}
9 months agoRefactorDiscuss
7 kyu
Regex validate PIN code
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static bool ValidatePin(string pin)
  {
    return (pin.Length == 4 || pin.Length == 6) && 
      Regex.Matches(pin, @"\d").Count == pin.Length;
  }
}
9 months agoRefactorDiscuss
7 kyu
Sum of two lowest positive integers
C#:

using System.Linq;

public static class Kata
{
	public static int sumTwoSmallestNumbers(int[] numbers)
	{
		return numbers.OrderBy(x => x).Take(2).Sum();
	}
}
9 months agoRefactorDiscuss
6 kyu
Counting Duplicates
C#:

using System.Linq;

public class Kata
{
  public static int DuplicateCount(string str)
  {
    str = str.ToLower();
    return str.Distinct().Count(x => str.Count(y => x == y) > 1);
  }
}
9 months agoRefactorDiscuss
7 kyu
Two to One
C#:

using System.Linq;

public class TwoToOne 
{
	public static string Longest (string s1, string s2) 
  {
    return string.Join("", (s1 + s2).Distinct().OrderBy(x => x));
  }
}
9 months agoRefactorDiscuss
6 kyu
Your order, please
C#:

using System.Linq;
using System.Text.RegularExpressions;

public static class Kata
{
  public static string Order(string words)
  {
    return string.Join(" ", words
      .Split(' ')
      .OrderBy(x => Regex.Match(x, @"\d+").Value));
  }
}
9 months agoRefactorDiscuss
7 kyu
Bicycle gear inch calculator
JavaScript:

function gearInchCalculator(chainrings, sprockets) {
	const wheelDiameter = 26;
  const output = [];
  
  for (let x = 0; x < chainrings.length; x++) {
    output.push([]);
    
    for (let sprocket of sprockets) {
      output[x].push(
        Math.round((wheelDiameter * (chainrings[x] / sprocket)) * 10) / 10);
    }
  }
  
  return output;
}
9 months agoRefactorDiscuss
7 kyu
Sum of a nested list
JavaScript:

const flatten = arr => {
  return [].concat(...arr
    .map(x => Array.isArray(x)
      ? flatten(x)
      : x));  
};

const sumNested = arr => {
  return arr && arr.length !== 0 
    ? flatten(arr).reduce((t, x) => t + x, 0)
    : 0;
};
9 months agoRefactorDiscuss
const flatten = arr => {
  return [].concat(...arr
    .map(x => Array.isArray(x)
      ? flatten(x)
      : x));  
};

const sumNested = arr => {console.log(flatten(arr));
  return arr && arr.length !== 0 
    ? flatten(arr).reduce((t, x) => t + x, 0)
    : 0;
};
9 months agoRefactorDiscuss
6 kyu
Which are in?
C#:

using System.Linq;

class WhichAreIn
{
    public static string[] inArray(string[] array1, string[] array2)
    {
        return array1
          .Where(x => array2.Any(y => y.Contains(x)))
          .OrderBy(x => x)
          .ToArray();
    }
}
9 months agoRefactorDiscuss
6 kyu
Sum of prime-indexed elements
JavaScript:

const isPrime = (number) => {
  for (let x = 2, sqrt = Math.sqrt(number); x <= sqrt; x++) {
    if (number % x === 0) {
      return false;
    }
  }
  
  return number > 1;
};

function total(arr) {
  return arr && arr.length !== 0
    ? arr.reduce((t, x, i) => isPrime(i) ? t + x : t, 0)
    : 0;
}
9 months agoRefactorDiscuss
6 kyu
Perfect Square.
JavaScript:

function perfectSquare(string) {
  const array = string.split("\n");
  
  for (let row of array) {
    if (row.length !== array[0].length || !/^\.+$/.test(row)) {
      return false;
    }
  }
  
  return array.length === array[0].length;
}
9 months agoRefactorDiscuss
6 kyu
Dumbphone Keypads
Python:

special = [ "*", "#" ]

buttons = [
    " 0",
    "1",
    "ABC2",
    "DEF3",
    "GHI4",
    "JKL5",
    "MNO6",
    "PQRS7",
    "TUV8",
    "WXYZ9"
]

def sequence(phrase):
    output = ""
    last_index = -1
    
    for letter in phrase.upper():
        index = 0
        
        for button in buttons:
            if letter in special:
                output += letter
                last_index = -1
                break
            if letter in button:
                if index == last_index:
                    output += "p"
                    
                last_index = index
                output += str(index) * (button.index(letter) + 1)
                break
                
            index += 1
            
    return output
            
9 months agoRefactorDiscuss
5 kyu
Sort a massive list of strings (hard)
Python:

from heapq import merge

def sort(words):
    words = list(words)
    length = len(words)
    if length < 2:
        return words
    
    middle = length // 2
    left = words[:middle]
    right = words[middle:]

    left = sort(left)
    right = sort(right)

    return iter(list(merge(left, right)))
9 months agoRefactorDiscuss
7 kyu
Sort array by string length
C#:

using System.Linq;

public class Kata
{
  public static string[] SortByLength(string[] array)
  {
    return array.OrderBy(x => x.Length).ToArray();
  }
}
9 months agoRefactorDiscuss
7 kyu
Posix command
Python:

from os import popen

def get_output(s):
    return popen(s).read()
9 months agoRefactorDiscuss
7 kyu
Mega Man Boss Order
JavaScript:

function getBossOrder(bosses) {
  let boss = bosses.find(x => x.difficulty === 1);
  const order = [boss.name];
  
  for (let x = 0; x < bosses.length - 1; x++) {
    boss = bosses.find(x => x.weakness === boss.weapon);
    order.push(boss.name);
  }
  
  return order;
}
9 months agoRefactorDiscuss
8 kyu
Do I get a bonus?
C#:

public static class Kata
{
    public static string bonus_time(int salary, bool bonus)
    {
        return $"${bonus ? salary * 10 : salary}";
    }
}
9 months agoRefactorDiscuss
6 kyu
Creating a string for an array of objects from a set of words
JavaScript:

function wordsToObject(input) {
  return "[" + input
    .split(/(\S+\s\S+)(?:\s)/)
    .filter(x => x)
    .map(x => {
      x = x.split(" ");
      return `{name : '${x[0]}', id : '${x[1]}'}`;
    })
    .join(", ") + "]";
}
9 months agoRefactorDiscuss
6 kyu
Consonant value
JavaScript:

function solve(s) {
  const alpha = " abcdefghijklmnopqrstuvwxyz";
  return s
    .replace(/a|e|i|o|u/g, "_")
    .split("_")
    .map(x => x.split("").reduce((t, y) => t + alpha.indexOf(y), 0))
    .sort((x, y) => x - y)
    .pop();
}
9 months agoRefactorDiscuss
7 kyu
String matchup
JavaScript:

function solve(a, b) {
  const array = new Array(b.length).fill(0);
  
  for (let x of a) {
    for (let y = 0; y < b.length; y++) {
      if (x === b[y]) {
        array[y]++;
      }
    }
  }
  
  return array;
}
9 months agoRefactorDiscuss
8 kyu
Returning Strings
Python:

def greet(name):
    return "Hello, " + str(name) + " how are you doing today?"
9 months agoRefactorDiscuss
8 kyu
!a == a ?!
JavaScript:

const a = [0];
9 months agoRefactorDiscuss
8 kyu
Who is going to pay for the wall?
JavaScript:

function whoIsPaying(name) {
  name = [name];
  
  if (name[0].length > 2) {
    name.push(name[0].substring(0, 2));
  }
  
  return name;
}
9 months agoRefactorDiscuss
7 kyu
Adding useful functional functionality to JavaScript arrays
JavaScript:

Array.range = function(start, count) {
  return Array.from(Array(count).keys()).map((x, i) => start + i);
};

Array.prototype.sum = function() {
  return this && this.length > 0 ? this.reduce((t, x) => t + x, 0) : 0;
};
9 months agoRefactorDiscuss
5 kyu
Calculate age in years
JavaScript:

/**
 * Return the difference between a birthdate and an optional "now" date, in years
 * 
 * @param {Date} birthDate
 * @param {Date} nowDate
 * @return  {Number}
 */
function getAge(birthDate, nowDate) {
  nowDate = nowDate || new Date();
  return nowDate.getFullYear() - birthDate.getFullYear() - 
    (nowDate.getMonth() < birthDate.getMonth() || 
    (nowDate.getMonth() === birthDate.getMonth() &&
    nowDate.getDate() < birthDate.getDate()));
}
9 months agoRefactorDiscuss
6 kyu
Custom sort function
JavaScript:

function sort(items) {
  if (!items || items.length === 0) {
    return items;
  }

  let changed = true;
  while (changed) {
    changed = false;
    
    for (let x = 1; x < items.length; x++) {
      if (items[x] < items[x - 1]) {
        const temp = items[x];
        items[x] = items[x - 1];
        items[x - 1] = temp;
        
        changed = true;
      }
    }
  }
  
  return items;
}
9 months agoRefactorDiscuss
6 kyu
Duplicate Arguments
JavaScript:

function solution() {
 return new Set([...arguments]).size !== arguments.length;
}
9 months agoRefactorDiscuss
5 kyu
Simple Pig Latin
C#:

using System.Linq;

public class Kata
{
  public static string PigIt(string str)
  {
    return string.Join(" ", str
      .Split(' ')
      .Select(x => x.Length == 1 ? x : x.Substring(1) + x.Substring(0, 1) + "ay"));
  }
}
9 months agoRefactorDiscuss
5 kyu
ISBN-10 Validation
JavaScript:

function validISBN10(isbn) {
  return isbn.length === 10 && isbn
    .split("")
    .reduce((t, x, i) => t + (x === "X" && i === 9 ? 10 : x) * (i + 1), 0)
    % 11 === 0;
}
9 months agoRefactorDiscuss
8 kyu
How many lightsabers do you own?
C#:

public class Kata
{
  public static int HowManyLightsabersDoYouOwn(string name)
  {
    return name == "Zach" ? 18 : 0;
  }
}
9 months agoRefactorDiscuss
5 kyu
Sort arrays - 3
JavaScript:

sortme = function(courses) {
  const setup = (course) => {
    course = course.split("-");
    return course[1] + course[0]
  };
  
  return courses.sort((x, y) => setup(x) > setup(y));
};
9 months agoRefactorDiscuss
7 kyu
Substituting Variables Into Strings: Padded Numbers
C#:

public class PaddedNumbers
{
  public static string Solution(int value)
  {
    return $"Value is {value.ToString().PadLeft(5, '0')}";
  }
}
9 months agoRefactorDiscuss
7 kyu
count vowels in a string
Python:

from functools import reduce

def count_vowels(s = ''):
    if str(s) != s:
        return None
    
    count = 0
    for x in s.lower():
        count += int(x in "aeiou")
    
    return count
    
9 months agoRefactorDiscuss
6 kyu
Custom Setters and Getters
JavaScript:

class Archiver {
  constructor() {
    this._temperature = null;
    this._archive = [];
  }
  
  get temperature() {
    return this._temperature;
  }
  
  set temperature(temperature) {
    this._archive.push({ date: new Date(), val: temperature });
    this._temperature = temperature;
  }
  
  getArchive() {
    return this._archive;
  }
}
9 months agoRefactorDiscuss
8 kyu
Function 2 - squaring an argument
CoffeeScript:

square = (x) -> x * x
9 months agoRefactorDiscuss
8 kyu
Function 1 - hello world
Haskell:

module Codewars.Kata.HelloWorld where

greet :: String
greet = "hello world!"
9 months agoRefactorDiscuss
7 kyu
True Min
JavaScript:

function min(a, b) {
  if (a === null) a = 0;
  if (b === null) b = 0;
  if (isNaN(parseFloat(a)) || isNaN(parseFloat(a))) return NaN;
  return (a<b)?a:b;
}
9 months agoRefactorDiscuss
7 kyu
Limit string length - 1
C#:

public class Kata
{
  public static string Limit(string text, int limit)
  {
    return text.Length <= limit ? text : text.Substring(0, limit) + "...";
  }
}
9 months agoRefactorDiscuss
7 kyu
No oddities here
C#:

using System.Linq;

public class NoOddities
{
    public static int[] NoOdds(int[] values) 
    {
        return values.Where(x => x % 2 == 0).ToArray();
    }
}
9 months agoRefactorDiscuss
6 kyu
Break camelCase
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static string BreakCamelCase(string str)
  {
    return string.Join(" ", Regex.Split(str, "(?=[A-Z])"));
  }
}
9 months agoRefactorDiscuss
7 kyu
Remove anchor from URL
C#:

using System.Text.RegularExpressions;

public static class Kata
{
  public static string RemoveUrlAnchor(string url)
  {
    return Regex.Match(url, @".+(?=#)|.+").Value;
  }
}
9 months agoRefactorDiscuss
6 kyu
Find within array
JavaScript:

var findInArray = function(array, iterator) {
  for (let x = 0; x < array.length; x++) {
    if (iterator(array[x], x)) {
      return x;
    }
  }
  
  return -1;
};
9 months agoRefactorDiscuss
7 kyu
Sort arrays - 1
C#:

using System.Linq;

public class Kata
{
  public static string[] SortMe(string[] names)
  {
    return names.OrderBy(x => x).ToArray();
  }
}
9 months agoRefactorDiscuss
7 kyu
String ends with?
C#:

public class Kata
{
  public static bool Solution(string str, string ending)
  {
    return str.EndsWith(ending);
  }
}
9 months agoRefactorDiscuss
6 kyu
Convert string to camel case
C#:

using System.Linq;

public class Kata
{
  public static string ToCamelCase(string str)
  {
    if (str.Length < 1)
    {
      return str;
    }
  
    char delim = '_';
    str = str.Replace("-", "_");
    
    return str.Substring(0, 1) + string.Join("", str
      .Split(delim)
      .Select(x => x.Substring(0, 1).ToUpper() + (x.Length > 1 ? x.Substring(1) : "").ToLower()))
      .Substring(1);
  }
}
9 months agoRefactorDiscuss
6 kyu
Split Strings
C#:

using System.Collections.Generic;

public class SplitString
{
  public static string[] Solution(string str)
  {
    var list = new List<string>();
    
    for (int x = 1; x < str.Length; x += 2)
    {
      list.Add(str.Substring(x - 1, 2));
    }
    
    if (str.Length % 2 == 1)
    {
      list.Add(str.Substring(str.Length - 1, 1) + "_");
    }
    
    return list.ToArray();
  }
}
9 months agoRefactorDiscuss
7 kyu
Return substring instance count
C#:

using System.Text.RegularExpressions;

public class Kata
{
  public static int SubstringCount(string fullText, string searchText)
  {
    return Regex.Matches(fullText, searchText).Count;
  }
}
9 months agoRefactorDiscuss
6 kyu
Time-like string format
C#:

using System;

public class Kata
{
  public static string FormatTime(int hour)
  {
    string h = hour.ToString();
    
    if (h.Length < 3 || h.Length > 4)
    {
      throw new ArgumentException("Hour must be 3 to 4 digits long");
    }
    
    return h.Substring(0, h.Length - 2) + ":" + h.Substring(h.Length - 2, 2);
  }
}
9 months agoRefactorDiscuss
7 kyu
Elapsed Seconds
C#:

using System;

public class Kata
{
  public static int ElapsedSeconds(DateTime startDate, DateTime endDate)
  {
    return (int)(endDate - startDate).TotalSeconds;
  }
}
9 months agoRefactorDiscuss
6 kyu
Make the Deadfish swim.
C#:

using System.Linq;
using System.Collections.Generic;

public class Deadfish
{
  public static int[] Parse(string data)
  {
    int val = 0;
    var list = new List<int>();
    
    foreach (char c in data)
    {
      if (c == 'i')
      {
        val++;
      }
      else if (c == 'd')
      {
        val--;
      }
      else if (c == 's')
      {
        val *= val;
      }
      else if (c == 'o')
      {
        list.Add(val);
      }
    }
    
    return list.ToArray();
  }
}
9 months agoRefactorDiscuss
7 kyu
Fizz / Buzz
C#:

using System.Linq;

public class Kata
{
  public static int[] Solution(int number)
  {
    var range = Enumerable.Range(1, number - 1);
    var fizzBuzz = new int[] { 0, 0, 0 };
    
    foreach (int num in range)
    {
      if (num % 3 == 0 && num % 5 == 0)
      {
        fizzBuzz[2]++;
      }
      else if (num % 3 == 0 && num % 5 != 0)
      {
        fizzBuzz[0]++;
      }
      else if (num % 3 != 0 && num % 5 == 0)
      {
        fizzBuzz[1]++;
      }
    }
    
    return fizzBuzz;
  }
}
9 months agoRefactorDiscuss
4 kyu
Strip Comments
JavaScript:

function solution(input, markers) {
  const remove = (line) => {
    for (let marker of markers) {
      line = line.replace(new RegExp(
        marker.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&') + "(.?)+", "g"), "").trim();
    }
    
    return line;
  };
  
  return input.split("\n").map(x => remove(x)).join("\n");
}
9 months agoRefactorDiscuss
8 kyu
Reversed Words
C#:

using System.Linq;

public class Kata
{
  public static string ReverseWords(string str)
  {
    return string.Join(" ", str.Split(' ').Reverse());
  }
}
9 months agoRefactorDiscuss
7 kyu
Building Strings From a Hash
C#:

using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  public static string StringifyDict<TKey, TValue>(Dictionary<TKey, TValue> hash)
  {
    return string.Join(",", hash.Keys.Select(x => $"{x} = {hash[x]}"));
  }
}
9 months agoRefactorDiscuss
7 kyu
Get key/value pairs as arrays
JavaScript:

function keysAndValues(data) {
  const names = Object.getOwnPropertyNames(data);
  return [ names, names.map(x => data[x]) ];
}
9 months agoRefactorDiscuss
7 kyu
JavaScript class-like objects
JavaScript:

class Animal {
  constructor(name, type) {
    this.name = name;
    this.type = type;
  }
  
  toString() {
    return `${this.name} is a ${this.type}`;
  }
}
9 months agoRefactorDiscuss
8 kyu
Basic Training: Add item to an Array
JavaScript:

websites.push("codewars")
9 months agoRefactorDiscuss
8 kyu
Short Long Short
C#:

public class ShortLongShort
{
  public static string Solution(string a, string b)
  {
    return a.Length > b.Length ? b + a + b : a + b + a;
  }
}
9 months agoRefactorDiscuss
5 kyu
Ninja vs Samurai: Attack + Block
Python:

Position = {'high': 'h', 'low': 'l'}

class Warrior():
    def __init__(self, name):
        # each warrior should be created with a name and 100 health points
        self.name = name
        self.health = 100
        self.deceased = False
        self.zombie = False
        # default guard is "", that is unguarded
        self.block = ""
        
    def attack(self, enemy, position):
        # attacking high deals 10 damage, low 5
        # 0 damage if the enemy blocks in the same position
        if enemy.block != position:
            damage = 10 if position == Position['high'] else 5
            # and even more damage if the enemy is not blocking at all
            if enemy.block == "":
                damage += 5
            enemy.set_health(enemy.health - damage)
    
    def set_health(self, new_health):
        # health cannot have negative values
        self.health = max(0, new_health)
        # if a warrior is set to 0 health he is dead
        # he would be a zombie only if he was already dead
        if self.deceased:
            self.zombie = True
            
        elif self.health == 0:
            self.deceased = True
            self.zombie = False
9 months agoRefactorDiscuss
6 kyu
Format words into a sentence
C#:

using System.Linq;

public static class Kata
{
  public static string FormatWords(string[] words)
  {
    var all = words?.Where(x => x != "").ToArray();
    
    if (!all?.Any() ?? true)
    {
      return "";
    }
    
    if (all.Length == 1)
    {
      return all[0];
    }
    
    return $"{string.Join(", ", all.Take(all.Length - 1))} and {all.Last()}";
  }
}
9 months agoRefactorDiscuss
7 kyu
Sort Numbers
C#:

using System.Linq;

public class Kata
{
  public static int[] SortNumbers(int[] nums)
  {
    return nums?.OrderBy(x => x).ToArray() ?? new int[0];
  }
}
9 months agoRefactorDiscuss
8 kyu
Reversed Strings
C#:

using System.Linq;

public static class Kata
{
  public static string Solution(string str) 
  {
    return string.Join("", str.Reverse());
  }
}
9 months agoRefactorDiscuss
7 kyu
Refactored Greeting
JavaScript:

class Person {
  constructor(name) {
    this.name = name;
  }
  
  greet(name) {
    return `Hello ${name}, my name is ${this.name}`;
  }
}
9 months agoRefactorDiscuss
7 kyu
Largest 5 digit number in a series
C#:

public class Kata 
{
  public static int GetNumber(string str) 
  {
    int largest = 0;
    
    for (int x = 0; x < str.Length - 4; x++)
    {
      int num = int.Parse(str.Substring(x, 5));
      if (num > largest)
      {
        largest = num;
      }
    }
    
    return largest;
  }
}
9 months agoRefactorDiscuss
7 kyu
Retrieve array value by index with default
C#:

using System;

public static class Kata
{
  public static int Solution(int[] items, int index, int defaultValue)
  {
    return Math.Abs(index) <= items.Length
      ? index < 0 
        ? items[items.Length + index]
        : items[index]
      : defaultValue;
  }
}
9 months agoRefactorDiscuss
8 kyu
Square(n) Sum
C#:

using System;
using System.Linq;

public static class Kata
{
  public static int SquareSum(int[] n)
  { 
    return n.Select(x => (int)Math.Pow(x, 2)).Sum();
  }
}
9 months agoRefactorDiscuss
8 kyu
Calculate average
C#:

using System.Linq;

class AverageSolution
{
  public static double FindAverage(double[] array)
  {
    return array.Any() ? array.Average() : 0;
  }
} 
9 months agoRefactorDiscuss
8 kyu
Third Angle of a Triangle
Clojure:

(ns third-angle-of-triangle.core)

(defn third-angle [a b]
  (- 180 a b)
)
11 months agoRefactorDiscuss
PHP:

function otherAngle($a, $b) {
  return 180 - $a - $b;
}
9 months agoRefactorDiscuss
7 kyu
Get the Middle Character
TypeScript:

export class Challenge {
  static getMiddle(s:string) {
    var mid = Math.floor(s.length / 2);
    return s.length % 2 == 0
      ? s[mid - 1] + s[mid]
      : s[mid];
  }
}
11 months agoRefactorDiscuss
C#:

public class Kata
{
  public static string GetMiddle(string s)
  {
    return s.Length % 2 == 0
      ? s.Substring(s.Length / 2 - 1, 2)
      : s.Substring(s.Length / 2, 1);
  }
}
9 months agoRefactorDiscuss
8 kyu
Can we divide it?
JavaScript:

function isDivideBy(number, a, b) {
  return number % a === 0 && number % b === 0;
}
10 months agoRefactorDiscuss
C#:

public class Kata
{
    public static bool is_divide_by(int number, int a, int b)
    {
        return number % a == 0 && number % b == 0;
    }
}
9 months agoRefactorDiscuss
6 kyu
Strip Url Params
JavaScript:

function stripUrlParams(url, paramsToStrip) {
  const qMarkIndex = url.indexOf("?");
  
  if (qMarkIndex === -1) {
    return url;
  }
  
  const params = url.slice(qMarkIndex + 1).split("&");
  
  url = url.substring(0, qMarkIndex + 1);
  
  const usedParams = paramsToStrip || [];
  const finalParams = [];
  
  for (let param of params) {
    const paramName = param.substring(0, param.indexOf("="))
    
    if (usedParams.indexOf(paramName) === -1) {
      usedParams.push(paramName);
      finalParams.push(param);
    }
  }
  
  return url + finalParams.join("&");
}
9 months agoRefactorDiscuss
7 kyu
Float Precision
C#:

using System;

public class Kata
{
  public static double Round(double n)
  {
    return Math.Round(n, 2);
  }
}
9 months agoRefactorDiscuss
7 kyu
JavaScript Array Filter
C#:

using System.Linq;

public class Kata
{
  public static int[] GetEvenNumbers(int[] numbers)
  {
    return numbers.Where(x => x % 2 == 0).ToArray();
  }
}
9 months agoRefactorDiscuss
7 kyu
Two Oldest Ages
C#:

using System.Linq;

public class LargestTwo
{
  public static int[] TwoOldestAges(int[] ages)
  {
    return ages.OrderBy(x => x).Skip(ages.Length - 2).ToArray();
  }
}
9 months agoRefactorDiscuss
8 kyu
Mr. Freeze
JavaScript:

Object.freeze(MrFreeze);
9 months agoRefactorDiscuss
8 kyu
Kata Example Twist
C#:

using System.Linq;

public static class Kata 
{
  public static string[] Websites => Enumerable.Repeat("codewars", 1000).ToArray();
}
9 months agoRefactorDiscuss
6 kyu
Rainfall
C#:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text.RegularExpressions;

class Rainfall 
{
    static IEnumerable<double> getNumbers(string town, string strng)
    {
        strng = strng
            .Split('\n')
            .FirstOrDefault(x => x.StartsWith(town + ":"));
             
        if (strng == null)
        {
            return null;
        }
        
        return Regex.Matches(strng, @"\d+\.\d+")
            .OfType<Match>()
            .Select(x => double.Parse(x.Value));
    }

    public static double Mean(string town, string strng) 
    {
        return getNumbers(town, strng)?.Average() ?? -1;
    }
    
    public static double Variance(string town, string strng) 
    {
        var numbers = getNumbers(town, strng);
        
        if (numbers == null)
        {
            return -1;
        }
        
        double avg = numbers.Average();
        
        return numbers.Select(x => Math.Pow(x - avg, 2)).Average();
    }
}
9 months agoRefactorDiscuss
7 kyu
Dominant array elements
JavaScript:

function solve(arr) {
  return arr
    .filter((x, i) => arr
      .slice(i).filter(y => x > y).length === arr.length - i - 1);
}
9 months agoRefactorDiscuss
8 kyu
Cat years, Dog years
Java:

public class Dinglemouse {

  public static int[] humanYearsCatYearsDogYears(final int humanYears) {
    if (humanYears == 1) {
      return new int[] { 1, 15, 15 };
    }
    else if (humanYears == 2) {
      return new int[] { 2, 24, 24 };
    }
    
    return new int[] {
      humanYears,
      (humanYears - 2) * 4 + 24,
      (humanYears - 2) * 5 + 24
    };
  }
}
9 months agoRefactorDiscuss
6 kyu
String array revisal
JavaScript:

function dup(s) {
  return s.map(x => x.replace(/(.)\1+/g, "$1"));
}
9 months agoRefactorDiscuss
7 kyu
Sum of array singles
C#:

using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  public static int Repeats(List<int> source)
  {
    return source.Where(x => source.Count(y => y == x) == 1).Sum();
  }
}
9 months agoRefactorDiscuss
7 kyu
Elevator Distance
JavaScript:

function elevatorDistance(array) {
  let floors = 0;

  for (let x = 1; x < array.length; x++) {
    floors += Math.max(array[x], array[x - 1]) - Math.min(array[x], array[x - 1]);
  }
  
  return floors;
}
9 months agoRefactorDiscuss
6 kyu
Sentence Calculator
JavaScript:

const lower = "abcdefghijklmnopqrstuvwxyz";
const upper = lower.toUpperCase();

function lettersToNumbers(s) {
  return s.split("").reduce((t, x) => {
    let index;
  
    if ((index = lower.indexOf(x)) !== -1) {
      return t + index + 1;
    }
    
    if ((index = upper.indexOf(x)) !== -1) {
      return t + (index + 1) * 2;
    }
    
    if (!isNaN(x) && x !== " ") {
      return t + parseInt(x);
    }
    
    return t;
  }, 0);
}
9 months agoRefactorDiscuss
6 kyu
Sort Arrays (Ignoring Case)
JavaScript:

sortme = function(names) {
  return names.sort((x, y) => x.toLowerCase() > y.toLowerCase());
}
9 months agoRefactorDiscuss
6 kyu
Sorting Book Titles: Ignoring Articles
C#:

using System.Collections.Generic;
using System.Linq;

namespace Kata
{
  public class TitleSorter
  {
    bool startsWithArticle(string title)
    {
      title = title.ToLower().Trim();
      var articles = new string[] { "the", "an", "a" };
      
      foreach (var article in articles)
      {
        if (title == article)
        {
          return false;
        }
        
        if (title.StartsWith(article + " "))
        {
          return true;
        }
      }
      
      return false;
    }
  
    public List<string> Sort(List<string> unsortedTitles)
    {
      return unsortedTitles?
        .OrderBy(x => startsWithArticle(x) 
          ? $"{x.Substring(x.IndexOf(" ") + 1)}, {x.Substring(0, x.IndexOf(" "))}" : x)
        .ToList();
    }
  }
}
9 months agoRefactorDiscuss
6 kyu
Sort My Animals
C#:

using System.Collections.Generic;
using System.Linq;

namespace Kata
{
  public class Animal
  {
    public string Name { get; set; }
    public int NumberOfLegs { get; set; }
  }

  public class AnimalSorter
  {
    public List<Animal> Sort(List<Animal> input)
    {
      if (input == null)
      {
        return null;
      }
      
      return input.OrderBy(x => x.NumberOfLegs).ThenBy(x => x.Name).ToList();
    }
  }
}
9 months agoRefactorDiscuss
6 kyu
String Letter Counting
C#:

using System.Collections.Generic;
using System.Linq;

public class Kata
{
  public static string StringLetterCount(string str)
  {
    var dict = new Dictionary<char, int>();
    
    foreach (char c in str.ToLower())
    {
      if (char.IsLetter(c))
      {
        if (!dict.ContainsKey(c))
        {
          dict.Add(c, 1);
        }
        else
        {
          dict[c]++;
        }
      }
    }
    
    return string.Join("", dict
      .OrderBy(x => x.Key)
      .Select(x => x.Value.ToString() + x.Key.ToString()));
  }
}
9 months agoRefactorDiscuss
6 kyu
High score table
Python:

class HighScoreTable:
    
    def __init__(self, max):
        self.max = max
        self.scores = []
    
    def update(self, score):
        self.scores.append(score)
        self.scores.sort()
        self.scores.reverse()
        if len(self.scores) > self.max:
            self.scores.pop()
        
    
    def reset(self):
        self.scores.clear()
9 months agoRefactorDiscuss
8 kyu
Type of sum
JavaScript:

function typeOfSum(a, b) {
  return typeof(a + b);
}
9 months agoRefactorDiscuss
8 kyu
CSV representation of array
JavaScript:

function toCsvText(array) {
   return array.reduce((t, a) =>
     t += a.reduce((t2, x) =>
       t2 += x + ",", "").slice(0, -1) + "\n", "").slice(0, -1);
}
9 months agoRefactorDiscuss
8 kyu
Define a card suit
JavaScript:

function defineSuit(card) {
  switch (card.substring(card.length - 1)) {
    case "♣":
      return "clubs";
    case "♦":
      return "diamonds";
    case "♥":
      return "hearts";
    case "♠":
      return "spades";
  }
}
9 months agoRefactorDiscuss
8 kyu
Check the exam
JavaScript:

function checkExam(array1, array2) {
  return Math.max(0, array1.reduce((t, x, i) => {
    if (array2[i] === "") {
      return t;
    }
    else {
      return t += x === array2[i] ? 4 : -1
    }
  }, 0));
}
9 months agoRefactorDiscuss
7 kyu
Shorten Me: Array Declaration II (undefined)
JavaScript:

array=_=>[...typeof(_)]
9 months agoRefactorDiscuss
7 kyu
Quine
JavaScript:

function quine() {
  return quine.toString();
}
9 months agoRefactorDiscuss
8 kyu
Who ate the cookie?
JavaScript:

function cookie(x) {
  if (typeof(x) === "string") {
    return "Who ate the last cookie? It was Zach!";
  }
  if (typeof(x) === "number") {
    return "Who ate the last cookie? It was Monica!";
  }
  return "Who ate the last cookie? It was the dog!";
}
9 months agoRefactorDiscuss
7 kyu
N seconds ago
Python:

from datetime import datetime, timedelta

def seconds_ago(s,n):
    return str(datetime.strptime(s, "%Y-%m-%d %X") - timedelta(seconds=n))
9 months agoRefactorDiscuss
7 kyu
Thinkful - Object Drills: Vectors
JavaScript:

class Vector {
  constructor(x, y) {
    this.x = x;
    this.y = y;
  }
  
  add(vector) {
    return new Vector(this.x + vector.x, this.y + vector.y);
  }
}
9 months agoRefactorDiscuss
6 kyu
Simplify Unique
JavaScript:

const allowed = "0132456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ -";
const urls = [];

function simunq(original) {
  original = original.split("").map(x => allowed.indexOf(x) === -1 ? "-" : x).join("");
  
  let url = original;
  let count = 2;
  while (urls.indexOf(url) !== -1) {
    url = original + "-" + count++;
  }
  
  urls.push(url);
  return url;
}
simunq.reset = function() {
  urls.length = 0;
};
9 months agoRefactorDiscuss
7 kyu
Digits Average
JavaScript:

function digitsAverage(input) {
  if (typeof(input) === "number") {
    input = input.toString().split("").map(x => parseInt(x));
  }
  
  if (input.length === 1) {
    return input[0];
  }
  
  const avgs = [];
  
  for (let x = 1; x < input.length; x++) {
    avgs.push(Math.ceil((input[x] + input[x - 1]) / 2));
  }
  
  return digitsAverage(avgs);
}
9 months agoRefactorDiscuss
7 kyu
Drinking Game
Python:

def game(a, b):
    if a < 1 or b < 1:
        return "Non-drinkers can't play"
    
    drinks = 1
    mike = 0
    joe = 0
    while True:
        if drinks % 2 == 0:
            joe += drinks
        else:
            mike += drinks
            
        if mike > a:
            return "Joe"
        if joe > b:
            return "Mike"
            
        drinks += 1
    
9 months agoRefactorDiscuss
7 kyu
Split By Value
JavaScript:

function splitByValue(k, elements) {
  const lt = [];
  const gt = [];
  
  for (let x = 0; x < elements.length; x++) {
    if (elements[x] < k) {
      lt.push(elements[x]);
    }
    else {
      gt.push(elements[x]);
    }
  }
  
  return lt.concat(gt);
}
10 months agoRefactorDiscuss
7 kyu
Remove B M W
JavaScript:

function removeBMW(str) {
  if (typeof(str) !== "string") {
    throw new Error("This program only works for text.");
  }
  
  ["b", "m", "w", "B", "M", "W"].forEach(x => str = str.split(x).join(""));
  
  return str;
}
10 months agoRefactorDiscuss
7 kyu
Santa's Naughty List
Python:

def find_children(santas_list, children):
    lst = []
    for child in children:
        if child in santas_list and not child in lst:
            lst.append(child)
    return sorted(lst)
10 months agoRefactorDiscuss
8 kyu
Multiple of index
C#:

using System.Linq;
using System.Collections.Generic;

public static class Kata
{
  public static List<int> MultipleOfIndex(List<int> xs)
  {
    int index = 1;
    return xs.Skip(1).Where(x => x % index++ == 0).ToList();
  }
}
10 months agoRefactorDiscuss
7 kyu
Strings: starts with
C:

int startsWith(const char *string, const char *prefix) {
  int slen = strlen(string);
  int plen = strlen(prefix);

	if (slen < plen) {
    return 0;
  }
  
  for (int x = 0; x < plen; x++) {
    if (string[x] != prefix[x]) {
      return 0;
    }
  }
  
  return 1;
}
10 months agoRefactorDiscuss
7 kyu
Flatten and sort an array
JavaScript:

"use strict";

function flattenAndSort(array) {
  // Good luck, brave code warrior!
  return [].concat(...array).sort((x, y) => x - y);
}
10 months agoRefactorDiscuss
7 kyu
Homogenous arrays
JavaScript:

function filterHomogenous(arrays) {
  // Alea iacta est, code legionary!
  return arrays.filter(x => x.length > 0 && x.length === x.filter(y => typeof(y) === typeof(x[0])).length);
}
10 months agoRefactorDiscuss
7 kyu
KISS - Keep It Simple Stupid
JavaScript:

function isKiss(words) {
  words = words.split(" ");
  return words.reduce((m, x) => x.length > m ? x.length : m, -1) > words.length
    ? "Keep It Simple Stupid"
    : "Good work Joe!";
}
10 months agoRefactorDiscuss
8 kyu
Array plus array
Python:

def array_plus_array(arr1,arr2):
    return sum(arr1) + sum(arr2)
10 months agoRefactorDiscuss
7 kyu
Is it a vowel on this position?
Python:

def check_vowel(string, position):
    return string.lower()[position] in "aeiou" if position > -1 and position < len(string) else False
10 months agoRefactorDiscuss
7 kyu
Check digit
Python:

def check_digit(number, index1, index2, digit):
    if index1 > index2:
        index1, index2 = index2, index1
    return str(digit) in str(number)[index1:index2 + 1]
10 months agoRefactorDiscuss
7 kyu
Unusual Lex Order
Python:

def unusual_lex_order(arr):
    return sorted(arr, key=lambda x: x[::-1])
10 months agoRefactorDiscuss
8 kyu
Century From Year
C++:

int centuryFromYear(int year) 
{
  return ((year - 1) / 100) + 1;
}
10 months agoRefactorDiscuss
7 kyu
Sorting Arrays ... wait, what?!
JavaScript:

const heapify = (array, n, i) => {
  let largest = i;
  const left = 2 * i + 1;
  const right = 2 * i + 2;

  if (left < n && array[i] < array[left]) {
    largest = left;
  }

  if (right < n && array[largest] < array[right]) {
    largest = right;
  }

  if (largest !== i) {
    const temp = array[i];
    array[i] = array[largest];
    array[largest] = temp;
    
    heapify(array, n, largest);
  }
};

Array.prototype.sort = function() {
  for (let x = this.length; x > -1; x--) {
    heapify(this, this.length, x);
  }
  
  for (let x = this.length - 1; x > 0; x--) {
    const temp = this[x];
    this[x] = this[0];
    this[0] = temp;
    
    heapify(this, x, 0);
  }
  
  return this;
}
10 months agoRefactorDiscuss
8 kyu
Fix your code before the garden dies!
Python:

def rain_amount(mm):
    if mm < 40:
        return "You need to give your plant " + str(40 - mm) + "mm of water"
    return "Your plant has had more than enough water for today!"
10 months agoRefactorDiscuss
8 kyu
What's wrong with these identifiers?
JavaScript:

var Person = {
  firstName: "John",
  secondName: "Doe",
  emailAddress: "john.doe@email.com",
  maleFemale: "M"
};
10 months agoRefactorDiscuss
8 kyu
A bugs trilogy: Episode 1 - "Let Math.Random(); decide your future"
JavaScript:

function yourFutureCareer() {
	var career = Math.random();
		if (career <= 0.32)
			return 'FrontEnd Developer';
		else if (career <= 0.65) 
			return 'BackEnd Developer';
		else
			return 'Full-Stack Developer';
}
10 months agoRefactorDiscuss
7 kyu
Something 's fishy...
JavaScript:

function isTotal3() {
	var simpleVariable = 1;
	
	for (var index = 0; index < 1; index++)
		var variableInLoop = 1;
		
	(function defineAVariable() {
		 variableInFunction = 1;
	})();
	
	var result = simpleVariable + variableInLoop + variableInFunction;
	
	return result;
}
10 months agoRefactorDiscuss
8 kyu
How do I compare numbers?
Java:

public class HowDoICompare {
    public static String whatIs(Integer x) {
        for (Object[] p : specialNumbers) {
            if (p[0].equals(x))
                return (String)p[1];
        }
        return "nothing";
    }
    
    static final Object[][] specialNumbers = {
        {42, "everything"},
        {42 * 42, "everything squared"},
    };
}
10 months agoRefactorDiscuss
8 kyu
Invalid Login - Bug Fixing #11
JavaScript:

function validate(username, password){
  var database = new Database();
  if (password.indexOf("||") + password.indexOf("//") !== -2) {
    return 'Wrong username or password!';
  }
  return database.login(username, password);
}
10 months agoRefactorDiscuss
function validate(username, password){
  var database = new Database();
  if (password.indexOf("||") + password.indexOf("||") !== -2) {
    return 'Wrong username or password!';
  }
  return database.login(username, password);
}
10 months agoRefactorDiscuss
7 kyu
Class conundrum - Bug Fixing #7
Python:

class List:
    def __init__(self,type):
        self.type=type
        self.items=[]
        self.count=0
    
    def add(self,item):
        if type(item)!=self.type:
            item_type="str" if self.type==str else "int" if self.type==int else "float"
            return "This item is not of type: %s" %(item_type)
        self.items+=[item]
        self.count+=1
        return self
10 months agoRefactorDiscuss
7 kyu
Failed Sort - Bug Fixing #4
Python:

def sort_array(value):
    return "".join(sorted(value,key=lambda a: int(a)))
10 months agoRefactorDiscuss
8 kyu
Incorrect division method
Ruby:

def divide_numbers x, y
  x.to_f / y.to_f
end
10 months agoRefactorDiscuss
7 kyu
Deletion in an array
JavaScript:

function deleteValues(array, pred) {
  let _array = array.filter(x => !pred(x));
  
  // hack
  array.length = 0;
  for (var i = 0; i < _array.length; i++) {
    array.push(_array[i]);
  }
  return array;
}
10 months agoRefactorDiscuss
7 kyu
Anonymous Returns.
JavaScript:

const name = 'The Window';

var alpha = {
    name : 'My Alpha',
    getNameFunc : function() {
        return function() {
            return alpha.name;
        };
    }
};
10 months agoRefactorDiscuss
7 kyu
Dangerous Dates
JavaScript:

var nextFiveDays = function(date) {
    const dates = [];
    
    for (var i = 0; i < 5; i++) {
      date.setDate(date.getDate() + 1);
      
      const day = date.getDate(),
        month = date.getMonth() + 1,
        year = date.getYear() + 1900;
        
      dates.push(month + '/' + day + '/' + year);
    }
    
    return dates.join(', ');
}
10 months agoRefactorDiscuss
8 kyu
Hello Happy Codevarrior!
JavaScript:

function Warrior(n){
  let name = n;  
  this.name = function(n){
    if( n ) name=n;
    return name;
  }
}
  
Warrior.prototype.toString = function(){
    return "Hi! my name's "+this.name();
}
10 months agoRefactorDiscuss
7 kyu
Parse integers in array
JavaScript:

/**
 * Function converts array of string to array of integers.
 * @param  {Array} of numbers in form of string
 * @return {Array} of integer numbers 
 */
var parseNumbers = function(intStrs) {
  return intStrs.map(x => parseInt(x));
}
10 months agoRefactorDiscuss
7 kyu
Honey to the Bee
JavaScript:

function Bee(capacity, hive) {
  this.capacity = capacity;
  this.hive = hive;
}

function Hive() {
  this.pollen = 100;
}

//TODO: The amount of honey in the hive is not increasing.
Hive.prototype.addPollen = function(pollen) {
  this.pollen += pollen;
}

Hive.prototype.getPollen = function() {
  return this.pollen;
}

Bee.prototype.unloadPollen = function() {
  this.hive.addPollen(this.capacity);
}
10 months agoRefactorDiscuss
8 kyu
Unexpected parsing
Python:

def get_status(is_busy):
    status = "busy" if is_busy else "available"
    return { "status": status }
10 months agoRefactorDiscuss
7 kyu
Greed
JavaScript:

var reg = /"[^"]+"/g;
function getQuotes(string) {
  return string.match(reg);
}
10 months agoRefactorDiscuss
7 kyu
Hoisting
JavaScript:

var sorted = 0;

function sort(array) {
  // Mark function as called through the global variable
  sorted = 1;
  
  // Transform the input data
  for(var i = 0; i < array.length; i++) {
    array[i] = 3 * array[i] + 2;
  }
  
  // Remove middle value
  var n = array.length, mid = Math.floor(n/2);
  array = array.slice(0, mid).concat(array.slice(mid+1));
  
  // Sort the array
  var _sorted = false;
  for(var i = array.length - 1; i >= 0 && ! _sorted; i--) {
    _sorted = true;
    for(var j = 0; j < i; j++) {
      if ( array[j] > array[j+1] ) {
        swap(array, j, j+1);
        _sorted = false;
      }
    }
  }
  
  return array;
}
10 months agoRefactorDiscuss
7 kyu
We need these data immediately!
JavaScript:

var time = Date.now()
var data = (function returnSomeData(time)
{
  return { 
    name: '__B00013',
    timeStamp: time || 'unknown',    
    type: 'raw',
    var1: 0x041451,
    var2: 0x00,
    var3: 0x00040
  }
})()
10 months agoRefactorDiscuss
8 kyu
Semi-Optional
JavaScript:

function wrap(value) {
  return {
    value: value 
  };
}
10 months agoRefactorDiscuss
7 kyu
Fix the base conversion function!
Python:

#fix the function below!

def convert_num(number, base):
    try:
        if base == "hex":
            return "0x{0:x}".format(number)
        if base == "bin":
            return "0b{0:b}".format(number)
    except:
        return "Invalid number input"
    return "Invalid base input"
10 months agoRefactorDiscuss
7 kyu
More than Zero?
Python:

def corrections(x):
    if x > 0:
        return str(x) + " is more than zero."
    else:
        return str(x) + " is equal to or less than zero."
10 months agoRefactorDiscuss
7 kyu
Oh dear God! Is it bugged?
JavaScript:

function isItBugged(code) {
 return /[0-3][0-9]\-[0-1][0-9]\-[0-9][0-9][0-9][0-9]\s[0-2][0-9]:[0-6][0-9]/.test(code);
}
10 months agoRefactorDiscuss
7 kyu
Noob Debug 1: Fix the string sum!
Python:

def add(s1, s2):
    return sum(list(map(lambda x: ord(x), s1 + s2)))
10 months agoRefactorDiscuss
7 kyu
FIXME: Run, Runner!
Java:

public class Dinglemouse {

  private static class Logan5 implements Runnable {
    public void run() {
      System.out.println("Hello from Logan5");
      ThreadUtil.method1();
    }
  }
  
  private static class Jessica6 implements Runnable {
    public void run() {
      System.out.println("Hello from Jessica6");
      ThreadUtil.method2();
    }
  }

 public static void runRunners() {
    new Thread(new Logan5()).start();
    new Thread(new Jessica6()).start();
  }
  
}
10 months agoRefactorDiscuss
8 kyu
Fix the loop!
Python:

def list_animals(animals):
    list = ''
    for i in range(len(animals)):
        list += str(i + 1) + '. ' + animals[i] + '\n'
    return list
10 months agoRefactorDiscuss
7 kyu
Bug Squish!
Python:

def debug(s):
    return s.replace("bugs", "BUGS").replace("bug", "").replace("BUGS", "bugs")
10 months agoRefactorDiscuss
7 kyu
Concatenated Sum
C#:

using System;
using System.Linq;

public class Kata
{
  /// <summary>
  /// Returns a Boolean representing if a number with its digits concatenated an arbitrary number of times and summed is the same as the original number.</summary>
  /// <param name="number">int to be tested.</param>
  /// <param name="n">int which represents the number of times to concatenate each digit</param>
  public static bool CheckConcatenatedSum(int number, int n)
  {
    string op = number < 0 ? "-" : "";
    string numberText = Math.Abs(number).ToString();
    return numberText.Select(x => long.Parse(op + new string(x, n))).Sum() == number;
  }
}
10 months agoRefactorDiscuss
7 kyu
FIXME: Hours to Seconds
Java:

public class Dinglemouse {

  // Return the number of seconds in a given number of hours
  public static long hoursToSeconds(final int hours) {
    final long ret = (long)hours * 60 * 60;
    return ret;
  }

}
10 months agoRefactorDiscuss
7 kyu
Debug the functions EASY
Python:

def multi(l_st):
    output = 1
    for x in l_st:
        output *= x
    return output
    
def add(l_st):
    return sum(l_st)
    
def reverse(string):
    return string[::-1]
10 months agoRefactorDiscuss
8 kyu
Ghost code?!
Java:

public class GhostCode{
  public static String helloName(final String name) {
    if(name == null || name.equals(""))
      return "Hello world!";
    else
      return "Hello my name is " + name;
  }
}
10 months agoRefactorDiscuss
7 kyu
Debug Basic Calculator
Ruby:

def calculate(a, o, b)
 if(o == "+") 
   return a + b
 end
 if(o == "-")
   return a - b
 end
 if(o == "/" and b != 0) 
   return a / b
 end
 if(o == "*") 
   return a * b
 end
 
 return nil 
end
10 months agoRefactorDiscuss
6 kyu
Closures and Scopes
JavaScript:

function createFunctions(n) {
  var callbacks = [];

  for (let i=0; i<n; i++) {
    callbacks.push(function() {
      return i;
    });
  }
  
  return callbacks;
}
10 months agoRefactorDiscuss
8 kyu
Max Headroom and JavaScript style
JavaScript:

function getMax1()
{
  var max = 
  {
   name: 'Max Headroom'
  }
  return max;
}

function getMax2()
{
  return getMax1();
}
10 months agoRefactorDiscuss
8 kyu
Shifty Closures
JavaScript:

const greet_abe = () => {
  return "Hello, Abe!";
};

const greet_ben = () => {
  return "Hello, Ben!";
};
10 months agoRefactorDiscuss
8 kyu
Grasshopper - Debug
Python:

def weather_info(temp):
    c = convertToCelsius(temp)
    if c < 0:
        return str(c) + " is freezing temperature"
    else:
        return str(c) + " is above freezing temperature"
    
def convertToCelsius(temperature):
  return (temperature - 32) * (5.0 / 9.0)
10 months agoRefactorDiscuss
7 kyu
Person Class Bug
Ruby:

class Person
  def initialize(firstName, lastName, age)
    @firstName = firstName
    @lastName = lastName
    @age = age
  end
  
  def full_name
    "#{@firstName} #{@lastName}"
  end
  
  def age
    @age
  end
end
10 months agoRefactorDiscuss
8 kyu
Fix the Bugs (Syntax) - My First Kata
PHP:

function my_first_kata($a, $b) {
  if ((!is_int($a) and !is_float($a)) or (!is_int($b) and !is_float($b))) {
    return false;
  } else {
    return $a % $b + $b % $a;
  }
}
10 months agoRefactorDiscuss
8 kyu
Return to Sanity
JavaScript:

function mystery() {
  var results = {sanity: 'Hello'};
  return results;
}
10 months agoRefactorDiscuss
8 kyu
Push a hash/an object into array
Java:

import java.util.List;
import java.util.ArrayList;

public class PushAnObjectIntoArray {  
  public static List<String> push(){
    List<String> items = new ArrayList<>();
    items.add("an object");
    return items;
  }
}
10 months agoRefactorDiscuss
8 kyu
Sum Arrays
C:

#include <stddef.h>

int sum_array(const int *values, size_t count)
{
  int output = 0;
  for (int x = 0; x < count; x++)
  {
    output += values[x];
  }
  return output;
}
10 months agoRefactorDiscuss
8 kyu
Squash the bugs
Java:

import java.util.*;

public class Kata {

  public static int findLongest(final String str) {
    String[] spl = str.split(" ");
    int longest = 0;
    for (int i = 0; i < spl.length; i++) {
      if (spl[i].length() > longest) {
        longest = spl[i].length();
      }
    }
    return longest;
  }
}
10 months agoRefactorDiscuss
7 kyu
Credit Card Mask
C#:

public static class Kata
{
  // return masked string
  public static string Maskify(string cc)
  {
    return cc.Length > 4
      ? new string('#', cc.Length - 4) + cc.Substring(cc.Length - 4)
      : cc;
  }
}
10 months agoRefactorDiscuss
8 kyu
Well of Ideas - Easy Version
C#:

using System.Linq;

public class Kata
{
  public static string Well(string[] x)
  {
    int count = x.Count(c => c == "good");
    
    if (count > 2)
    {
      return "I smell a series!";
    }
    else if (count > 0)
    {
      return "Publish!";
    }
    
    return "Fail!";
  }
}
10 months agoRefactorDiscuss
8 kyu
Remove duplicates from list
C#:

using System.Linq;

namespace Solution
{
  public static class Program
  {
    public static int[] distinct(int[] a)
    {
      return a.Distinct().ToArray();
    }
  }
}
10 months agoRefactorDiscuss
8 kyu
Logical calculator
C#:

public class Kata
{
  public static bool LogicalCalc(bool[] array, string op)
  {
    bool output = false;
  
    if (op == "AND")
    {
      output = array[0];
      for (int x = 1; x < array.Length; x++)
      {
        output = output && array[x];
      }
    }
    else if (op == "OR")
    {
      output = array[0];
      for (int x = 1; x < array.Length; x++)
      {
        output = output || array[x];
      }
    }
    else if (op == "XOR")
    {
      output = array[0];
      for (int x = 1; x < array.Length; x++)
      {
        output = output ^ array[x];
      }
    }
    
    return output;
  }
}
10 months agoRefactorDiscuss
7 kyu
Pictures #1 - Rebuilding the Tower of Babel
C#:

using System.Collections.Generic;
using System.Linq;
using System.Text;

public static class Kata
{
  public static string Babel(int height)
  {
    var tower = new List<char>();
    int width = 1;

    for (int x = 0; x < height; x++)
    {
        for (int y = 0; y < 3; y++)
        {
            tower.AddRange(Enumerable.Repeat(' ', height - x - 1));
            tower.AddRange(Enumerable.Repeat('o', width));
            tower.Add('\n');
        }
        width += 2;
    }

    var builder = new StringBuilder();

    for (int x = 0; x < tower.Count - 1; x++)
    {
        builder.Append(tower[x]);
    }

    return builder.ToString();
  }
}
10 months agoRefactorDiscuss
6 kyu
Esolang Interpreters #1 - Introduction to Esolangs and My First Interpreter (MiniStringFuck)
C#:

public class Kata
{
  public static string MyFirstInterpreter(string code)
  {
    int cell = 0;
    string output = "";
    
    foreach (char command in code)
    {
      if (command == '+')
      {
        cell = cell == 255 ? 0 : cell + 1;
      }
      else if (command == '.')
      {
        output += ((char)cell).ToString();
      }
    }
    
    return output;
  }
}
10 months agoRefactorDiscuss
5 kyu
Esolang Interpreters #2 - Custom Smallfuck Interpreter
C#:

using System;
using System.Linq;

public class Smallfuck
{
  public static string Interpreter(string code, string tape)
  {
    int index = 0;
    var tapeArray = tape.Select(x => int.Parse(x.ToString())).ToArray();
    
    for (int x = 0; x < code.Length; x++)
    {
      if (index >= tapeArray.Length || index < 0)
      {
        break;
      }
      
      char command = code[x];
      
      if (command == '>')
      {
        index++;
      }
      else if (command == '<')
      {
        index--;
      }
      else if (command == '*')
      {
        tapeArray[index] = Math.Abs(tapeArray[index] - 1);
      }
      else if (command == '[' && tapeArray[index] == 0)
      {
        int count = 1;
        while (count > 0)
        {
          x++;
          if (code[x] == '[')
          {
            count++;
          }
          else if (code[x] == ']')
          {
            count--;
          }
        }
      }
      else if (command == ']' && tapeArray[index] != 0)
      {
        int count = 1;
        while (count > 0)
        {
          x--;
          if (code[x] == '[')
          {
            count--;
          }
          else if (code[x] == ']')
          {
            count++;
          }
        }
      }
    }
    
    return string.Join("", tapeArray);
  }
}
10 months agoRefactorDiscuss
6 kyu
RoboScript #1 - Implement Syntax Highlighting
C#:

using System.Text.RegularExpressions;

public class Syntax
{
  public static string Highlight(string code)
  {
    code = Regex.Replace(code, @"(F+)", "<span style=\"color: pink\">$&</span>");
    code = Regex.Replace(code, @"(L+)", "<span style=\"color: red\">$&</span>");
    code = Regex.Replace(code, @"(R+)", "<span style=\"color: green\">$&</span>");
    code = Regex.Replace(code, @"([0-9]+)", "<span style=\"color: orange\">$&</span>");
    
    return code;
  }
}
10 months agoRefactorDiscuss
8 kyu
Convert to Binary
C#:

using System;

public static class Kata
{
  public static int ToBinary(int n)
  {
    return int.Parse(Convert.ToString(n, 2));
  }
}
10 months agoRefactorDiscuss
8 kyu
Man in the west
Python:

def check_the_bucket(bucket):
    return "gold" in bucket
10 months agoRefactorDiscuss
7 kyu
You Can't Code Under Pressure #2
JavaScript:

function Counter() {
  let counter = 0;
  //quickly, now!
  this.check = () => counter;
  this.increment = () => counter++;

};
10 months agoRefactorDiscuss
7 kyu
Summy
JavaScript:

function summy(stringOfInts) {
    return stringOfInts.split(" ").map(x => parseInt(x)).reduce((t, n) => t + n);
}
10 months agoRefactorDiscuss
7 kyu
This Kata is Broken
JavaScript:

const vals = [71, 108, 97, 68, 79, 83];
let index = -1;

function solution() {
  index = index === vals.length - 1 ? 0 : index + 1;
  return vals[index];
}
10 months agoRefactorDiscuss
7 kyu
Emoji-ergency!
JavaScript:

const insert = (string) => {
  const emoji = {
    "[[f9.smile]]"        :     ":)",
    "[[f9.grin]]"         :     ":D",
    "[[f9.smiley]]"       :     "=)",
    "[[f9.sohappy]]"      :     "XD",
    "[[f9.tongue]]"       :     ":P",
    "[[f9.wink]]"         :     ";)",
    "[[f9.sad]]"          :     ":(",
    "[[f9.slant]]"        :     ":/",
    "[[f9.surprised]]"    :     ":O",
    "[[f9.catface]]"      :     ":3",
    "[[f9.cool]]"         :     "B)",
    "[[f9.unimpressed]]"  :     ":|",
    "[[f9.angry]]"        :     ">:|",
    "[[f9.kissing]]"      :     "^.^",
    "[[f9.dazed]]"        :     "*_*",
    "[[f9.dance1]]"       :     "<(^.^<)",
    "[[f9.dance2]]"       :     "(>^.^)>",
    "[[f9.heart]]"        :     "<3"
  }
  
  for (let key in emoji) {
    string = string.split(key).join(emoji[key]);
  }
  
  return string;
}
10 months agoRefactorDiscuss
6 kyu
How many feelings?
JavaScript:

function countFeelings(string, array) {
  const count = array.filter(x => x.split("").filter(y => string.indexOf(y) !== -1).length === x.length).length;
  return count === 1
    ? count + " feeling."
    : count + " feelings.";
}
10 months agoRefactorDiscuss
7 kyu
Card game: twenty-one
JavaScript:

function twentyOne(card1, card2, card3) {
  let sum = 0;
  for (let x = 0; x < arguments.length; x++) {
    const value = arguments[x].slice(0, arguments[x].length - 1);
    
    if (value === "J") {
      sum += 2;
    }
    else if (value === "Q") {
      sum += 3;
    }
    else if (value === "K") {
      sum += 4;
    }
    else if (value === "A") {
      sum += 11;
    }
    else {
      sum += parseInt(value);
    }
  }
  
  return sum === 21 
    ? "twenty-one" 
    : sum > 21 
      ? "more" 
      : "less";
}
10 months agoRefactorDiscuss
7 kyu
Currying functions: multiply all elements in an array
C#:

using System;
using System.Linq;

public static class Kata
{
  public static Func<int, int[]> MultiplyAll(int[] array)
  {
    return (i) => array.Select(x => x * i).ToArray();
  }
}
10 months agoRefactorDiscuss
8 kyu
Online RPG: player to qualifying stage?
C#:

public class Kata
{
  public static object PlayerRankUp(int points)
  {
    // please don't code like this
    return points > 99 
      ? (object)"Well done! You have advanced to the qualifying stage. Win 2 out of your next 3 games to rank up."
      : (object)false;
  }
}
10 months agoRefactorDiscuss
7 kyu
Regex Failure - Bug Fixing #2
C#:

using System;
using System.Text.RegularExpressions;

public class Kata
{
  public static string filterWords(string phrase)
  {
      string pattern = @"bad|mean|ugly|horrible|hideous\b";
      string replacement = "awesome";
      return Regex.Replace(phrase, pattern, replacement, RegexOptions.IgnoreCase);
  }
}
10 months agoRefactorDiscuss
7 kyu
Failed Filter - Bug Fixing #3
C#:

using System.Linq;

public class Kata
{
  public static string FilterNumbers(string str)
  {
      return string.Join("", str.Where(c => !char.IsDigit(c)));
  }
}
10 months agoRefactorDiscuss
8 kyu
Switch/Case - Bug Fixing #6
C#:

using System;

public class Kata
{
  public static double EvalObject(double value1, double value2, char operation)
  {
    switch(operation)
    {
      case '+': return value1 + value2;
      case '-': return value1 - value2;
      case '/': return value1 / value2;
      case '*': return value1 * value2;
      case '%': return value1 % value2;
      case '^': return Math.Pow(value1, value2);
    }
    
    return 0;
  }
}
10 months agoRefactorDiscuss
8 kyu
A + B
C#:

public class FirstClass 
{
    public static byte sum(byte a, byte b) 
    {
        return (byte)(a + b);
    }
}
10 months agoRefactorDiscuss
8 kyu
101 Dalmatians - squash the bugs, not the dogs!
C#:

public static class Kata
{
    public static string HowManyDalmatians(int number)
    {
        var dogs = new string[]
        {
            "Hardly any",
            "More than a handful!",
            "Woah that's a lot of dogs!",
            "101 DALMATIONS!!!"
        };
        
        if (number <= 10) 
          return dogs[0];
        else if (number <= 50)
          return dogs[1];
        else if (number == 101)
          return dogs[3];
          
        return dogs[2];
    }
}
10 months agoRefactorDiscuss
8 kyu
String Templates - Bug Fixing #5
C#:

public static class Kata 
{
    public static string buildString(string[] args)
    {
      return $"I like {string.Join(", ", args)}!";
    }
}
10 months agoRefactorDiscuss
8 kyu
Swap Values
C#:

public class Swapper
{
    public object[] Arguments { get; private set; }
    
    public Swapper(object[] args)
    {
        Arguments = args;
    }
    
    public void SwapValues()
    {
        object temp = Arguments[0];
        Arguments[0] = Arguments[1];
        Arguments[1] = temp;
    }
}
10 months agoRefactorDiscuss
7 kyu
Ninja vs Samurai: Strike
C#:

using System;

public class Warrior
{
    private string name;

    public Warrior(string name)
    {
        this.name = name;
    }

    public int Health { get; set; } = 100;

    public void Strike(Warrior enemy, int swings)
    {
        enemy.Health = Math.Max(0, enemy.Health - (swings * 10));
    }
}
10 months agoRefactorDiscuss
8 kyu
Filtering even numbers (Bug Fixes)
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public class Kata
{
    public static List<int> FilterOddNumber(List<int> listOfNumbers)
    {
        return listOfNumbers.Where(x => x % 2 == 1).ToList();
    }
}
10 months agoRefactorDiscuss
8 kyu
Unfinished Loop - Bug Fixing #1
C#:

using System;
using System.Collections.Generic;

public class Kata
{
  public static List<int> CreateList(int number)
  {
    List<int> list = new List<int>();
    
    for(int counter = 1; counter <= number; counter++)
    {
      list.Add(counter);
    }
    
    return list;
  }
}
10 months agoRefactorDiscuss
8 kyu
FIXME: Replace all dots
C#:

public class Kata
{
  public static string ReplaceDots(string str)
  {
    return str.Replace('.', '-');
  }
}
10 months agoRefactorDiscuss
8 kyu
Multiply the number
C#:

using System;

public class Kata
{
  public static int Multiply(int number)
  {
    return number * (int)Math.Pow(5, number.ToString().Replace("-", "").Length);
  }
}
10 months agoRefactorDiscuss
8 kyu
Get Planet Name By ID
C#:

public class Kata
{
  public static string GetPlanetName(int id)
  {
    string name = null;
    switch(id)
    {
      case 1:
        name = "Mercury";
        break;
      case 2:
        name = "Venus";
        break;
      case 3:
        name = "Earth";
        break;
      case 4:
        name = "Mars";
        break;
      case 5:
        name = "Jupiter";
        break;
      case 6:
        name = "Saturn";
        break;
      case 7:
        name = "Uranus";
        break;
      case 8:
        name = "Neptune";
        break;
    }
    
    return name;
  }
}
10 months agoRefactorDiscuss
8 kyu
Number toString
C#:

public class Kata
{
  public static string A = (123).ToString();
}
10 months agoRefactorDiscuss
7 kyu
Multiply characters
C#:

public class Kata
{
  public static string Spam(int n)
  {
    const string SpamValue = "hue";
    string spam = "";
    
    for (int x = 0; x < n; x++)
    {
      spam += SpamValue;
    }
    
    return spam;
  }
}
10 months agoRefactorDiscuss
Python:

#fix this code!
def spam(number):
    return "hue" * number
10 months agoRefactorDiscuss
7 kyu
Fac Recursion (Pest control - find the bugs and fix them)
C#:

namespace Recursion {
  using System;
  public class Fac
  {
    public int FacCalculation(int startValue)
    {
      return FacRecursion(startValue);
    }
    
    protected int FacRecursion(int value)
    {
      if (value < 0)
      {
        return 0;
      }
      
      if (value == 1 || value == 0)
      {
        return 1;
      }
      
      return FacRecursion(value - 1) * value;
    }
  }
}
10 months agoRefactorDiscuss
7 kyu
getNames()
C#:

using System.Linq;

public class Kata
{
  public static string[] GetNames(Person[] data)
  {
    return data.Select(x => x.Name).ToArray();
  }
}
10 months agoRefactorDiscuss
6 kyu
Round and Round
C#:

namespace Kata {
  using System;
  public static class RoundAndRound
  {
    public static decimal RoundBy2DecimalPlaces(this decimal number)
    {
        return Math.Round(number, 2, MidpointRounding.AwayFromZero);
    }
  }
}
10 months agoRefactorDiscuss
8 kyu
Broken Counter
C#:

public class Counter
{
  int _value;
  public int Value
  {
    get
    {
      return _value;
    }
    private set
    {
      _value = value;
    }
  }
  
  public Counter()
  {
    Value = 0;
  }
  
  public void Increase()
  {
    ++Value;
  }
  
  public void Reset()
  {
    Value = 0;
  }
}
10 months agoRefactorDiscuss
5 kyu
Not very secure
C#:

using System.Linq;

public class Kata
{
  public static bool Alphanumeric(string str)
  {
    return str.Length != 0 && 
      str.Count(x => char.IsDigit(x)) + str.Count(x => char.IsLetter(x)) == str.Length;
  }
}
10 months agoRefactorDiscuss
8 kyu
Basic variable assignment
C#:

public class Kata
{
  public static string A = "code";
  public static string B = "wa.rs";
  public static string Name = A + B;
}
10 months agoRefactorDiscuss
8 kyu
Is this my tail?
C#:

public class Kata
{
  public static bool CorrectTail(string body, string tail)
  {
    return body.Substring(body.Length - tail.Length) == tail;
  }
}
10 months agoRefactorDiscuss
7 kyu
"Very Even" Numbers.
C#:

using System.Linq;

public class Kata
{
  public static bool IsVeryEvenNumber(int number)
  {
      if (number % 2 == 1)
      {
          return false;
      }
      
      if (number.ToString().Length == 1)
      {
          return true;
      }
  
      return IsVeryEvenNumber(number.ToString().Select(x => int.Parse(x.ToString())).Sum());
  }
}
10 months agoRefactorDiscuss
7 kyu
Maximum Length Difference
C#:

using System;
using System.Linq;

public class MaxDiffLength 
{
    
    public static int Mxdiflg(string[] a1, string[] a2) 
    {
        return a1.Any() && a2.Any()
          ? Math.Max(Math.Abs(a1.Max(x => x.Length) - a2.Min(x => x.Length)),
              Math.Abs(a1.Min(x => x.Length) - a2.Max(x => x.Length)))
          : -1;
    }
}
10 months agoRefactorDiscuss
8 kyu
MakeUpperCase
C#:

public class Kata
{
  public static string MakeUpperCase(string str)
  {
    return str.ToUpper(); // ??
  }
}
10 months agoRefactorDiscuss
7 kyu
Reversing Fun
Python:

def reverse_fun(n):
    n = n[::-1]
    for x in range(len(n)):
        n = n[:x + 1] + (n[x + 1:])[::-1]
    return n
10 months agoRefactorDiscuss
7 kyu
All unique
C#:

using System.Linq;

namespace Code
{
  public class Unique
  {
    public static bool HasUniqueChars(string str)
    {
        return str.Distinct().Count() == str.Length;
    }
  }
}
10 months agoRefactorDiscuss
6 kyu
Collatz
JavaScript:

function collatz(n) {
  let seq = n.toString();
  while (n !== 1) {
    if (n % 2 === 0) {
      n = n / 2;
    }
    else {
      n = 3 * n + 1;
    }
    
    seq += "->" + n;
  }
  
  return seq;
}
10 months agoRefactorDiscuss
7 kyu
Convert a linked list to a string
C#:

public class Kata
{
  public static string Stringify(Node list)
  {
    string trace = "";
  
    while (list != null)
    {
      trace += list.Data + " -> ";
      list = list.Next;
    }
    
    return trace + "null";
  }
}
10 months agoRefactorDiscuss
6 kyu
IP Validation
JavaScript:

function isValidIP(str) {
  console.log(str + "!");
  const octets = str.split(".");
  
  if (octets.length != 4) {
    return false;
  }
  
  for (let x = 0; x < octets.length; x++) {
    const octet = octets[x];
    if (isNaN(octet) || 
      parseInt(octet) > 255 || 
      (octet[0] === "0" && octet.length > 1) || 
      octet.length != octet.trim().length)
    {
      return false;
    }
  }
  
  console.log(true);
  return true;
}
10 months agoRefactorDiscuss
6 kyu
Roleplaying Combat Simulator
C#:

using System;
using System.Linq;

namespace Kata
{
  public class CombatSimulator
  {
    public enum HitResult
    {
      FightOn,
      PcDead,
      EnemyDead
    }
    
    int pcHitPoints;
    int enemyHitPoints;
    
    int pcDefense;
    int enemyDefense;

    public CombatSimulator(int pcHitPoints, int pcDefense, int enemyHitPoints, int enemyDefense)
    {
      this.pcHitPoints = pcHitPoints;
      this.enemyHitPoints = enemyHitPoints;
      this.pcDefense = pcDefense;
      this.enemyDefense = enemyDefense;
    }

    public HitResult PcAttack(int attackRoll, int[] modifiers, int damage)
    {
      int mods = modifiers != null ? modifiers.Sum() : 0;
    
      if (attackRoll + mods > enemyDefense)
      {
        enemyHitPoints -= damage;
      }
      
      if (enemyHitPoints <= 0)
      {
        return HitResult.EnemyDead;
      }
      
      return HitResult.FightOn;
    }

    public HitResult EnemyAttack(int attackRoll, int[] modifiers, int damage)
    {
      int mods = modifiers != null ? modifiers.Sum() : 0;
    
      if (attackRoll + mods > pcDefense)
      {
        pcHitPoints -= damage;
      }
      
      if (pcHitPoints <= 0)
      {
        return HitResult.PcDead;
      }
      
      return HitResult.FightOn;
    }
  }
}
10 months agoRefactorDiscuss
6 kyu
String tops
C#:

using System;
using System.Linq;

public static class Kata
{
  public static string Tops(string msg)
  {
    string ret = "";
    int n = 1;
    
    for (int x = 1; x < msg.Length; x += n)
    {
      n += 4;
      ret += msg.Substring(x, 1);
    }
    
    return string.Join("", ret.Reverse());
  }
}
10 months agoRefactorDiscuss
8 kyu
Parse nice int from char problem
C#:

public class Kata
{
  public static int GetAge(string inputString)
  {
    return int.Parse(inputString.Substring(0, 1));
  }
}
10 months agoRefactorDiscuss
7 kyu
Bus mastering - Who is the most prioritary?
C#:

public class Bus
{
	public static string arbitrate(string input, int length)
	{
    int index = input.IndexOf("1");
		return index != -1
      ? input.Substring(0, index + 1) + input.Substring(index + 1).Replace("1", "0")
      : input;
	}
}
10 months agoRefactorDiscuss
7 kyu
Unique string characters
C#:

using System.Linq;

public static class Kata
{
  public static string Solve(string a, string b)
  {
    return string.Join("", a.Where(x => !b.Contains(x)).Concat(b.Where(x => !a.Contains(x))));
  }
}
10 months agoRefactorDiscuss
7 kyu
Multiply the strings in the array
C#:

public static class Kata
{
  public static string ArrMultiply(string[] arr)
  {
    return (int.Parse(arr[0]) * int.Parse(arr[1])).ToString();
  }
}
10 months agoRefactorDiscuss
7 kyu
Square Every Digit
JavaScript:

function squareDigits(num) {
  return parseInt(num.toString().split("").map(x => Math.pow(x, 2)).join(""));
}
11 months agoRefactorDiscuss
5 kyu
Can you get the loop ?
C#:

using System.Collections.Generic;

public class Kata
{
  public static int getLoopSize(LoopDetector.Node startNode)
  {
    var list = new HashSet<LoopDetector.Node>();
    LoopDetector.Node node = startNode;
    LoopDetector.Node loopNode;
    
    while (true)
    {
      node = node.next;
    
      if (list.Contains(node))
      {
        loopNode = node;
        break;
      }
      
      list.Add(node);
    }
    
    int count = 0;
    
    while ((node = node.next) != loopNode)
    {
      count++;
    }
    
    return count + 1;
  }
}
11 months agoRefactorDiscuss
5 kyu
Convert PascalCase string into snake_case
JavaScript:

function toUnderscore(string) {
  string = string.toString();
  return string[0].toLowerCase() + 
    string.substring(1).split("").map(x => 
      x.match(/[A-Z]/) !== null ? "_" + x.toLowerCase() : x).join("")
}
11 months agoRefactorDiscuss
7 kyu
Array of twins
C#:

using System.Linq;

public static class Kata
{
  public static bool Twins(int[] arr)
  {
    return arr.GroupBy(x => x).Count(x => x.Count() == 2) == arr.Length / 2;
  }
}
11 months agoRefactorDiscuss
5 kyu
Where my anagrams at?
JavaScript:

function anagrams(word, words) {
  word = word.split("").sort().join("");
  return words.filter(x => x.split("").sort().join("") === word);
}
11 months agoRefactorDiscuss
7 kyu
Highest and Lowest
JavaScript:

function highAndLow(numbers) {
  numbers = numbers.split(" ").sort((a, b) => a - b);
  return `${numbers[numbers.length - 1]} ${numbers[0]}`;
}
11 months agoRefactorDiscuss
7 kyu
Max-min arrays
JavaScript:

function solve(arr) {
  arr.sort((a, b) => a - b);
  
  const mid = arr.length / 2;
  const min = arr.slice(0, mid);
  const max = arr.slice(mid).reverse();
  
  const result = [];
  
  for (let x = 0; x < max.length; x++) {
    result.push(max[x]);
    if (min[x] != undefined) {
      result.push(min[x]);
    }
  }
  
  return result;
}
11 months agoRefactorDiscuss
7 kyu
String doubles
JavaScript:

function doubles(s) {
  while (s.match(/(\w)\1{1}/g))
  {
    s = s.replace(/(\w)\1{1}/g, "");
  }
  return s;
}
11 months agoRefactorDiscuss
8 kyu
The falling speed of petals
C++:

double SakuraFall(double v) {
  return v > 0 ? 400 / v : 0;
}
11 months agoRefactorDiscuss
6 kyu
Array.diff
C#:

using System.Linq;

public class Kata
{
  public static int[] ArrayDiff(int[] a, int[] b)
  {
    return a.Where(x => !b.Contains(x)).ToArray();
  }
}
11 months agoRefactorDiscuss
7 kyu
Shortest Word
C#:

using System.Linq;

public class Kata
{
  public static int FindShort(string s)
  {
    return s.Split(' ').Min(x => x.Length);
  }
}
11 months agoRefactorDiscuss
6 kyu
Dubstep
JavaScript:

function songDecoder(song) {
  return song.replace(/(?:WUB)+/g, " ").trim();
}
11 months agoRefactorDiscuss
6 kyu
Who likes it?
JavaScript:

function likes(names) {
  if (names.length === 0) {
    return "no one likes this";
  }
  else if (names.length === 1) {
    return `${names[0]} likes this`;
  }
  else if (names.length === 2) {
    return `${names[0]} and ${names[1]} like this`;
  }
  else if (names.length === 3) {
    return `${names[0]}, ${names[1]} and ${names[2]} like this`;
  }
  
  return `${names[0]}, ${names[1]} and ${names.length - 2} others like this`;
}
11 months agoRefactorDiscuss
7 kyu
Mumbling
Python:

def accum(s):
    out = ""
    for x in range(len(s)):
        out += s[x].upper() + (s[x].lower() * x) + "-"
    return out[:-1]
11 months agoRefactorDiscuss
6 kyu
Stop gninnipS My sdroW!
JavaScript:

function spinWords(input) {
  return input
    .split(" ")
    .map(x => x.length > 4 ? x.split("").reverse().join("") : x)
    .join(" ");
}
11 months agoRefactorDiscuss
7 kyu
Complementary DNA
JavaScript:

function DNAStrand(dna) {
  return dna.split("").map(x => {
    if (x === "A") {
      return "T";
    }
    else if (x === "T") {
      return "A";
    }
    else if (x === "C") {
      return "G";
    }
    else if (x === "G") {
      return "C";
    }
  }).join("");
}
11 months agoRefactorDiscuss
7 kyu
Jaden Casing Strings
JavaScript:

String.prototype.toJadenCase = function () {
  return this
    .split(" ")
    .map(x => x.substring(0, 1).toUpperCase() + x.substring(1))
    .join(" ");
};
11 months agoRefactorDiscuss
8 kyu
Thinkful - Number Drills: Pixelart planning
JavaScript:

const isDivisible = (wallLength, pixelSize) => {
  return wallLength % pixelSize === 0;
}
11 months agoRefactorDiscuss
7 kyu
Numbers in strings
C#:

using System.Linq;
using System.Text.RegularExpressions;

public static class Kata
{
  public static int Solve(string s)
  {
    return Regex.Matches(s, @"\d+")
      .OfType<Match>()
      .Select(x => int.Parse(x.Value))
      .Max();
  }
}
11 months agoRefactorDiscuss
5 kyu
1's, 0's and wildcards
C#:

using System.Collections.Generic;
using System.Linq;

public class Kata
{
  public List<string> Possibilities(string input)
  {
    if (!input.Contains("?"))
    {
      return new List<string>(new string[] { input });
    }
    
    string variation1 = replaceFirst(input, "0");
    string variation2 = replaceFirst(input, "1");
    return Possibilities(variation1).Concat(Possibilities(variation2)).ToList();
  }
  
  string replaceFirst(string input, string replaceWith)
  {
    int index = input.IndexOf("?");
    
    return index != -1
      ? input.Remove(index, 1).Insert(index, replaceWith)
      : input;
  }
}
11 months agoRefactorDiscuss
7 kyu
Easy Time Convert
C#:

public static class Kata
{
  public static string TimeConvert(int num)
  {
    return num > 0
      ? (num / 60).ToString().PadLeft(2, '0') + ":" + (num % 60).ToString().PadLeft(2, '0')
      : "00:00";
  }
}
11 months agoRefactorDiscuss
7 kyu
Longest vowel chain
C#:

using System;
using System.Linq;
using System.Text.RegularExpressions;

public static class Kata
{
  public static int Solve(string str)
  {
    if (str == null)
    {
      throw new ArgumentNullException();
    }
    
    var matches = Regex.Matches(str, "[aeiou]+").OfType<Match>();
    
    return matches.Any()
      ? matches.Select(x => x.Value.Length).Max()
      : 0;
  }
}
11 months agoRefactorDiscuss
8 kyu
Find out whether the shape is a cube
Python:

def cube_checker(volume, side):
    return volume > 0 and volume == side ** 3
11 months agoRefactor
def cube_checker(volume, side):
    return volume == side ** 3 if volume > 0 and side > 0 else False
11 months agoRefactorDiscuss
6 kyu
Multiples of 3 or 5
C#:

using System.Linq;

public static class Kata
{
  public static int Solution(int value)
  {
    return Enumerable
      .Range(0, value)
      .Where(x => x % 3 == 0 || x % 5 == 0)
      .Sum();
  }
}
11 months agoRefactorDiscuss
4 kyu
Top Down Movement System
C#:

using System;
using System.Collections.Generic;
using System.Linq;

namespace TopDownMovement
{
    public class PlayerMovement
    {
        public Tile Position { get; private set; }
        public Direction Direction { get; private set; }
        List<Direction> directions = new List<Direction>();
        
        public PlayerMovement(int x, int y)
        {
            Position = new Tile(x, y);
        }
        
        public void Update()
        {
            var currentDirections = new List<Direction>();
        
            if (Input.GetState(Direction.Up))
            {
                currentDirections.Add(Direction.Up);
            }
            
            if (Input.GetState(Direction.Down))
            {
                currentDirections.Add(Direction.Down);
            }
            
            if (Input.GetState(Direction.Left))
            {
                currentDirections.Add(Direction.Left);
            }
        
            if (Input.GetState(Direction.Right))
            {
                currentDirections.Add(Direction.Right);
            }
            
            // order the directions as they were pressed
            currentDirections = directions
              .Where(x => currentDirections.Contains(x))
              .Union(currentDirections)
              .ToList();
            
            var direction = Direction;
            
            // atleast 1 button pressed
            if (currentDirections.Any())
            {
                // direction not set yet or direction no longer pressed
                if (!currentDirections.Contains(direction))
                {
                    // most significant pressed direction
                    direction = currentDirections.First();
                }
                
                var newDirections = currentDirections.Where(x => !directions.Contains(x));

                // new direction pressed
                if (newDirections.Any())
                {
                    direction = newDirections.First();
                    currentDirections = newDirections.Union(currentDirections).ToList();
                }
                else if (Input.GetState(Direction)) // last direction still pressed
                {
                    if (Direction == Direction.Up)
                    {
                        Position = new Tile(Position.X, Position.Y + 1);
                    }
                    else if (Direction == Direction.Down)
                    {
                        Position = new Tile(Position.X, Position.Y - 1);
                    }
                    else if (Direction == Direction.Left)
                    {
                        Position = new Tile(Position.X - 1, Position.Y);
                    }
                    else // Right
                    {
                        Position = new Tile(Position.X + 1, Position.Y);
                    }
                }
            }
            
            Console.WriteLine(direction.ToString());
            
            Direction = direction;
            directions = currentDirections;
        }
    }
}
11 months agoRefactorDiscuss
7 kyu
Custom Accessors
C#:

namespace CustomAccessors 
{
  using System;
  
  public class NumericAccessor
  {
    private int _number;

    public int Number
    {
        get
        {
            return _number / 2;
        }
        set
        {
            if (value % 2 == 0)
            {
                _number = value;
            }
            else
            {
                throw new ArgumentException("value not divisble by 2");
            }
        }
    }
  }
}
11 months agoRefactorDiscuss
7 kyu
Cipher
C#:

using System.Linq;

public static class Kata
{
  public static string Encode(string str)
  {
    return string.Join("", str.Select(x => (char)(x * 6)));
  }
  
  public static string Decode(string str)
  {
    return string.Join("", str.Select(x => (char)(x / 6)));
  }
}
11 months agoRefactorDiscuss
7 kyu
String Calculator
C#:

using System.Linq;

public static class Kata
{
  public static int AddStrings(string numbers)
  {
    return numbers.Replace(" ", "").Split(',').Select(x => int.Parse(x)).Sum();
  }
}
11 months agoRefactorDiscuss
6 kyu
Basics 05: Text Search
C#:

namespace smile67Kata
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text.RegularExpressions;

    public class Kata 
    {
        public List<int> searchText(string text, string pattern, bool behind) 
        {
            return (text == "" || pattern == "")
              ? new List<int>()
              : Regex.Matches(text, behind ? pattern : $"(?={pattern})")
                .OfType<Match>()
                .Select(x => x.Index)
                .ToList();
        }
    }
}
11 months agoRefactorDiscuss
6 kyu
Find the odd int
C#:

using System.Linq;

namespace Solution
{
  class Kata
  {
    public static int find_it(int[] seq) 
    {
      return seq.First(x => seq.Count(y => y == x) % 2 == 1);
    }
  }
}
11 months agoRefactorDiscuss
6 kyu
Decode the Morse code
C#:

class MorseCodeDecoder
{
	public static string Decode(string morseCode)
	{
		var code = morseCode.Trim().Replace("   ", " | ").Split(' ');
    string message = "";
    
    foreach (var codeLetter in code)
    {
      message += codeLetter == "|" ? " " : MorseCode.Get(codeLetter);
    }
    
    return message;
	}
}
11 months agoRefactorDiscuss
7 kyu
Simple Fun #48: Higher Version
JavaScript:

function higherVersion(ver1, ver2) {
  var v1 = ver1.split(".").map((x) => parseInt(x));
  var v2 = ver2.split(".").map((x) => parseInt(x));
  
  for (var x = 0; x < v1.length; x++) {
    if (v1[x] == v2[x]) {
      continue;
    }
    
    return v1[x] > v2[x];
  }
  
  return false;
}
11 months agoRefactorDiscuss
7 kyu
Airport itinerary
C++:

std::string itinerary(std::vector<Route> travel)
{
  std::string route = travel.at(0).in + "-" + travel.at(0).out;
  
  for (int x = 1; x < travel.size(); x++)
  {
    if (travel.at(x - 1).out != travel.at(x).in)
    {
      route += "-" + travel.at(x).in + "-" + travel.at(x).out;
    }
    else
    {
      route += "-" + travel.at(x).out;
    }
  }
  
  return route;
}
11 months agoRefactorDiscuss
7 kyu
Ch4113ng3
JavaScript:

function nerdify(txt) {
  return txt
    .replace(/a/ig, "4")
    .replace(/e/ig, "3")
    .replace(/l/g, "1"); 
}
11 months agoRefactorDiscuss
6 kyu
Implement Pagination
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public class Pagination<T>
{
  readonly IEnumerable<T> source;
  
  public IEnumerable<T> Items
  {
    get { return source.Skip((CurrentPage - 1) * ItemsPerPage).Take(ItemsPerPage); }
  }
  
  int currentPage = 1;
  public int CurrentPage
  {
    get { return currentPage; }
    set
    {
      if (value < 1)
      {
        value = 1;
      }
      
      currentPage = value;
    }
  }
  
  int itemsPerPage = 10;
  public int ItemsPerPage
  {
    get { return itemsPerPage; }
    set
    {
      if (value < 1)
      {
        value = 10;
      }
      
      itemsPerPage = value;
    }
  }
  
  public int Total
  {
    get { return source.Count(); }
  }
  
  public int TotalPages
  {
    get { return (int)Math.Ceiling((double)Total / (double)ItemsPerPage); }
  }

  public Pagination(IEnumerable<T> source)
  {
    this.source = source;
  }
}
11 months agoRefactorDiscuss
5 kyu
Event & Delegate
C#:

using System;
using System.Collections.Generic;

public class PersonEventArgs : EventArgs
{
    public string Name { get; set; }

    public PersonEventArgs(string name)
    {
        Name = name;
    }
    
    public PersonEventArgs() { }
}

public class Publisher
{
    public delegate void ContactNotifyEventHandler(object sender, PersonEventArgs e);
    public event ContactNotifyEventHandler ContactNotify;

    public void CountMessages(List<string> peopleList)
    {
        var dict = new Dictionary<string, int>();
        
        foreach (string person in peopleList)
        {
            if (!dict.ContainsKey(person))
            {
                dict.Add(person, 1);
            }
            else if (++dict[person] % 3 == 0)
            {
                ContactNotify(this, new PersonEventArgs(person)); // Notify subscribers
            }
        }
    }
}
11 months agoRefactorDiscuss
using System;
using System.Collections.Generic;

public class PersonEventArgs : EventArgs
{
    public string Name { get; set; }

    public PersonEventArgs(string name)
    {
        Name = name;
    }
    
    public PersonEventArgs() : this("Default") { }
}

public class Publisher
{
    public delegate void ContactNotifyEventHandler(object sender, PersonEventArgs e);
    public event ContactNotifyEventHandler ContactNotify;

    public void CountMessages(List<string> peopleList)
    {
        var dict = new Dictionary<string, int>();
        
        foreach (string person in peopleList)
        {
            if (!dict.ContainsKey(person))
            {
                dict.Add(person, 1);
            }
            else if (++dict[person] % 3 == 0)
            {
                ContactNotify(this, new PersonEventArgs(person)); // Notify subscribers
            }
        }
    }
}
11 months agoRefactorDiscuss
6 kyu
Item-Counter
C#:

using System;
using System.Linq;

namespace ItemCounterKata
{
    public class ItemCounter<T>
    {
        readonly T[] items;

        public int DistinctItems
        {
            get
            {
                return items.Distinct().Count();
            }
        }

        public int GetCount(T item)
        {
            if (item == null)
            {
                throw new ArgumentNullException();
            }
            
            if (!items.Any(x => x.Equals(item)))
            {
                throw new InvalidOperationException();
            }
            
            return items.Count(x => x.Equals(item));
        }

        public bool HasItem(T item)
        {
            return items.Contains(item);
        }

        public ItemCounter(T[] items)
        {
            if (items == null)
            {
              throw new ArgumentNullException();
            }
        
            this.items = items;
        }
    }
}
11 months agoRefactorDiscuss
7 kyu
Making Copies
C#:

using System;
using System.Collections.Generic;

public static class ListExtensions
{
  public static List<T> Copy<T>(this List<T> lst)
  {
    return new List<T>(lst);
  }
}
11 months agoRefactorDiscuss
7 kyu
Greet Me
JavaScript:

var greet = function(name) {
  return `Hello ${name[0].toUpperCase() + name.slice(1).toLowerCase()}!`
};
11 months agoRefactorDiscuss
7 kyu
Pitches and Notes
C#:

using System;
using System.Linq;

public static partial class Kata
{
  public static string GetNote(double pitch)
  {
    return NotesDictionary.ContainsKey(pitch)
      ? NotesDictionary[pitch] 
      : NotesDictionary[NotesDictionary.Keys
        .First(x => pitch > x ? pitch % x == 0 : x % pitch == 0)];
  }
}
11 months agoRefactorDiscuss
7 kyu
Array element parity
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  public static int Solve(List<int> arr)
  {
    return arr.First(x => !arr.Any(y => y == -x));
  }
}
11 months agoRefactorDiscuss
6 kyu
Vault experience (3): Populate the vaults
C#:

using System;
using System.Collections.Generic;

public static class Vault
{
  public static List<Dweller> PopulateMyVault(int countOfDweller)
  {
    var dwellers = new List<Dweller>();

    if (countOfDweller == 0)
    {
      return dwellers;
    }
    
    dwellers.Add(new Dweller(Gender.Mr, Position.overseer));
    
    for (int x = 0; x < countOfDweller - 1; x++)
    {
      if (x % 2 == 0)
      {
        dwellers.Add(new Dweller(Gender.Mrs));
      }
      else
      {
        dwellers.Add(new Dweller(Gender.Mr));
      }
    }
    
    if (countOfDweller > 2 && countOfDweller % 2 == 1)
    {
      dwellers[2] = new Dweller(Gender.Mrs);
    }
    
    if (countOfDweller > 50)
    {
      dwellers[49] = new Dweller(Gender.Mrs, Position.overseer);
    }
    
    return dwellers;
  }
}
11 months agoRefactorDiscuss
6 kyu
Vault experience (2): Hack my terminal!
C#:

using System;
using System.Linq;
using System.Text.RegularExpressions;

public static class Vault
{
  public static string HackMyTerminal(int passLength, string machineCode)
  {
    if (passLength < 1 || machineCode == null)
    {
      return null;
    }
  
    var matches = Regex.Matches(machineCode, "[a-z]{" + passLength.ToString() + "}", RegexOptions.IgnoreCase)
      .OfType<Match>()
      .Select(x => x.Value)
      .ToList();
    
    if (!matches.Any())
    {
      return null;
    }
    
    string password = matches[0];
    
    foreach (var match in matches)
    {
      bool sameLetter = false;
      for (int x = 0; x < match.Length; x++)
      {
        if (matches.Count(m => match.Substring(x, 1) == m.Substring(x, 1)) > 1)
        {
          sameLetter = true;
          break;
        }
      }
      
      if (!sameLetter)
      {
        return match;
      }
    }
    
    return null;
  }
}
11 months agoRefactorDiscuss
7 kyu
Vault experience (1): Enough water for how many days?
C#:

using System;
using System.Linq;

public static class Vault
{
    public static int ThirstyIn(int water, int[] ageOfDweller)
    {
        if (ageOfDweller.Length == 0) return -1;
    
        return (int)(water / (ageOfDweller.Count(x => x < 18) 
          + (ageOfDweller.Count(x => x > 17 && x < 51) * 2)
          + (ageOfDweller.Count(x => x > 50) * 1.5)));
    }
}
11 months agoRefactorDiscuss
8 kyu
noobCode 01: SUPERSIZE ME.... or rather, this integer!
C#:

using System.Linq;

public class Kata
{
  public static long SuperSize(long num)
  {
    return long.Parse(string.Join("", num.ToString().OrderByDescending(x => x)));
  }
}
11 months agoRefactorDiscuss
8 kyu
No zeros for heros
Python:

def no_boring_zeros(n):
    return int(str(n).strip("0")) if n != 0 else n
11 months agoRefactorDiscuss
7 kyu
Moves in squared strings (I)
Python:

def vert_mirror(strng):
    return "".join(map(lambda x: x[::-1] + "\n", strng.split("\n"))).strip("\n")
        
def hor_mirror(strng):
    return "".join(map(lambda x: x + "\n", strng.split("\n")[::-1])).strip("\n")
    
def oper(fct, s):
    return fct(s)
11 months agoRefactorDiscuss
7 kyu
Every nth array element. (Basic)
Python:

def every(lst, step = 1, start = 0):
    return lst[start::step]
11 months agoRefactorDiscuss
7 kyu
Disemvowel Trolls
Python:

import re

def disemvowel(string):
    return re.sub("[aeiou]", "", string, flags=re.IGNORECASE)
11 months agoRefactorDiscuss
4 kyu
Find the unknown digit
C#:

using System.Text.RegularExpressions;

public class Runes
{
  static string replace(string num, int replacement)
  {
    return num.Replace("?", replacement.ToString());
  }
  
  static bool leadingZero(string num)
  {
    return num.StartsWith("0") && num.Length > 1;
  }

  public static int solveExpression(string expression)
  {
    var items = Regex.Matches(expression, @"\-?[\d\?]+");
    
    string a = items[0].Value;
    string op = expression.Substring(a.Length, 1);
    string b = items[1].Value;
    string c = items[2].Value;
    
    // b consumed the - operator
    if (a.Length + b.Length + c.Length > expression.Length - 2)
    {
      b = b.Substring(1);
    }
    
    for (int x = 0; x < 10; x++)
    {
      if (!expression.Contains(x.ToString()))
      {
        string ar = replace(a, x);
        string br = replace(b, x);
        string cr = replace(c, x);
      
        if (!leadingZero(ar) && !leadingZero(br) && !leadingZero(cr))
        {
          int ai = int.Parse(ar);
          int bi = int.Parse(br);
          int ci = int.Parse(cr);
        
          if ((op == "+" && ai + bi == ci)
            || (op == "-" && ai - bi == ci)
            || (op == "*" && ai * bi == ci))
          {
            return x;
          }
        }
      }
    }
    
    return -1;
  }
}
11 months agoRefactorDiscuss
using System.Text.RegularExpressions;using System;

public class Runes
{
  static string replace(string num, int replacement)
  {
    return num.Replace("?", replacement.ToString());
  }
  
  static bool leadingZero(string num)
  {
    return num.StartsWith("0") && num.Length > 1;
  }

  public static int solveExpression(string expression)
  {
    var items = Regex.Matches(expression, @"\-?[\d\?]+");
    Console.WriteLine(expression);
    
    string a = items[0].Value;
    string op = expression.Substring(a.Length, 1);
    string b = items[1].Value;
    string c = items[2].Value;
    
    // b consumed the - operator
    if (a.Length + b.Length + c.Length > expression.Length - 2)
    {
      b = b.Substring(1);
    }
    
    for (int x = 0; x < 10; x++)
    {
      if (!expression.Contains(x.ToString()))
      {
        string ar = replace(a, x);
        string br = replace(b, x);
        string cr = replace(c, x);
      
        if (!leadingZero(ar) && !leadingZero(br) && !leadingZero(cr))
        {
          int ai = int.Parse(ar);
          int bi = int.Parse(br);
          int ci = int.Parse(cr);
        
          if ((op == "+" && ai + bi == ci)
            || (op == "-" && ai - bi == ci)
            || (op == "*" && ai * bi == ci))
          {
            return x;
          }
        }
      }
    }
    
    return -1;
  }
}
11 months agoRefactorDiscuss
4 kyu
Sum Strings as Numbers
C#:

using System;
using System.Numerics;

public static class Kata
{
    public static string sumStrings(string a, string b)
    {
        if (a.Length == 0) a = "0";
        if (b.Length == 0) b = "0";
        return (BigInteger.Parse(a) + BigInteger.Parse(b)).ToString();
    }
}
11 months agoRefactorDiscuss
5 kyu
Valid Parentheses
C#:

public class Parentheses
{
    public static bool ValidParentheses(string input)
    {
        int count = 0;
        
        foreach (var letter in input)
        {
            if (letter == '(')
            {
                count++;
            }
            else if (letter == ')')
            {
                count--;
            }
            
            
            if (count < 0)
            {
                return false;
            }
        }
        
        return count == 0;
    }
}
11 months agoRefactorDiscuss
7 kyu
Simple Fun #136: Missing Values
C#:

using System;
using System.Linq;

namespace myjinxin
{
  public class Kata
  {
    public int MissingValues(int[] arr)
    {
      int? once = null;
      int? twice = null;
      
      foreach (int num in arr)
      {
        if (arr.Count(x => x == num) == 1)
        {
          once = num;
        }
        else if (arr.Count(x => x == num) == 2)
        {
          twice = num;
        }
        
        if (once != null && twice != null)
        {
          break;
        }
      }
      
      return (int)(once * once * twice);
    }
  }
}
11 months agoRefactorDiscuss
8 kyu
Tip Calculator
Python:

from math import ceil

def calculate_tip(amount, rating):
    rating=rating.lower()

    if rating == "terrible":
        return 0
        
    if rating == "poor":
        return ceil(amount*0.05)
    
    if rating == "good":
        return ceil(amount*0.10)
        
    if rating == "great":
        return ceil(amount*0.15)
        
    if rating == "excellent":
        return ceil(amount*0.20)
        
    return"Rating not recognised"
        
        
    
11 months agoRefactorDiscuss
5 kyu
First non-repeating character
C#:

using System.Linq;

public class Kata
{
  public static string FirstNonRepeatingLetter(string s)
  {
    string sLower = s.ToLower();
    int index = -1;
    
    for (int x = 0; x < sLower.Length; x++)
    {
      if (sLower.Count(l => l == sLower[x]) == 1)
      {
        index = x;
        break;
      }
    }
  
    return (index == -1) ? "" : s.Substring(index, 1);
  }
}
11 months agoRefactorDiscuss
6 kyu
ASCII Fun #1: X- Shape
C#:

using System;

public static class Kata
{
  public static string X(int n)
  {
    string drawing = "";
    int pos = 0;
    int delta = 1;
  
    for (int x = 0; x < n; x++)
    {
      drawing += line(pos, n);
      
      if (pos == (int)(n / 2))
      {
        delta = -1;
      }
      
      pos += delta;
    }
    
    return drawing.Trim();
  }
  
  private static string line(int pos, int n)
  {
    string line = "";
    int separation = (int)(n / 2) + 1;
  
    for (int x = 0; x < separation; x++)
    {
      line += x == pos ? "■" : "□";
    }
    
    for (int x = separation - 2; x > -1; x--)
    {
      line += x == pos ? "■" : "□";
    }
    
    return line + "\n";
  }
}
11 months agoRefactorDiscuss
6 kyu
Reverse or rotate?
C#:

using System;
using System.Linq;

public class Revrot 
{
    public static string RevRot(string strng, int sz)
    {
        if (sz == 0 || sz > strng.Length) return "";
    
        string result = "";
        
        for (int x = 0; x < strng.Length - sz + 1; x += sz)
        {
          string chunk = strng.Substring(x, sz);
          double sum = 0;
          
          foreach (var letter in chunk)
          {
            sum += Math.Pow(double.Parse(letter.ToString()), 3);
          }
          
          if (sum % 2 == 0)
          {
            result += new string(chunk.Reverse().ToArray());
          }
          else
          {
            result += chunk.Substring(1) + chunk.Substring(0, 1);
          }
        }
        
        return result;
    }
}
11 months agoRefactorDiscuss
7 kyu
You're a square!
C#:

using System;

public class Kata
{
  public static bool IsSquare(int n)
  {
    double sqrt = Math.Sqrt(n);
    return sqrt == (long)sqrt;
  }
}
11 months agoRefactorDiscuss
7 kyu
Descending Order
C#:

using System;
using System.Linq;

public static class Kata
{
  public static int DescendingOrder(int num)
  {
    return int.Parse(string.Join("", num.ToString().OrderByDescending(x => x)));
  }
}
11 months agoRefactorDiscuss
7 kyu
Vowel Count
C#:

using System;
using System.Linq;

public static class Kata
{
    public static int GetVowelCount(string str)
    {
        var vowels = "aeiou";

        return str.Count(x => vowels.Contains(x));
    }
}
11 months agoRefactorDiscuss
8 kyu
Count of positives / sum of negatives
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public class Kata
{
    public static int[] CountPositivesSumNegatives(int[] input)
    {
        return input == null || input.Length == 0
        ? new int[0]
        : new int[] { input.Count(x => x > 0), input.Where(x => x < 0).Sum() };
    }
}
11 months agoRefactorDiscuss
8 kyu
Double Char
C#:

public class Kata
{
  public static string DoubleChar(string s)
  {
    string ret = "";
    
    foreach (char c in s)
    {
      string letter = c.ToString();
      ret += letter + letter;
    }
    
    return ret;
  }
}
11 months agoRefactorDiscuss
8 kyu
Remove First and Last Character
C#:

using System;

public class Kata
{
    public static string Remove_char(string s)
    {
        return s.Substring(1, s.Length - 2);
    }
}
11 months agoRefactorDiscuss
8 kyu
Convert number to reversed array of digits
C#:

using System;
using System.Collections.Generic;
using System.Linq;

namespace Solution
{
  class Digitizer
  {
    public static long[] Digitize(long n)
    {
      return n.ToString().Reverse().Select(x => long.Parse(x.ToString())).ToArray();
    }
  }
}
11 months agoRefactor
using System;
using System.Collections.Generic;
using System.Linq;

namespace Solution
{
  class Digitizer
  {
    public static long[] Digitize(long n)
    {
      return n.ToString()
        .ToCharArray()
        .Select(x => long.Parse(x.ToString()))
        .Reverse()
        .ToArray();
    }
  }
}
11 months agoRefactorDiscuss
8 kyu
Return Negative
JavaScript:

function makeNegative(num) {
  return num > 0 ? -num : num;
}
11 months agoRefactorDiscuss
8 kyu
Sum without highest and lowest number
C#:

using System;
using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  public static int Sum(int[] numbers)
  {
    if (numbers == null || numbers.Length < 3)
    {
      return 0;
    }
    
    var nums = new List<int>(numbers);
    
    nums.Remove(nums.Max());
    nums.Remove(nums.Min());
    return nums.Sum();
  }
}
11 months agoRefactorDiscuss
8 kyu
String repeat
Python:

def repeat_str(repeat, string):
    return string * repeat
11 months agoRefactorDiscuss
8 kyu
You only need one - Beginner
C#:

using System;
using System.Linq;

public class Kata
{
  public static bool Check(object[] a, object x)
  {
    return a.Contains(x);
  }
}
11 months agoRefactorDiscuss
8 kyu
Sum of positive
C#:

using System;
using System.Linq;

public class Kata
{
  public static int PositiveSum(int[] arr)
  {
    return arr.Where(x => x > -1).Sum();
  }
}
11 months agoRefactorDiscuss
8 kyu
Even or Odd
C#:

using System;

namespace Solution
{
  public class SolutionClass
  {
    public static string EvenOrOdd(int number)
    {
      return number % 2 == 0 ? "Even" : "Odd";
    }
  }
}
11 months agoRefactorDiscuss
8 kyu
Reversed sequence
C#:

using System;

public static class Kata
{
  public static int[] ReverseSeq(int n)
  {
    var nums = new int[n];
    
    for (int x = n; x > 0; x--)
    {
      nums[n - x] = x;
    }
    
    return nums;
  }
}
11 months agoRefactorDiscuss
8 kyu
5 without numbers !!
Python:

def unusual_five():
    return len("     ")
11 months agoRefactorDiscuss
7 kyu
Pull your words together, man!
C#:

using System;

public static class Kata
{
  public static string Sentencify(string[] words)
  {
    string s = string.Join(" ", words);
    return s.Substring(0, 1).ToUpper() + s.Substring(1) + ".";
  }
}
1 year agoRefactorDiscuss
8 kyu
Counting sheep...
C#:

using System.Linq;

public static class Kata
{
  public static int CountSheeps(bool[] sheeps)
  {
    return sheeps.Count(x => x);
  }
}
1 year agoRefactorDiscuss
8 kyu
Remove String Spaces
C#:

namespace Solution 
{
  public static class SpacesRemover
  {
    public static string NoSpace(string input)
    {
        return input.Replace(" ", "");
    }  
  }
}
1 year agoRefactorDiscuss
7 kyu
List Filtering
C#:

using System.Collections.Generic;
using System.Linq;

public class ListFilterer
{
   public static IEnumerable<int> GetIntegersFromList(List<object> listOfItems)
   {
      return listOfItems
        .Where(x => x.GetType() == typeof(int))
        .Cast<int>()
        .ToList<int>();
   }
}
1 year agoRefactorDiscuss
8 kyu
Convert a Number to a String!
C#:

using System;

public class Kata
{
  public static string NumberToString(int num)
  {
    return num.ToString();
  }
}
1 year agoRefactorDiscuss
8 kyu
Jenny's secret message
C#:

using System;

public static class Kata
{
  public static string greet(string name)
  {
    if(name == "Johnny")
        return "Hello, my love!";
    return "Hello, " + name + "!";
  }
}
1 year agoRefactorDiscuss
7 kyu
Lowercase strings in array
C#:

using System.Linq;

public class Kata
{
  public static object[] ArrayLowerCase(object[] arr)
  {
    return arr.Select(x => (x is string) ? (x as string).ToLower() : x).ToArray();
  }
}
1 year agoRefactorDiscuss
8 kyu
Count Odd Numbers below n
C#:

using System;

public static class Kata
{
  public static ulong OddCount(ulong n)
  {
    return (ulong)(n / 2);
  }
}
1 year agoRefactorDiscuss
8 kyu
Opposite number
C#:

using System;

public class Kata
    {
        public  static int Opposite(int number)
        {
            return -number;
        }
    }
1 year agoRefactorDiscuss
7 kyu
FIXME: Get Full Name
C#:

public class Dinglemouse
{
  private string firstName;
  private string lastName;
  public string FullName
  {
    get
    {
      return (firstName + " " + lastName).Trim();
    }
  }
  
  public Dinglemouse(string firstName, string lastName)
  {
    this.firstName = firstName.Trim();
    this.lastName = lastName.Trim();
  }
}
1 year agoRefactorDiscuss
7 kyu
The once rollable dice
C#:

using System;

public class Character
{
  Random ran = new Random();
  public string Name;
  public int Opness;

  public Character(string name, int opness)
  {
    this.Name = name;
    this.Opness = opness;
  }
  
  public int Attack()
  {
    return ran.Next(1, 21) + this.Opness;  // Chosen by fair d20 roll
                                                    // Guaranteed to be random
  }
}
1 year agoRefactorDiscuss
6 kyu
Sum of Digits / Digital Root
C#:

using System;

public class Number
{
  public int DigitalRoot(long n)
  {
    if (n < 10)
    {
      return (int)n;
    }

    var nums = n.ToString();

    long ret = 0;
    for (int x = 0; x < nums.Length; x++)
    {
      ret += Convert.ToInt64(nums.Substring(x, 1));
    }

    return (int)DigitalRoot(ret);
  }
}
1 year agoRefactorDiscuss
7 kyu
Isograms
C#:

using System;
using System.Linq;

public class Kata
{
  public static bool IsIsogram(string str) 
  {
    return str.ToLower().Distinct().ToList().Count == str.Length;
  }
}
1 year agoRefactorDiscuss
6 kyu
Take a Ten Minute Walk
C#:

using System.Linq;

public static class Kata
{
  static int numberOfOccurances(this string[] array, string occurance)
  {
    return array.Where(x => x == occurance).ToList().Count;
  }

  public static bool IsValidWalk(string[] walk)
  {
    var n = walk.numberOfOccurances("n");
    var s = walk.numberOfOccurances("s");
    var e = walk.numberOfOccurances("e");
    var w = walk.numberOfOccurances("w");
  
    return walk.Length == 10 && n == s && e == w;
  }
}
1 year agoRefactorDiscuss
6 kyu
Find The Parity Outlier
C#:

using System.Collections.Generic;
using System.Linq;
using System;

public class Kata
{
  public static int Find(int[] integers)
  {
    int odd = 0;
    int even = 0;
    
    for (int x = 0; x < 3; x++)
    {
      if (integers[x] % 2 == 0)
      {
        even++;
      }
      else
      {
        odd++;
      }
    }
    
    int rem = (odd > even) ? 0 : 1;
    
    foreach (int num in integers)
    {
      if (num % 2 == rem)
      {
        return num;
      }
    }
    
    return -1;
  }
}
1 year agoRefactorDiscuss
6 kyu
Unique In Order
C#:

using System.Collections.Generic;
using System.Linq;

public static class Kata
{
  public static IEnumerable<T> UniqueInOrder<T>(IEnumerable<T> iterable) 
  {
    // empty collection; return it
    if (iterable.ToList().Count == 0)
    {
      return iterable;
    }
  
    // List<T> for return value
    var ret = new List<T>();
    
    // grab the first T in iterable
    var last = iterable.ToList()[0];
    
    // that's always the first T in our return List
    ret.Add(last);
    
    // iterate over iterable
    foreach (var item in iterable)
    {
      // if we encount an item that differs from the last one encountered
      if (!item.Equals(last))
      {
        // add it to; we know it's unique
        ret.Add(item);
      }
      
      // set our last item
      last = item;
    }
    
    return ret;
  }
}
1 year agoRefactorDiscuss
8 kyu
Multiply
C#:

public class CustomMath {
    public static int multiply(int a, int b) {
        return a * b;
    }
}
1 year